{"IRxsjPGh1oQ": [["99.18", 388.68035532515967, "place where it's equal to 0, then g - p(g) / p'(g) is a better approximation, where p' is just the derivative of p."], ["151.82", 256.671857704853, "a better guess is just shown right here, is g - g^2 - k, all divided by 2g."], ["207.38", 209.84922286384446, "It basically says check to see am I close enough."], ["48.54", 199.61099904692514, "coefficients and powers, so it's a_n * x to the n-th power + a_n - 1 * x to the n minus first power and so on."], ["84.24", 175.88873405424297, "Makes sense, if we combine the value of x such that x^2 - 24 is equal to 0, we're done because that's"]], "cHpto4Yc45o": [["450.55", 217.2759084972004, "And finally we have a way to print the location."], ["386.84", 215.57521451900823, "But even here, we see that a decision has been made, as simple as it is."], ["493.53", 213.45683462649757, "This is probably the only really interesting function we have here in fields, interesting method."], ["378.32", 212.6283729015861, "Come over to the code, and look at class location."], ["482.66", 186.294702627242, "Fields, like Locations, are also quite simple."]], "BWBUXxyRILw": [["18.8", 35.39458424341544, "In this penultimate lecture, we're going to have a set of cameo appearances, because we want to show you how the tools that you've been"], ["29.53", 34.193453912862296, "the tools you've been thinking about-- are the basis for a great variety of really interesting applications."], ["52.71", 22.306791104484905, "Fredo Durand, Sam Madden, Dana Moshkovitz, Collin Stultz, and Russ Tedrake--"], ["66.59", 9.640983801186843, "from graphics, from big data and databases, from computational theory, from medical applications, and from robotics--"]], "jx0WwCGCh-0": [["69.48", 165.50870276870623, "Well, things like ints, floats, strings, and tuples are immutable."], ["541.46", 165.00233114546262, "I got the value of Techs, which pointed to the list."], ["408.05", 158.24735851645966, "If I print out Univs, I get out MIT, Cal Tech, RPI, followed by Harvard, Yale, Brown."], ["33.17", 148.79236932225433, "the parentheses to distinguish a list or to create a list, as opposed to a tuple."], ["222.08", 139.25873054350853, "So think of this as Techs and Ivys sitting up in that global environment."]], "ADB7EXNTVqs": [["39.8", 82.46956349821977, "More generally, we'll talk about what happens when we draw samples from different kinds of distributions."], ["25.24", 69.94429263835912, "Suppose I flipped it 1,200 times and got 800 tails and 400 heads."]], "Rjk7yfFQCPI": [["228.78", 141.57655584067726, "time, not in terms of actual elapsed time, but in terms of the number of basic steps that the computer executes."], ["262.39", 128.00568562005154, "arithmetic operations, and accessing an object in memory, all take a constant amount of time."], ["338.5", 124.83749578808435, "This is trying to see if a particular element is in a list."], ["245.9", 122.59720712519695, "We're going to use that as our model of computation."], ["97.74", 120.92065882461725, "this, but to give you a sense of how you begin thinking about computational complexity."]], "ky6rSZOoBws": [["40.34", 246.12151970916955, "What we want to do is look at the variance relative to the mean."], ["16.55", 212.46198130051354, "the context of the mean and therefore is not particularly useful for comparing the variance of sets with widely divergent means."], ["272.84", 205.91016437497757, "and produces a histogram within bins that are evenly spaced across the range defined by the minimum and maximum values in A."], ["83.03", 178.15093235716162, "Notice that if the mean is near 0, small changes in the mean lead to large but not necessarily meaningful changes in the"], ["235.76", 176.22491384727326, "Let's digress for a minute now and look at how we produce a histogram."]], "LxI8Mko_MKs": [["22.91", 94.26031282580833, "specification, and glass box testing where we exercise paths through the code."], ["32.08", 76.7956395043393, "That is, isolating the location of bugs in our code."]], "-VjpRFaz5f4": [["43.79", 5.652549463309926, "For example, might be able to toss those away."], ["23.33", 5.07896317627447, "If not, I can use the difference between what I'm looking for and that element to decide that it has to be in the lower half."]], "j9as5xwUwA8": [], "SQUNkr4bQyQ": [["138.71", 128.49134088385102, "So we want to maximize the product of the likelihoods of the errors."], ["437.75", 119.3191720497226, "Finding the values of the parameters for the prediction that minimize the sum of the square of the errors is a very common thing to want to do to"], ["100.89", 106.53743451119675, "So if I'm going to go off and look at the likelihood of each observation, what I'm going to do is to then multiply all those together."], ["73.25", 105.2002414984104, "And the likelihood gets bigger the smaller the error is."], ["447.33", 104.37332262364795, "And in fact, pylab has a built-in procedure that will do that for us."]], "CJh-mscFZgU": [["49.14", 287.28350798402016, "And if we just go over to my idle screen here, I'm just printing out-- so what's the value of Univs, what's the value of Univs 1."], ["27.92", 208.65916173984152, "And so this says I'm going to let e, in turn, be each element in Univs."], ["246.94", 203.6570647810388, "And this is going to look at an example of both where things go wrong when I'm iterating over lists and how I get around that."], ["405.61", 186.5286640886678, "So this is changing L1, but this is looping over a copy of L1."], ["114.62", 185.41295447714484, "And it's a method that, in fact, has a side effect."]], "ftu1cc1A8q8": [["44.1", 134.22917649143483, "Complete means that for every node in that subgraph, it has an edge to every other node in that subgraph."], ["112.77", 104.23017919191823, "And in essence, partition the graph up into clusters or components of people that all know one another."], ["59.62", 100.88429939009876, "Now there are lots of places where this is valuable."], ["29.16", 98.91374278703334, "There are some problems for which finding subgraphs or subsections of a graph can be important, especially subgraphs that are complete."], ["133.69", 88.36685859663754, "It's used in computational biology to analyze gene expression data."]], "pflzzK47wEo": [["21.7", 50.11297045447308, "It also has all of the handouts associated with the course, including the syllabus and calendar."], ["31.14", 33.65090620115244, "The Discussion section has a question and answer forum, where you can ask questions have them answered by the"], ["53.1", 26.209096471467106, "current enrollment if you click on your username in the top right corner of the page."]], "fwEyyCo5dxo": [["329.67", 127.428247374135, "Of course, if we play the game according to Monty Hall rules, this will never happen, because he won't open the prize door."], ["270.31", 125.22107849018248, "I'm going to simulate it for 100 trials."], ["252.67", 117.57965371093931, "When we work probabilities, we always have to think about whether or not we are looking at independent events or related events."], ["173.34", 117.16381196010684, "It does to most people, but in fact, the argument is flawed."], ["365.53", 114.56166168374625, "The other possibility is a random choice, where Monty will say, if the guest door is one, we'll open either two or three."]], "yGAPgGgodyo": [], "VAAia4PpxZc": [["95.02", 1.4539894653317937, "Halfway through the semester, we'll have a town hall meeting."], ["148.03", 1.4539894653317127, "The moment that you understand a difficult concept, you are the perfect person to answer other people who have yet to understand that concept."]], "j-d7-5lWcT4": [["173.12", 186.42204231022998, "A stub simply simulates parts of the program that are used by the unit being tested."], ["240.55", 167.5136943611376, "That is go back, and check that the program still passes all the tests it used to pass."], ["34.07", 164.39717680585485, "That says take a module, a function for example, and check it."], ["184.97", 149.1710706102735, "For example, by building a table of input-output pairs, and using that to simulate the behavior of that particular piece of code."], ["145.85", 149.16152420182473, "So a test driver is basically a piece of code that does the testing for us."]], "FP4Hw1IEWCA": [["785.3", 140.5891237601121, "If mu is equal to 0 and the variance is equal to 1, we call that the unit normal or maybe the standard normal distribution."], ["41.02", 122.303732446176, "The first procedure here, getData, its job is to read the data in from a text file where we've entered the data."], ["52.8", 120.80275871128673, "So it opens the file, and the first line of the file is just a header line that describes the format of the data in the rest of the file."], ["767.96", 115.19197601785619, "You can see what that means, that is the argument x gets bigger, the probability associated with that becomes exponentially smaller."], ["505.88", 107.77524410131232, "select a certain number of points, in this case 100, from a particular probability distribution, in this case a triangular distribution that goes"]], "kpa7QyOtIHI": [["222.99", 99.51545300394024, "before, except now we've set this equal sign and some numbers after a few of these variable names."], ["49.92", 95.71180642106562, "And number silly walks will be 100, and the cans of spam to be 20."], ["73.02", 95.04630986864514, "If you give it all those variables, and that looks all nice and good."], ["409.45", 83.02664659700463, "And also, you can even specify the things that do not have default values with the keyword assignments, like this."], ["382.44", 80.43046744779261, "So when I do that, it sets the frogs found variable to 80, and everything else to its default values."]], "o8tmvzs6F4Q": [["119.37", 177.5036199831181, "OK, we saw how that computation would take place previously."], ["81.31", 164.90156484668782, "So if I go over to Python, I can load that computation."], ["59.23", 135.91290870010909, "I'm going to input some number for p."], ["184.38", 134.27197239707388, "And if I ask for the value of z, there it is, 243."], ["54.17", 127.54449436097725, "In fact, we just saw it earlier."]], "UreW8x38Z2Y": [["17.35", 102.1979021742758, "Consider the following: on April 29, 2009, CNN, a US television network, broadcast the alarming fact that Mexican health officials suspect that"], ["538.24", 94.26673110599606, "Not much more complicated than the code we just looked at."], ["376.3", 82.80313974428836, "Here's the code, June probability."], ["601.25", 69.3478039099112, "statistical significance of a result depends both upon how the data was derived and how the result was derived."], ["412.92", 60.41440981151921, "increment june48 by 1, and when we're done, we'll compute the probability as usual by dividing by the number of trials, and print the result."]], "WdFrWzyYoQg": [["19.88", 128.4064082976719, "knowledge or how-to methods? What are the basic elements of a computer that enable it to compute"]], "mylsICZfBpo": [["26.25", 168.30947058814644, "In particular, let's go back to that idea that we had earlier of bisection search."], ["209.91", 132.06192795083152, "The logic here is wrong for negative numbers."], ["411.08", 127.58868422409076, "So it turns out that there is a nice, easy way to fix this code."], ["546.05", 123.62659727589553, "And that's the thing showing up here in a triple set of double quotes."], ["36.54", 120.558727346695, "It looks exactly like the code that we wrote as a script."]], "mExCdX2EPyY": [["70.58", 137.69662976461584, "Suppose we wanted to find the minimum airfare from Boston to San Francisco on a Monday or Tuesday."], ["86.32", 114.3019417305399, "So often the objective function involves mins or maxes or biggest or smallest or something like that."], ["164.86", 110.26099539003998, "The goal is to place, in this case, 8 queens on an 8 by 8 board such that none of the queens is attacking each other."], ["269.29", 109.74477575982468, "of optimization problems is that there's almost always a brute force approach that involves an exhaustive enumeration of all the possibilities."], ["23.32", 107.92640333137801, "Or we might want to know what choice of rocket booster and trajectory will provide the minimum transit time for a space capsule to Mars."]], "9rVsdCMxeiA": [["36.34", 117.74576408576328, "compare objects like numbers, Boolean operations on logical expressions, ways to abstract expressions by giving them names,"]], "uuw89vV7bGg": [["165.93", 253.12846894514414, "And there's a few new things I want to point out here."], ["61.69", 214.96791692247805, "\"Are we not drawn onward, we few, drawn onward to new era?\" Another great example of a palindrome."], ["49.26", 189.47787546566136, "Classic example, attributed supposedly to Napoleon, although that's highly unlikely, is something like, \"Able was I ere I saw Elba.\" And if you look at"], ["331.67", 154.23372805575167, "calls isPal on that, and returns the answer computed by that as the answer to the overall solution."], ["184.765", 153.5912955541213, "And in particular, they are going to belong only to this function."]], "mixmc-woOF8": [["238.1", 280.6053373776644, "And if I now look at what collect is, ha, cool."], ["64.18", 228.3371273741365, "We use curly braces to indicate that this is a dictionary, and each of the pairings is a combination of some key, a colon, and some value."], ["254.02", 196.77878914712755, "And indeed, if I want to look at this, I can compare that to monthNumbers of keys."], ["25.4", 192.88966974815602, "So a dictionary's a generalization of a list, but now the indices, the ways to get to elements of the dictionary, don't have to be integers."], ["48.31", 168.75193840650687, "indices, because that implies integers, but as keys, because the keys can be arbitrary in form."]], "nUQtUX3zDoU": [["131.9", 277.5952167673919, "is 35/36, and the probability of not rolling it on each of the die is (35/36)^2 ."], ["77.54", 200.03635019107355, "would it be profitable, given 24 rolls of a pair of dice, to bet against their being at least one double six."], ["578.19", 198.58568426647665, "No sub The key words here are estimating, we will not typically be able to get"], ["617.56", 178.00330740371376, "No sub So for example, if I randomly sample the people in this course, say I'd"], ["190.07", 150.55960902753512, "I'm a skeptic, and I wrote some code to check Pascal's math."]], "LYbCruklFEQ": [["457.74", 68.30638025099994, "With that idea of computational thinking, one of the things that we can then say is we've got a language, we've got abstractions to details."], ["513.1", 56.02063746997778, "One of the key things we saw with computational thinking is that we can think recursively."], ["9.11", 51.07569768612655, "So in fact we want to do two things."], ["138.24", 45.73408652743242, "And yes, I know it's a bad pun-- reading, arithmetic, and writing."], ["148.55", 40.33838866856588, "everywhere, is going to enable the spread of computational thinking as a fundamental skill for every well-educated person."]], "bGx4MAxsVuI": [["16.72", 220.12176737976475, "First line of code, it's the same line we started the last program with."], ["127.94", 209.04231134844264, "So here the x-values will be 0, 1, 2, and 3."], ["63.71", 189.56720331941193, "This function will save whatever the current figure is, in this case figure two, into a file named, in this case, Figure-Eric.png."], ["49.92", 172.78222500636647, "The next two lines begin by changing the figure to figure two, a brand new figure, and then plotting some points on that figure."], ["36.76", 164.79926080396433, "Subsequently executed pylab commands implicitly refer to that figure until another pylab.figure command is executed."]], "mTsArBWQbhs": [["180.27", 158.1692909471995, "For our purposes, just think of it as a way of collecting together objects."], ["249.37", 153.16458727658824, "So in that dictionary under that node, I create initially an empty list."], ["516.4", 152.47033209858856, "Finding a set of notes for which there's a path, or often a path with the maximum length between every pair in the set."], ["201.785", 142.80836243093907, "And the idea is that for every node, as I build the graph up, I want to know to what other nodes can that node connect?"], ["490.64", 123.69267398609858, "The destination node of the last edge is N2, and for every sequence in that the shortest path, the source node of EB is the destination node of EA."]], "3nWlFHGKNAk": [["248.4", 119.47202564401258, "If we add a weight, or a cost, to each edge, then we say the graph is a weighted graph and that says I can solve other kinds of problems."], ["189.85", 112.79970782558844, "And those nodes or vertices are connected by a set of edges or arcs, arrows in this case."], ["211.65", 101.3578741267943, "then we say the graph is a directed graph or a digraph, and the arrows here would be one directional."], ["72.14", 93.67786004368428, "A to C through B, that is, A to B to C, the cost of that flight A to C is the same as the cost from A to B and the cost from B to C. If I have that,"], ["89.19", 88.21315999655496, "I might like to know what's the least expensive airfare between two cities."]], "SVQuLOiHJeE": [["262.86", 447.7112157909437, "Then, move what's left, stack of size one, on to the target location."], ["256.029", 423.50131665285375, "Otherwise, move a smaller stacked on to the spare spot, from the place I started to."], ["235.2", 352.6382021393386, "I've got a little function that basically says, I'm going to print out a move going from a stack labeled as the from stack to the to stack, and"], ["43.11", 184.20210468514242, "And initially, one of those spikes starts off with a stack of 64 different sized discs put on it, holed in the middle so you can lay them out."], ["66.13", 179.90447170039212, "But the idea is that they can only move one disk at a time, and they can never cover up a smaller disc with a larger disc."]], "7-mC6P2B6Ac": [["118.66", 195.1459926220604, "If I go to my Python shell and I type in name = , and then I'm going to use raw_input, which is a Python special function, it takes"], ["230.89", 187.80565077790564, "And I can say, \"Are you Eric\"."], ["46.7", 182.12555004211066, "And for that, we need statements, not expressions."], ["171.54", 172.06336845721458, "And name is now bound to the string Eric."], ["83.28", 163.69473257962818, "And of course, by the way, print can be doing something like actually getting the value of an expression before printing it out."]], "fgrbzv_HQeE": [["160.06", 68.04116873711037, "And those often can be easily solved as a graph search."], ["41.66", 66.63360219547728, "Turns out that for depth first search, the algorithm we've shown you is quite easy to modify."], ["168.32", 66.60985078142825, "Travel through a physical network, whether it's a flight network or whether it's actually something like using your GPS to find driving routes"], ["250.35", 65.5988240806319, "These methods can find optimal solutions to a wide range of problems that are described in this matter, and they're going to be really valuable as"], ["69.77", 64.65122945020232, "And so one needs more sophisticated methods to actually try and solve it."]], "9VqKk8cn6Cg": [["177.29", 170.6158829125658, "Again, I'm going to have something that asks me for an integer that I'm going to deal with."], ["172.4", 167.2812442958116, "It's similar to what I had before, but it's now a little crisper."], ["15.32", 137.8193810389849, "And often, especially in exhaustive enumeration, that sequence of choices is a whole series of things in order."], ["92.24", 136.83859586353907, "I'll do that until I either run out of choices or until I hit a special keyword called break."], ["184.33", 134.10063193711125, "I'll input it and to make sure it's an integer by doing a cast or a type conversion on it."]], "-gLoe0n1CEQ": [["27.27", 19.34312165877361, "Again, we check to see if the first and last character are the same, they are, and that reduces to checking a smaller thing."], ["17.1", 16.35914719541693, "And so at the first step, we check to see are the two end cases the same? They are, and that reduces to checking a smaller thing."]], "mB26qQckcHc": [["44.45", 129.28095153605963, "Which gets me to the topic of today's lecture-- \"There are three kinds of lies, lies, damned lies, and, worst of all, statistics.\" This quote is often"], ["75.42", 118.76810217732513, "In the daze that follows the collision of statistics with the human mind, hardly anyone will notice the difference.\""], ["336.05", 89.97660199442359, "Because if it is, you're likely to get a bad grade in this course, or so might the authors of this article have concluded."], ["145.93", 77.16155243239659, "the same correlation between x and y, and, moreover, if we do a linear regression, we'll see that we get the same curve for each of x and y, as"], ["105.56", 67.83843582315018, "No sub In 1973, the statistician F.J. Handscomb published a paper containing"]], "iw4BEqvvgiw": [["118.65", 173.43383924145445, "A hash function converts that key into an integer and it then uses this integer to index into a list."], ["143.46", 155.10263550502916, "And the idea of a hash function is it's going to map a large space of inputs to a much smaller space of outputs."], ["90.22", 152.00681777706768, "amount of time that's almost independent of the size of the dictionary--"], ["29.68", 142.99689900827826, "efficiency is n*log(n) in order to do the sorting, plus k*log(n) in order to do the search k times."], ["207.07", 131.34916795265497, "And a really good hash function has a uniform distribution-- it minimizes the probability of a collision."]], "jJqP3ZUSy5E": [["81.91", 215.21640823845232, "It creates a pairing up the name to what we call a procedure object."], ["38.09", 196.45929372681178, "pairs a name and the value of the other expression together in a table, if you want to think of it that way, that we call an environment."], ["53.72", 161.65156121678191, "rather, just asking for the value of that name simply goes to the table, and looks up the value, and returns it."], ["17.23", 157.32145630273035, "So we're going to use the idea of what's often called an environment to understand how bindings of variables take place."], ["242.97", 143.59490245745556, "I'm going to bind, in this case, x to 5 and y to 3."]], "NDAb2bewzbI": [["114.86", 83.69855552648716, "So, what we see is that the running time of the greedy algorithm is dominated by the short time, which is O(N log base 2 N)."], ["230.77", 72.43552157076708, "Suppose we were able to do each of the 300 some odd operations that's required in a microsecond, a millionth of a second, then we're talking a"], ["24.95", 71.12937202104042, "Remember, the first step was to sort the items in order of their metric-- so in metric order."], ["181.47", 57.118512820563886, "Well, we need for each combination in the list of all possible combinations, we are going to have to do another set of calculations, which is whose cost"], ["199.66", 56.52596927926898, "multiply them together-- we end up with order O(N 2^N)."]], "jL4wZ8-RjTs": [], "Zoy7t4LbAPY": [["176.31", 264.98869275975306, "It looks a little bit daunting, but it's really not as bad as you think."], ["98.62", 186.5372960090164, "We know that the square root has to lie somewhere between 0 and g."], ["247.92", 176.0813586719589, "On the other hand, if answered squared is bigger than x, then I'm too high and I'm going to reduce the high down to the answer."], ["215.72", 175.45011626941613, "If this is true, then I'm too far apart."], ["186.69", 155.611164790272, "OK, I'm going to pick an epsilon which is going to tell me how close I am, and I'm going to keep track of how many guesses I did as well."]], "zhKN60gDjk8": [["20.98", 167.74433008727632, "With that set of tools, they turn out to be sufficient to give us what we call a Turing complete language."], ["29.87", 135.48235947730112, "So we can compute anything."], ["221.46", 134.47452330521392, "It's got a keyword, def, that tells Python I'm about to create a definition of the procedure."], ["115.05", 131.67162424508174, "computation, to wrap it up in a package and then treat that function as if it were a primitive."], ["170.13", 123.81992667931857, "set of mechanical steps, that recipe within a particular scope so that we can treat that function, that"]], "e7IErqC25nU": [["189.73", 202.38845855076173, "And the code, nice and simple."], ["184.53", 175.47379620942436, "And then the recursive case is what we just described."], ["120.69", 149.41985078573586, "It takes 2 months for that to happen."], ["106.14", 146.05601036769696, "And in general, we can figure out the formulation of the recursive expression, if you like."], ["46.39", 119.26158246810385, "He assumed that rabbits mate at age of 1 month, and that the gestation period for a rabbit is also a month."]], "QgDq9EieZTg": [["239.62", 107.3785577041717, "The inductive step says that we need to now assume that this statement is true for some value, let's call it k."], ["185.12", 104.21660983097678, "That's powerful, because it's a way of helping us deduce that our code, if we can use it there, works all the time."], ["297.95", 102.31112558279696, "Ah, and that's exactly what I wanted to prove, because this is just that definition where n = k + 1."], ["153.62", 97.80642231583292, "smallest value, which will typically be when n = 0 or n = 1."], ["31.98", 95.43907883432874, "iterMul we know terminates because b starts out initially positive, and each time through the loop, it"]], "J1zJNuEFw2U": [["95.04", 22.114863806334842, "polynomials, if g is an approximation to the root, the place where it's equal to 0, then g - p(g) / p'(g) is a"], ["151.82", 13.666459790823378, "a better guess is just shown right here, is g - g^2 - k, all divided by 2g."], ["48.54", 13.100851243153127, "coefficients and powers, so it's a_n * x to the n-th power + a_n - 1 * x to the n minus first power and so on."], ["143.22", 11.850352333789186, "And in particular, if the polynomial is just something simple, like x^2 + k, then the derivative is just 2x."], ["190.96", 11.675089119251274, "Again, I've got a little epsilon that tells me how close I want to get."]], "bckOwpozezo": [["216.28", 116.92815696997552, "So the remaining words will start on the same line as the current word, except the starting column will be moved over by the width"], ["392.24", 108.27743874574259, "We simply choose the least costly of the alternatives to return as the desk layout for the word list, including the first word."], ["25.45", 90.45094848521379, "Compare how we choose to structure the subproblems for the layout problem versus how we did it for the 0/ 1 knapsack problem."], ["42.77", 74.48047983942267, "Our goal in this problem is to find the optimal layout of words in a paragraph so as to make the result look the most pleasing."], ["100.42", 73.36433353833145, "and this is following the example of Don Knuth and his tech layout language is we simply compute the number of spaces at the end of each line."]], "2Y5CrREsJ-4": [["30.8", 212.35045087476684, "semantics that we need to translate our computational ideas into mechanical steps."], ["43.12", 199.5462352305269, "with those expressions, which is going to let us solve the problems that we want."], ["183.53", 175.36353330590126, "checked, as they did before, but then converted back into low level code."], ["226.61", 166.4835174522169, "data structure and then sequentially converts each step into a low machine instructions and executions."], ["242.2", 148.55342486731087, "In this course, we're going to use Python, which belongs to this class of interpreted programming languages."]], "AU66NP1kQm0": [["24.23", 177.09515720311705, "And as we suggested, what we're mostly interested in is what happens as the size of the inputs gets very large, as it approaches infinity."], ["266.88", 163.98173956121062, "And we'll use big O as a way to give an upper bound on the asymptotic growth of a function."], ["35.86", 163.32212001940294, "I've written a function that's got 3 loops in it."], ["244.63", 160.22676056037156, "We're worrying about it as the problem size goes to infinity."], ["10.66", 123.02244811427335, "And we want to measure it basically as a function of the size of the problem."]], "Zi3q2FB1fDo": [["25.4", 181.82895010701458, "We look over here at the code, we will see that I've replaced drunkTest by something called drunkTestP."], ["40.15", 141.11619250261614, "Also, to simplify the plot, I'm ignoring the maximum and minimum distances, and only plotting the mean for each trial."], ["650.5", 133.92372725443036, "Thank you."], ["103.65", 111.56581845203884, "So we can tell them apart, I'm going to put the distance on a blue solid line, and the square root is going to be on a green dashed line."], ["163.35", 102.17948178617053, "Instead of dwelling on that, what I want to do is go back to something we started with when we first began to put this simulation together."]], "CIld2wLmjXI": [["59.75", 159.07124595367898, "And what this means is that the name is defined at the outermost scope of the program, rather than the scope of the function within which it appears."], ["89.68", 139.70013513985774, "It has much the same form as before."], ["98.01", 116.60913469112623, "Right here, we make a declaration that says the variable numCalls is global."], ["155.31", 116.60461641457945, "The call to fibMeter will, every time it calls it, change numCalls by one."], ["17.51", 92.6473179985936, "When we ran Fibonacci, we might have noticed that as we made the arguments larger and larger, it slowed down."]], "-4Uvn-JUksI": [["170.1", 12.687714019108467, "And if it is well, then, we'll say, I found the thing that I was looking for."], ["390.7", 8.557689379119855, "When the value is less than or equal to zero the loops going to terminate, and inside of it the value decreases every time through the loop."], ["282.83", 7.981030574736187, "One is we're going to look to see whether the thing we're checking for is less than the absolute value of x."], ["158.75", 7.722279015611781, "Once we're there we can then check."], ["151.0", 7.6946611567730505, "If answer cubed is less than x we know that we're not there."]], "R4uDE45cYI4": [["19.48", 247.60971419487032, "They will actually be sufficient to run the simulation."], ["103.857", 219.4840315935284, "drunk to the field, and then calls Walk, gets the number of steps, and appends it to Distances, which eventually it returns."], ["60.82", 183.71672419880937, "And at the end, it returns the distance between the start and the final location of the drunk."], ["75.12", 167.27462748466186, "It begins by creating a drunk, for some reason named Homer."], ["33.6", 129.76924068771038, "It takes three arguments, a field, a drunk, and the number of steps to be walked."]], "aTuYZqhEvuk": [["205.02", 186.8022366078923, "And if we put it into code, in fact, we see something that very nicely builds on that."], ["15.58", 135.1070983359408, "capture a computation and then wrap it up as if it were a primitive, gives the user the ability to treat a function"], ["76.53", 119.50696583442229, "algorithm as capturing computation in a set of what we could call state variables."], ["81.59", 110.88065262128254, "And those variables update or change their values on each iteration through the loop."], ["267.98", 103.24565203596585, "And if I load it into an IDLE environment, then I can certainly say things like, give me the iterative"]], "r-lL6JT665g": [["114.39", 260.29184895166577, "non-deterministic - that is to say, the lack of knowledge about the world makes it impossible to make accurate predictions about the future states."], ["465.45", 195.78638832139637, "It's approximately equal to 0.0001286, or a simpler way to think about it--"], ["320.21", 190.59069644095635, "And then rollN, which merely calls rollDie n times and returns the result of the numbers returned as a string."], ["22.77", 176.05863107742954, "There's something very comforting about Newtonian mechanics."], ["234.3", 173.76419860118114, "To remind you, a stochastic process is any process where the next state might depend on both the previous state and some random element."]], "WntLU2CrfdE": [["32.34", 84.8726570156072, "So at this next stage two of them whelp, at the next stage three of them whelp, at the next stage five of them whelp."], ["14.5", 63.507011920636565, "Which means at the end of the next month, she's still there, but she's given birth or whelped another female."], ["21.18", 55.343630130041994, "The first offspring is now pregnant."]], "FMGal3lXcjw": [["147.115", 194.3831558962138, "And those set of instructions are going to first do a Boolean test."], ["153.97", 173.65517489002062, "It says if the remainder of x divided by 2 is 0 that says if I divide that x by 2 there is no remainder."], ["127.862", 173.25877978604558, "And here's some code, which I also have over here in a Python file."], ["364.16", 134.52090371283663, "We can have nested conditionals."], ["137.29", 133.7647793219673, "This first one that says, this one right there, that says I'm going to, as I did before, ask for some input."]], "qA24CgJ1Zc8": [["34.5", 192.89260429612222, "would be valuable having written it down and gotten the value of an expression to be able to remember, to save it"], ["48.75", 167.9577577167633, "And in Python, the format of that is shown here."], ["8.83", 148.65589951146333, "We can combine them together with operators, so we say 3 plus 4 or 3 plus 4 all in parentheses times 5."], ["69.4", 146.05434216198697, "I'm going to say, give the name pi 3.14159."], ["188.79", 118.24768037035219, "with the name by simply invoking the name, just asking for what is the value pi or pi."]], "f3TskgnL_3U": [["62.7", 203.84448594273775, "or means for assigning a meaning or value to each computation or expression."], ["190.035", 194.18337404628875, "that is, sequences of words that satisfy the syntax of the language, which of those also have a meaning."], ["129.25", 173.8523583250608, "And that tells us which strings of characters and symbols constitute well-formed combinations in the language."], ["270.77", 170.47853323479197, "any static semantic errors? What's the meaning associated with an expression?"], ["48.12", 168.198907413476, "mechanism for combining primitives to form more complex, but legal, expressions."]], "qic9_yRWj5U": [["76.84", 329.78295837933166, "It's 4. x is 3."], ["395.45", 137.55627431370232, "Because the scope within which a variable has a value is defined by the extent of the code boundaries."], ["98.17", 127.54105046472793, "So why does this happen? This is going to give us a chance, again, to look at what"], ["27.145", 121.01962513877038, "I'm going to bind x to be x + y."], ["53.35", 118.96418377193976, "And now inside of Python, I set x to 3."]], "tyESRmeZK1E": [["49.33", 210.94350411055242, "So here's my idle buffer with the definition of the new MIT person class."], ["64.01", 181.4853431052895, "below, in addition to whatever attributes were defined by Person and then also by object, because Person was a subclass of object."], ["14.45", 111.69415058652729, "We're going to then use inheritance to build an MIT Person class that will inherit all of the Person properties, and in addition, provide for this new"], ["99.5", 103.96102113797417, "Person one is going to be an MIT person named Chris."], ["30.28", 100.79455637901998, "We'll make sure that we can assign ID numbers in sequence, so as we allocate people, they'll get a unique ID number in order."]], "PauHW4ObHDo": [], "EeGAH_Es_7s": [["39.21", 201.1395767724548, "A glass-box test suite, a good one, is called path-complete, if every possible path through the code is tested at least once."], ["208.07", 140.5958479677563, "entered, where the body of the loop is executed exactly once, or the body of the loop is executed more than once."], ["243.43", 129.16087345987535, "If I've got a recursive function, I want to test what happens if there's no recursive call, it's just the base case."], ["184.62", 127.28915109041517, "First, make sure that both branches of all if statements are checked."], ["158.42", 113.1783136219065, "Since that's the test, I ought to pick that up as one of the boundary cases."]], "kbrZtHI5CSo": [["359.09", 94.84483924154402, "The lecture code includes implementation of our recursive implementation of chooseBest based on those two alternatives."], ["19.75", 87.1819399437557, "First up is the 0/1 Knapsack problem that we saw in lecture 18."], ["470.12", 73.55877147827053, "So we've defined some helper code here."], ["91.48", 72.16370155577746, "And so what we want to do is to think about how to express the solution for this function as a combination of solutions to subproblems."], ["488.51", 68.2461428981225, "And we've also included a function to build a random list of items that have random values and weights that vary from 1 to 5."]], "vmz9pVWI2S4": [["42.36", 89.90395950285897, "assignment of names to values, how those values are retrieved, and how we can use those ideas to conceptualize new algorithms."], ["28.625", 61.50829720082678, "And in a way, that makes it easier to reuse methods, or to debug or correct them."]], "_FbKIp-6YzY": [["405.97", 123.11913576434206, "in order to compute Fibonacci(n) is order of this Golden Ratio, which is about 1.6^n ."], ["29.93", 106.80208539507913, "Some optimization problems exhibit properties which, if they were true, allow us to come up with a much more computationally efficient way to solve"], ["107.73", 102.67023663428185, "Another property is that in doing this sort of decomposition of the optimization problem into sub-problems, we may discover that the"], ["43.44", 98.29325412659183, "So suppose we have some optimization problem expressed as the function f, where we pass in an argument that has some structure."], ["137.1", 97.47176090569567, "In other words, if we find ourselves computing the answer for the same sub-problem again and again and again."]], "Y0lczs-_w-I": [["28.15", 101.84929676032968, "Starting with guess and check methods, the guess and answer, check it, and then use the results to improve the guess."], ["51.33", 93.0099161554332, "of algorithms called successive approximation, and especially to a very common and very powerful method called bisection search."]], "GometKBrL7E": [["31.19", 75.81501743995086, "In this example, we're trying to find the minimum cost alignment between two sequences, so here are two example four element sequences."], ["363.39", 64.4243933094836, "Finally, at the end, of course, we choose to return the alternative that has the cheapest cost among the three."], ["325.76", 63.953896212591744, "Then we go off and consider the same three alternatives we discussed earlier."], ["312.57", 63.782175514289605, "So, for example, if the first sequences run out, we assume that it's padded with gaps that match any remaining characters"], ["126.26", 62.12305171826233, "Let's see how we can break the alignment process into subproblems."]], "3a2rB3LhRjo": [["234.38", 244.42637260816045, "Here's a generator that will produce successively, for each call to next, all the numbers in the Fibonacci sequence."], ["402.46", 239.72981879238662, "list copying operation instead with a for loop that yields the students one by one."], ["335.79", 238.38667175199058, "I'm going to go off and ask for all the numbers that get generated by my Fibonacci sequence generator."], ["74.37", 205.18162671554785, "I can call its next method."], ["50.14", 191.68110430976498, "Any procedure or method with a yield statement is called a generator."]], "RQdyRhHDlRo": [["20.53", 120.91132494905122, "No sub No sub"], ["10.83", 37.14276000450925, "Those changes will all be small and will not distract from the learning that is the ultimate purpose of edX."]], "9i-VL98AuEY": [["199.81", 121.6986741015976, "So from one node there might be 2 or 3 possible edges that tell me different ways I could slide a tile to get to a new state of the puzzle."], ["77.35", 117.79809646866357, "things that cause a change in the state-- open up a valve, close a valve, change the heat, something like that."], ["53.88", 83.0322108547992, "In particular, systems where we're really interested in the changes in the state of a physical system."], ["17.19", 82.8739133694255, "And that was straightforward to understand when we were thinking about graphs that represented physical networks--"], ["57.545", 70.76107899808244, "I might have a physical system like a plant-- a power plant, some other kind of plant, a manufacturing plant."]], "kYJj0I4YMHQ": [["374.79", 157.7402134406617, "And then when I'm done, when I've gone through all of this loop, I'll return the shortest path."], ["31.93", 108.6718003084167, "And when we find a new path, we'll keep going only if that path is still shorter than the best thing we've seen so far."], ["321.31", 90.97733152492754, "Is there a path from here that gets me to the goal? If there is, I'm going to keep it to save it away."], ["264.24", 68.17754229354722, "I'm printing out some material, and I'm checking to see if I'm done."], ["251.75", 57.950955685807585, "That, initially, will be none, because I haven't seen any path, but will let me keep track of the best thing I've seen so far."]], "-3BEW8PBdhk": [["91.71", 158.64791848546605, "And then I put the two things together to generate the overall power set."], ["15.22", 117.1753810838038, "And I can generalize that by simply saying, given a set of any kind of element I'd like to find something called the power set."], ["165.85", 113.01766393122305, "For each, therefore, the solution in the smaller set, I add to this thing right there on to that element and I put it at the end of this list."], ["83.78", 101.15125781155943, "So I find the power set of everything but the first element."], ["136.63", 92.6620943097919, "And that turns out to be, by the way, 2^(n-1) different solutions."]], "BQMz9FUnJj0": [["269.47", 188.14551243378585, "So I get the number associated with that spot in the string, and that's going to be the label I'm going to put into blank."], ["259.579", 135.97632413011917, "I'm going to get from the object, the label, and I'm going to get the location of the blank."], ["480.91", 135.57091490121866, "So it's giving me the last point in this sequence."], ["320.85", 132.4453595408773, "So this little function basically just generates the label associated with the new state of the tile by simply keeping track of where's the blank."], ["26.18", 118.26597707349455, "So we might start off just with a goal node and a start node."]], "4cz7_-_VlmI": [["196.37", 171.12873100384897, "Now I'm going to try and check whether something's a palindrome."], ["69.03", 150.35143360138315, "Once I've got an hypothesis, I can then design and run a repeatable experiment with the potential particular to refute the hypothesis."], ["207.72", 140.93506139173365, "I'm going to reverse that copy, and then right here if the reverse copy and the original one are the same, then it's a palindrome."], ["124.94", 138.63250498962708, "So we like to design things that help us expose intermediate stages of the computation."], ["247.69", 134.7998192946578, "That's deliberate, but let's look at what happens if we're actually to run this."]], "yBRf7ajFSTU": [["52.96", 92.58699365249133, "And we'll also put that on our plot."], ["113.71", 88.57693768722018, "And here I have a new procedure, fitData1 which uses polyfit to fit a cubic equation to the observed data."], ["174.92", 71.98272759061862, "out again, and look at that fitData2 which is just like fitData1 except what I've done is that when I'm going to use the model for predictions, I'm"], ["205.36", 64.19609421911998, "Let's see what happens when we run this and plot the results."], ["100.07", 62.22689784144271, "So what Terman's law is, in fact, that there's a cubic relationship between the force that's supplied and extension, rather than a linear"]], "OEoXaMPEzfM": [["15.89", 69.94291257496064, "brought you here, let's learn about the tools that you will use to navigate through the course material."], ["32.92", 45.603595653303614, "Like most video players, you can see how far you are into this particular video segment and how long the entire video"], ["81.48", 41.2039375369342, "can toggle the captioning button in order to make it go away or reappear."], ["62.32", 41.01800775347265, "This will follow along with everything that I am saying as I am saying it, so you can read along if you like."], ["93.43", 40.782923192427106, "Right now you're in a lecture sequence, which interweaves many videos and practice exercises."]], "nf-d1FFE-bE": [["335.64", 171.29560673767358, "And if he pursues that strategy, he'll end up with the most valuable contents in his backpack."], ["279.02", 124.65185866626548, "In other words, the choices that are made aren't guaranteed to produce an optimal result."], ["32.02", 123.52461441508198, "He arrives and with him he's brought a knapsack, and the maximum weight the knapsack can hold is 20 kilograms."], ["124.27", 105.99988174560514, "At each step, he's going to choose the best of the remaining items subject to the constraint that it will fit in the remaining weight"], ["300.52", 98.05495401744898, "That's why it's called the continuous knapsack problem."]], "MJ4baVLD4uU": [["13.49", 62.6580645181343, "And I have an interest in combining computational methods with medicine to make statements about patients, statements that will help to improve"], ["42.87", 39.494398225693885, "Atherosclerosis is actually a disease of the juvenile."], ["59.88", 34.09074068882881, "And this slide demonstrates that atherosclerosis is a huge problem."], ["35.93", 31.19088482235248, "Cardiovascular disease is a big problem."], ["87.15", 28.650127040446804, "So if you look at the whole pie of people who die from atherosclerotic heart disease, we only can identify a small fraction of those who will."]], "O74Bw-NcCkY": [["65.86", 80.35487574953724, "element of each to decide which is smallest, and put it at the front of the list, followed by the next smallest element, followed by the next"], ["36.2", 77.54458048821162, "And we'll keep splitting it until we get down to lists of just two elements each, such as for example shown here where I've got two one element lists."], ["24.22", 44.12902926324968, "So if we start off with a list of elements like what's shown here, in the first stage we're going to split it into two parts."]], "BXfWJbn8gKQ": [["33.51", 221.38071751525226, "the items in the house, the clock, the painting, the radio, the vase, the book, and the computer, along with their associated weights and values."], ["45.47", 202.45924263413897, "It then sorts the items in the order of the metric that we want to supply."], ["147.41", 143.88637535124167, "once using the specified metric and to print out the total number of items and their values in the knapsack that gets built using"], ["159.32", 140.58798450116652, "And then finally, testGreedys allows us to test all three of the metrics."], ["117.46", 111.10059167635032, "He was going to try a metric which was the item's value, a metric, which in a sense, was the item's lightness--"]], "yeJJdf1sf7Y": [["118.37", 2603.3839181713915, "Really what we're talking about here are upper bounds on the complexity of the algorithm, on the number of steps."], ["431.16", 1807.3254988685915, "integer and add it into what I've got in val in order to return that overall value."], ["263.68", 1599.8736314989646, "Don't worry about the fact that Python will do this for you automatically."], ["347.5", 1516.893407212306, "And what's changing is the iteration variable, or the loop variable i."], ["74.45", 785.0021114160475, "And in fact, this sequence is really listed in roughly the order of increasing complexity."]], "Ys5yKRESAOw": [["77.23", 336.6577127288109, "By the way, this handsome fellow here is Bernoulli."], ["98.74", 236.28923635520562, "It's nicely illustrated by thinking of the game of roulette."], ["358.65", 192.63423205714034, "The minimum exponent and the maximum exponent."], ["55.08", 183.48029145866525, "What it really tells us is that in repeated independent tests with the same actual probability--"], ["368.55", 163.54108709680617, "It then builds the x-axis for what we're going to plot-- that is to say, the number of flips we're going to experiment with."]], "PkWUiKtz_DA": [["33.04", 27.720962942742887, "And it had a beak, but we broke that off in one of our crashes."], ["62.01", 19.90604878427756, "our wings, we've now got airplanes that can fly through post-stall maneuvers and land on a perch just like a bird."], ["69.5", 19.777625152618434, "actually run bipedally at 50 miles an hour, right? So this is a simulation of a robotic ostrich that we've been building in"], ["18.9", 19.564695335369446, "What do I mean by coming alive, right? I've been building these robotic birds with my research group"], ["212.37", 19.292924566730502, "So let's formulate a problem for building software for robotic ostrich."]], "AQgw8njOMec": [["208.99", 2.6647647026063273, "And then I'm going to check to see is the answer close enough or not."], ["21.9", 1.971780755967896, "generate all the possible guesses-- there's only a finite number of them--"], ["249.22", 1.693829839364338, "This is OK that it didn't get the exact answer, because I just want it to be an approximation."], ["304.43", 1.4539927042911072, "And we'll make this now go back to being epsilon squared."], ["132.32", 1.4531484310450593, "Then I'm going to start off with my answer equal to 0."]], "SKyhk7j3NJA": [["80.05", 3.292271233286256, "The identifier is then bound to the next value in the sequence."], ["182.17", 2.517786432196929, "I'll input it and to make sure it's an integer by doing a cast or a type conversion on it."], ["190.41", 2.4850477242173135, "There's my identifier, for answer, ans, in."], ["248.71", 1.9390371895492695, "If answer cubed is equal to absolute value of x, the thing I'm looking for, I'm done."], ["158.16", 1.9079805501432041, "And it will give me the sequence of integers m, m + 1, all the way up to but not including n."]], "bqmKVKr4rGI": [["171.11", 80.1625955251504, "One of my favorite examples is based upon the statistical fact that college students, including MIT students who regularly attend class, have higher"], ["157.44", 77.66015716546572, "Statisticians, like attorneys and physicians, often use Latin for no obvious reason other than to confuse."], ["200.8", 77.47133252587012, "The fact that good grades are correlated with class attendance doesn't imply that class attendance causes good grades."], ["48.86", 76.37514996970134, "The conclusion, at least to some, was obvious."], ["501.24", 67.54019244718069, "We sometimes rely on non-response bias in course evaluations."]], "B03dhB-YmMM": [["14.85", 364.67796419661477, "The class intDict uses a simple hash function, the same we looked at before, modulus, to implement a dictionary with integers as keys."], ["81.04", 275.7466817956162, "dictionary, and then goes through and adds to each dictionary a bucket, which is initialized to be the empty list."], ["99.44", 264.59284924554083, "And it gets the number to take it from self.numBuckets."], ["136.65", 261.4685112161367, "On the other hand, if it finishes this loop without finding the key, then it just adds a new tuple dictKey, dictVal to the dictionary."], ["112.46", 201.50774229313853, "Consequently, we can retrieve it here and use it."]], "hI10vDNYz4M": [["170.1", 405.96580483273243, "And if it is well, then, we'll say, I found the thing that I was looking for."], ["390.7", 228.8855685495517, "When the value is less than or equal to zero the loops going to terminate, and inside of it the value decreases every time through the loop."], ["399.36", 209.2965250512171, "And so, for example, here, the decrementing function we're using is the absolute value of x minus answer cubed."], ["277.46", 183.10506842957096, "Let's go back into our code and, in particular now, just add a couple things."], ["17.08", 182.86242019663757, "One really useful example of an algorithm is what's often called a guess and check method, where we iterate through guessing different"]], "flilzpxT3Pc": [["125.41", 180.30930407109526, "They're important because they're the only continuous distribution that has the memoryless property."], ["114.82", 165.7803149113085, "the frequency with which autos enter a highway, or with web pages are requested."], ["429.65", 157.30727409073467, "The code down here first runs clear, and then clearSim, so we'll now see in a single plot the results of both ways of computing the exponential decay."], ["92.49", 156.4115284606499, "Uniform distributions occur frequently in games devised by humans but only rarely in nature, and are not usually useful for modeling complex systems."], ["267.98", 153.24484534792197, "n, the initial number of molecules, the probability of a molecule being clear at each step, and the number of steps."]], "f2655NqIYtA": [["375.44", 213.5294413352025, "The second one is going to use heuristics, based on exploring paths through the code itself."], ["98.41", 164.47410628421395, "The idea is that we're going to partition, or divide up the space of inputs into subsets that provide equivalent information about the"], ["147.76", 161.97028415163533, "From each different piece I'll select one input, and then I'll run the test suite on that to see how well it does."], ["129.96", 118.9841481973029, "inputs into a group of subsets with the property that each element of the set is in exactly one subset."], ["85.54", 111.67584285468196, "Well, what we want to do is to find a collection of inputs that have a high likelihood of revealing bugs, but where the testing is actually going to"]], "lcDQ7GqlS-M": [["439.61", 115.36590545330213, "And what we want to do is to compare those, make a ratio of those two quantities, to get a sense of how well the model is fitting the data."], ["80.23", 99.42135356286502, "In this case, what we have is a bunch of distances at which we made the different measurements, and then for each distance, we have the heights at"], ["70.19", 95.55802117128482, "Here's some Python code that lets us experiment with the data we got from firing the arrow with the bow."], ["101.1", 87.50210203463477, "We're converting the distances which were in yards into feet, and then we're going to process the four measurements from each of the"], ["565.6", 85.68867109896354, "the estimated errors, and then down here we first compute the mean of the observed values, and then we compute the difference between the mean and"]], "wq8v7M3Szr0": [["86.5", 113.1850100160349, "And I am going to type in Import Circle."], ["77.86", 109.73619706097881, "And the way I use it is that I simply, whether in a Python shell or in another file, say, let me import things in."], ["18.35", 105.97894966667724, "in multiple places, this also suggests that it can be useful to group functions together that share a common theme."], ["40.05", 105.95849954478743, "And if we do that, then we can import those functions, that file, into computations using the Import command."], ["174.15", 95.78936573921551, "There's another way I can do it, which is to say from circle, from that context, just import everything."]], "gAj5vgOzJB0": [["15.93", 63.84696446514812, "you, worked incredibly hard, often juggling other time constraints in order to spend time on this course."], ["153.66", 45.411739052573346, "And here are four suggestions of different areas you might head."], ["33.69", 33.4969307752054, "I think the key thing I would like you think about is, what's your return on investment."], ["185.32", 21.340282081525924, "There's a whole other range of areas called AI-- artificial intelligence, smart machines."], ["64.59", 21.146343393460395, "And compare it to where you were several weeks or several months ago when you started this course."]], "i8fuPLQCW5A": [["228.65", 143.52504235426485, "So the only hard part of writing the code is to figure out how to generate all possible combinations of N items."], ["284.51", 133.14327316516724, "binary representation of that integer, and whenever there's a 1 bit we'll include the corresponding item into the combination that we're building."], ["370.6", 127.89393077891475, "Here's the Python code that implements the exhaustive search that will find the best combination of items for the burglar to choose."], ["62.83", 124.50407137274286, "So let's see how that works."], ["99.56", 119.44388200666967, "So again we're summing over all the items of t_i * w_i is less than the maximum weight the backpack can hold."]], "8ArBqJwU8M0": [["31.4", 198.2432457241117, "By way of review, let's look at the code from last time."], ["46.19", 163.2849938054094, "attributes of the Person class; a subclass of Person, called MITPerson and here are its methods and attributes; a subclass of MITPerson"], ["68.46", 161.01141144593413, "procedure call, in this case by passing an argument, the string \"Tim Beaver\", what Python does is, it creates a new object of type Student"], ["191.31", 141.51896370052398, "So what does this do? mascot.getLastName() procedure call."], ["89.47", 83.86165776125371, "So Student itself defines no new methods."]], "dEgc80Stfv8": [["223.89", 262.03776692469484, "Exception and I'm willing to deal with that, what I can do is embed those statements inside of the body of a try statement, followed by some code that"], ["474.08", 223.5589950430496, "So this is a clause that's always executed after the try statement and all the else statements and except clauses that apply."], ["46.42", 210.2663687379235, "We can substitute in the appropriate default values and continue execution."], ["317.37", 201.63630527004008, "And sometimes we need to deal with cleanup actions before continuing."], ["30.97", 194.59176973831373, "Let's talk in detail about how that works."]], "jq7Sujh5uDA": [["426.4", 296.6870217103934, "is equivalent to shifting the binary point, if you like, three slots over to get 0.011."], ["377.3", 251.57339554417524, "In binary, it would be 0.375, which would be 3 * 10^-1, or"], ["454.57", 230.02834399235206, "So it's just going to loop over p, looking for a value of p such that 2^p * x is a whole number."], ["96.05", 229.04040244893943, "So the binary number 1, 0, 0, 1, 1 is the same as 1 * 2^4 + 0 * 2^3 + 0 * 2^2 + 1 * 2^1 + 1 * 2^0, which of course is 1."], ["49.14", 220.32851830950992, "Well, 302 is really 3 * 10^2 + 0 * 10^1 + 2 * 10^0 which of course is just 1."]], "oJa01jCfTCU": [["160.99", 223.94355209825048, "So we can take a number, convert it to a string and concatenate that together gives us the string a123."], ["177.2", 216.63173623802192, "And this is an instance of what we call operator overloading."], ["354.57", 211.14785469218202, "And for that we have a technique called slicing."], ["368.95", 194.25381727087603, "substring that starts at the index pointed to by start and stops just before the index pointed to by end."], ["38.12", 175.5279706059804, "And these are literally just sequences of characters that are all concatenated together."]], "kB6-nallVQ4": [["19.29", 25.387170248795467, "However, your fellow students are more likely to see articles that are linked to from other articles, because"], ["28.19", 18.09581463212057, "information is relevant to what they are already interested in and reading about, making them more likely"]], "0b0bWcbQmFk": [["258.73", 61.60674036265384, "In Tim's plan, it only takes a lot of time whenever Tim's facility is full."], ["494.65", 56.87392757477048, "And actually the trend does follow for bigger and bigger segments."], ["280.81", 51.465749948440475, "Maybe we can spread out the expensive cost to the cheaper add cost that it allows later on."], ["15.4", 46.20202608421796, "Because he kind of likes keeping all his puppies in one location, if he wants to store more puppies, he must sell his current facility and buy a"], ["24.22", 41.29135037124009, "Like that one, just down the street from his current location."]], "49xW1lvvUtQ": [["48.68", 243.9259056482154, "We convert the key to an integer and then use that integer to index into a list, which we know can be done in constant time."], ["171.64", 202.92239385531883, "So let's look at a hash function that does that."], ["70.98", 186.2961025928461, "A very simple function, it takes a string as an argument, initializes the string called number to the empty string, then, for every character in"], ["202.4", 183.74989395857924, "But then, instead of returning that number, it takes the number mod table size, therefore guaranteeing that it is no bigger that 100."], ["277.88", 172.69136494261065, "And if we hash Eric into a table of size 7, we get an index of 2."]], "l8Hw2V1tXmc": [["61.38", 146.44731641681807, "Another thing that's nice is that the testing is designed without knowledge of the implementation."], ["114.49", 142.9924690228858, "OK, what are the paths through the specification? Well if I look at this spec, I can see that x--"], ["35.25", 121.04990596118114, "And one of the nice advantages there is that that often can help us avoid inherent biases."], ["19.91", 106.15571286933832, "So here the test suite is designed without actually looking at the code."], ["161.87", 98.65287093323323, "As an aside, if I have an input that's a list, what are the boundary cases we might want to think about here?"]], "waIE0L9vfiI": [["115.01", 186.76312674935065, "talk about the syntax of the construct, but also about what the example's going to do."], ["124.73", 157.3549243717977, "successively adding x to itself x times, which is of course what x squared actually does."], ["60.49", 138.53984570218196, "valuable, and we're going to talk about some constructs to help us make that happen."], ["98.67", 128.70422008508504, "finally, the test is False, in which case we skip around the loop body and pick up the computation elsewhere."], ["377.12", 112.27579788519022, "that programs like that are constant time, that is, we execute each instruction at most, once."]], "tJMrTNDdsR8": [["780.97", 31.017947556646686, "Thanks very much."], ["22.19", 27.156758131006885, "So, a database is simply a collection of records."], ["84.65", 21.262707342130497, "For example, this query that you see here selects the price of a given stock that has a set of properties from the symbol GM and"], ["106.27", 18.81361610629285, "So, databases are important because nearly every business, website, government, all these organizations store their persistent mission"], ["147.72", 18.33425127021968, "So, the database system uses one of two basic ways to evaluate queries."]], "Kndq_cHHWOI": [["31.352", 175.44148161635093, "it has a type; it can be an element in a data structure, like a list; it can appear in an expression, like an"], ["44.38", 171.40582449952342, "Now, it's pretty clear that ints, floats, strings all have those properties."], ["119.52", 153.09371787669696, "treating functions as if they're elements of data structures and applying functions to them."], ["163.78", 151.47606922761838, "I've got a little loop, where i is walking from 0 up to the length of the list, or 1 less than the length of the list."], ["153.08", 131.36622001897643, "list, mutating each element in turn by replacing it by what happens when we call the function f on that element."]], "euWTTA4YPaY": [["59.97", 154.53692538135152, "In fact, they found a moth that flown in and got trapped between the connections of one of the tubes that was causing a short circuit."], ["173.78", 153.9354279051913, "Second dimension along which we could think about bugs are the difference between a persistent and an intermittent error."], ["262.23", 119.2900627153487, "The covert bugs are the ones that are really scary, because a covert bug says are not going to be obvious to detect this."], ["185.71", 115.34372747717325, "Intermittent only occurs sometimes."], ["133.3", 115.33694039066503, "the running of the code as opposed to a static semantics or a syntax error, one of the dimension along which the bugs can vary is the difference"]], "XLjNHjfVdhs": [["35.0", 207.9492466463479, "We'll need to keep track of the grades for all the students in our course."], ["339.34", 145.2868137949782, "And the class definition itself sort of gives us a specification for interfacing with their collected data that's inside."], ["354.49", 122.41490236448173, "And for each of those students, it's going to first figure out their average grade."], ["152.01", 112.54359658119566, "student's ID number as a key, and we'll append the grade that were doing to the end of the grades list for that student."], ["136.74", 105.54857288278767, "We can go ahead and add a grade for a particular student."]], "jq5M5Gmf0do": [["565.78", 228.04952208272005, "And this is known as Turing's Halting Problem."], ["27.1", 192.6315001056518, "getting the computer to do something, but to do that thing that you want it to, to get it to solve a problem."], ["547.7", 182.49952019275165, "Here is one example, being able to predict whether a piece of code will always stop with an answer for any input."], ["87.77", 160.85378642633813, "It performs some calculations, and it remembers results so that it can reuse them."], ["50.94", 153.35255360274647, "If you can do that, it's going to give you a great deal of advantage as you face any kind of problem."]], "G0qUN3eTqlo": [["30.47", 47.73596730188798, "And then we move the marker up one, start our checking point at the next one, and again, scan down the list, finding the smallest thing we've seen"], ["53.76", 15.516648588353526, "We move the marker along, the thing that we're going to check along, and we keep scanning until we find the smallest element of the list, which is"]], "xnhi9-ud_vI": [["44.38", 171.64727090234132, "going to talk about debugging methods, which are ways of fixing the program that you know does not work as you intended it to."], ["119.51", 143.7556532908853, "And finally, good programmers will document assumptions."], ["33.35", 137.8771962158155, "So we're going to talk about testing methods, which are basically ways of trying code on examples to try and figure out if it's running correctly."], ["68.37", 117.31038335921994, "And indeed, all good programmers have that kind of practice."], ["90.15", 114.0737421514866, "Second thing good programmers will do is they'll write good documentation."]], "DtPyN40SjaA": [["210.03", 289.4907638518742, "Unsurprisingly, we start by importing PyLab."], ["227.47", 256.67659499193576, "Now, let's run the code, and then talk about why it does what it did."], ["87.79", 204.993304408418, "At the bottom of the stack is NumPy."], ["262.35", 162.1672285886701, "The two parameters of pylab.plot must be sequences of the same length."], ["244.52", 156.79339865586545, "The figure, created by the first line of code following the import-- here it is, pylab.figure(1)."]], "FylxGyUzB7g": [["100.96", 325.0428117814478, "deterministic versus stochastic, static versus dynamic, and discrete versus continuous."], ["33.49", 191.40517895189723, "to construct truly analytic models that could be used to predict the behavior of a system from a set of parameters and initial conditions."], ["89.27", 182.42453366123195, "They tell us how a system works under given conditions, but not how to arrange the conditions to make the system work best."], ["15.96", 167.36802758808537, "But for the most part, the rest of the lectures will be devoted largely to how we go about building computational models that let us solve problems."], ["162.57", 165.49741979510952, "whereas in a continuous model, they're not enumerable-- for example, the real numbers."]], "pGd3WqZK4Cg": [["150.61", 313.25165473090664, "of that is bigger than epsilon, it says I've gone further than I can."], ["211.62", 230.04948309497448, "All right, it's got that same basic form."], ["173.41", 158.3842658655094, "So as long as the difference between answer squared and x is too big and I'm not done yet, I'm going to"], ["14.58", 139.58201488201556, "this idea of suppose we'd like to use guess and check to find, as we said, square roots or cube roots."], ["89.83", 120.13939176078821, "And we just have to see if we're close enough."]], "Zu0qEdz4Tq8": [["167.42", 337.3152068095199, "I'm going to reduce a Mul b into a plus a Mul b minus 1."], ["62.15", 286.5236948250525, "And in fact, what is this piece here, that is exactly the same as a times b minus 1."], ["195.12", 203.89358752583192, "And notice it just nicely matches what I just described."], ["22.54", 177.471284708162, "This basically says, a times b-- well, that's the same as taking b copies of a and adding them together."], ["37.32", 175.07174935414534, "taking a and adding it to whatever I get by doing that accumulation of b minus 1 copies of a."]], "g4uT2pXnwxc": [["99.22", 214.80141838714533, "And those are called stored program computers."], ["196.71", 213.03972635202427, "So here's a simple architecture for a computer."], ["168.87", 166.13420677856055, "And that program basically walks through those sequences of instructions in order, executing each one in turn."], ["161.6", 165.87624205038873, "Once we've done that, then inside the computer there will be a special program called an interpreter."], ["210.4", 151.15754863486467, "And it's got a control unit that keeps track of where things are and asks the ALU to do work."]], "bGWgqvhUfPU": [["78.23", 249.19402897973075, "that until one of the lists is empty, in which case, I just copy the rest of the list onto the end of the result."], ["246.9", 217.31765457684887, "So here's now code to do the merge, and it's really pretty straightforward."], ["390.76", 198.23932733164838, "And then I take the lower half of the list and I do merge sort on that."], ["268.81", 195.86250211991765, "I'm going to compare the two of them, and I'm going to basically say, if the left one is less than the right one, I'm going to add it in and increase i."], ["346.51", 190.47292830174172, "into sub-lists, sorting each one of those, and then merging the results together using the merge operation."]], "Q-rY8DIwYgg": [["16.07", 34.229240659997274, "If you are trying to be polite in conventional conversation, you wouldn't walk into a crowded room and expect"], ["54.48", 27.428175015881738, "people of many different educational backgrounds, nationalities, races, genders, and sexual orientations."]], "NJ-Dw7uiitE": [["180.2", 196.61216292250216, "these two language features to easily implement our cache of previously-computed answers."], ["195.39", 163.13733536125224, "any function, for example, fib, into one that remembers its previously-computed answers."], ["205.33", 157.21046631398048, "So you can see, internal to memoize, there's a definition of what I'm going to call a wrapper function because, as you'll see in a moment, it wraps the"], ["126.72", 149.4140572214382, "we put a little star before the name of an argument, that will bind that particular argument to a tuple of the arguments to the calls."], ["150.86", 147.00906475434073, "Similarly, there's a way of calling a function where we actually supply a list of arguments as a sequence, directly as a sequence rather than"]], "twvmnuMYTQk": [["90.06", 156.77221834196112, "And, in fact, to do it let's do both an iterative version and a recursive version."], ["262.63", 152.230937004148, "But you can see that the recursive version stops, computes the right answer, and the code itself is nice and crisp."], ["26.77", 114.29745230211287, "Factorial in math is written as n followed by an exclamation point, said verbally as n bang."], ["33.04", 110.04027998333244, "And factorial is basically the product of the integers from 1 times 2 times 3 all the way up to n."], ["67.47", 105.42462891818121, "So recursively I would say if I can get n minus 1 factorial, then to get n factorial I'd simply take that value and multiply it by n."]], "WqKqfr_tX0Y": [["256.91", 206.9512699302706, "Here is a very nice little algorithm for searching a list using binary search."], ["64.23", 192.07841489800222, "It says given a list L and an element e, I'm going to walk through the list."], ["593.3", 187.78353951787017, "So the complexity here is O(log(len(L))), and that's nice."], ["267.28", 184.4414266551116, "It says basically, given a list, an element, and a low and a high point in that list, a low index and a high index, what am I going to do?"], ["20.13", 168.81790054307535, "So can I do better than O(len(L)) or linear search for search? Well, the answer is if I don't know anything about the values of the"]], "xP87Epe8_5Y": [["107.72", 181.59044245702108, "This class is an example of what's often called a mix-in class."], ["159.14", 179.75942914749973, "I've reproduced the code that you saw in the lecture on classes."], ["170.68", 177.65928507432315, "take mortgage and change it so that it not only incorporates object, but also incorporates the class we just looked at, mortgage plots."], ["222.66", 175.95822330156415, "subtype graph, i.e. mortgage is a subtype of object but not a subtype of mortgage plots."], ["390.98", 173.81227991085404, "A key can then be added to a figure by executing the function pylab dot legend, open close, as we will see very soon."]], "yml22-pGOc4": [["209.59", 130.04723344180974, "You can try it yourself since we made our code available on the internet."], ["155.1", 41.07921818169303, "No sub Even when they appear static, our eyes are constantly moving a tiny little"], ["652.79", 30.64938299368656, "number generators pretty much the same you've used for Monte Carlo simulation, and then we obtain the following painterly rendering."], ["174.12", 30.277388220379827, "No sub We can reveal tiny vibrations, such as those goes by the shutter of a camera"], ["20.57", 29.65094252827079, "we develop new algorithms that allows us to extract more visual information from the world."]], "11z8XCDvC3Q": [["30.32", 279.75347534613223, "And there's imperative knowledge, or how to's methods."], ["146.96", 202.08559392824986, "x/g , and using this new guess, which I will call g again, I'm going to repeat the process until we get something"], ["227.62", 175.71003341599535, "And now, let's take the average of x/g and g."], ["63.75", 164.64372213085997, "You know that's true from high school algebra."], ["117.185", 136.18183799094177, "It's actually attributed to Heron of Alexandria, although there's some debate as to whether he was the original"]], "1jnF2wBDvHg": [["182.12", 155.72792516550177, "I then take that first path at front of the set and I do the same thing, and recursively repeat that."], ["193.2", 125.73057818421626, "If I get to the node in a path which has no children, then I just go on to the next path."], ["16.329", 90.07117073915643, "And we built a simple little graph with nodes labeled zero through five."], ["164.73", 88.55780229868198, "And I extend that path by one step, going to each of the possible children of the current node."], ["343.07", 87.83461840702067, "And I want to add that in a particular path."]], "kH_icrqrRzs": [["27.61", 66.9905541819946, "Mostly, we are going to look at how you can use your programming skills to write programs that shed some light on complex situations."], ["35.99", 52.84150933176415, "We will introduce you to a Python library, PyLab, that provides features that make it relatively easy to analyze data and present"]], "OHsF77_yufc": [["215.34", 144.2862584120998, "loops, and as we've constructed the algorithm so far it's going to stop as soon as it actually finds a path."], ["507.68", 138.52184992574234, "see how it explores in a depth first fashion graph, such as the graph we started with."], ["18.39", 121.14011878656717, "If we're not at the goal, we're going to keep extending paths by adding each child the current node to a path creating all the new paths."], ["187.7", 119.02681058416685, "It replaces that first option, if it's not gotten us to our goal, by adding in an ordered set of new options in which we take that option, which is a"], ["341.82", 110.25176484148734, "that we're trying to get to, and depth first search is going to take in a graph, a start node and an end node, and it's going to take in another"]], "AG8_Qw5kS_0": [["182.56", 260.3664666578816, "And it's followed indented with all of the definitions of the attributes that I want to be part of the inset class."], ["177.8", 256.6978366860416, "which is what I'm calling my new type of object, which represents a set of integers."], ["74.3", 165.42657529351058, "In other words, it is a property that's true of all instances of the set of integers that we're creating."], ["52.31", 149.20876170277867, "We'll have our constraint that we want to impose, which is that we wish that the particular integer will only appear at most once in a set."], ["103.195", 142.2615144117448, "And it inserts an integer e to the set, if it's not already there."]], "ZP_Q0vU-wU8": [["58.77", 192.8059437017937, "we can then relate to other problems for which there already exist efficient algorithms."], ["257.85", 180.4264610747613, "If this is my memory, and right here, that's where the list starts."], ["223.94", 171.0605376563549, "Does Python retrieve elements of the list in constant time? Well, let's look at that."], ["135.84", 166.6660127944309, "Really simple method would say gee, given a collection or a list, I'm going to assume it's a list, but it could be something else."], ["341.73", 165.88041821118566, "A length telling me how many objects there are in the list, so I know where the end of the list is, and then a sequence of fixed"]], "O1Is56hu4EU": [["127.01", 194.30030803663544, "And doing something may well make this worthwhile."], ["157.14", 186.05029811675658, "And the idea behind it is pretty simple."], ["168.32", 180.716218681854, "And then we're going to take the remainder of the list, find the smallest element of that, and swap it with the second element."], ["233.875", 172.87934839371974, "using temp right there, So that I can take the thing at the minimum location, put it into i, and then take a temporary thing and put it there."], ["42.76", 167.2585228304961, "is the cost of both sorting and binary search, which is great, is that less than just doing straightforward linear search?"]], "oNn-NRjBP2U": [["30.53", 191.16331651627243, "So here's our first draft of the code."], ["10.78", 153.38393944452736, "One will be an undergraduate student, who will have a clash year attribute, and the other a graduate student."], ["195.41", 121.04641254858406, "that I want to be true of a whole set of my types that I'm wise to use the type hierarchy so that I can implement the behaviors associated with all"], ["63.05", 113.6505680030969, "It simply takes the object that I've passed in and it asks if it's an instance of an undergraduate or an instance of a graduate student."], ["49.73", 113.58970449814056, "And then finally, I've written a little predicate which allows me to detect whether an object is a student or not."]], "hX1aUXnDwgA": [["215.72", 3.3010088245036404, "If this is true, then I'm too far apart."], ["176.31", 2.8453356711190048, "It looks a little bit daunting, but it's really not as bad as you think."], ["92.51", 2.6009661162614943, "Well, if g^2 is bigger than x, then we know that it's too big."], ["247.92", 2.599288906127036, "On the other hand, if answered squared is bigger than x, then I'm too high and I'm going to reduce the high down to the answer."], ["194.18", 2.1830956908520105, "I'm going to set up, initially, a low and high value, which are to start with 0 and the value of x."]], "CqeyFtxCqqE": [["84.41", 234.13684173645186, "And one, two, three, four is an instance of type integer."], ["18.14", 183.87013372679695, "Procedures that willy-nilly made access to whatever data they could get their hands on lead to hard to find bugs."], ["33.53", 168.1033223951216, "And we came up with the idea of bundling data and the associated procedures into an object with a well defined interface."], ["553.5", 164.86066845610094, "And that process, quite appropriately, is called garbage collection."], ["176.49", 159.35685059541268, "sequential array of memory locations, each of which holds a pointer to an object and associate with that array, a particular length, l of the list."]], "YdT6gL3Cpss": [["32.32", 58.96992846950205, "arrows, and said, how thick a shield would I need in order to protect myself from an archery attack?"], ["20.99", 58.3252089089018, "to develop models that will let us make predictions of what will happen so that we can do the appropriate engineering."], ["114.28", 55.55486259840033, "So I modified the code a little bit to print out the values for a, b, and c for the parabolic fit."], ["360.98", 52.87032513735454, "I encourage you to learn more about the statistical tools that are available in Pylab."], ["299.65", 50.39886691226696, "And so if I do a little arithmetic that's 138.2 feet per second."]], "CZ-pBiV9c1c": [["19.23", 202.82308469326844, "pi since the 18th century, such that the circumference of a circle is equal to pi times the diameter, and the area of a circle is equal to pi r squared."], ["342.34", 165.07816195065567, "We then use this fact to count the number of needles in the circle."], ["304.98", 133.51845298652665, "First, we'll throw some needles, or drop some needles if you prefer, in the vicinity of a square."], ["392.57", 133.3895309263657, "until getEst returns an estimate back with a confidence interval that, with a confidence of 95%, is within precision of the actual value."], ["65.34", 112.01694887104095, "for pi, when giving the specifications of one of King Solomon's construction projects, as described here."]], "7m8pab1MfYY": [["21.96", 56.23983946904388, "various chapter labels, you will see the course content that it's associated with each chapter."], ["40.28", 34.37463585854451, "sequences, which you should watch and participate in in order to learn new material concepts."], ["56.93", 21.70133098244277, "Many courses will grade you based off of your performance on homework questions."]], "FQI929r5TTs": [["30.9", 74.70717688895054, "But we started with a language."], ["678.96", 52.91564929394256, "Binary search, merge sort, breadth-first, and depth-first search are examples of specific algorithms that come from different classes of"], ["658.13", 40.06896347233225, "You've seen instances in each of these different versions of algorithms."], ["513.96", 33.655361970365746, "Others, some graph search methods, are much more complex, but that also was because sometimes the problems are just inherently expensive to solve."], ["737.79", 32.47830869468836, "up with different abstractions of reality? If our models aren't always accurate, the answers they give us may also vary"]], "sLycGWeSwPE": [["34.56", 298.4814778432174, "So here we have our definition of the person class with all the different methods defined for it."], ["483.1", 169.34951796573213, "implement and tap into all sorts of great behavior that Python has built-in, look at section 3.4, the Python Language Reference manual."], ["351.7", 128.84048727688847, "And then if I ask for the list again, you can see that in fact the list now is sorted in order of their last name."], ["19.055", 124.12698155259321, "In our very simple example, a person will have a name and a birthday, and we'll provide interface methods for getting the last name of a person."], ["378.74", 113.12259416848941, "So Python has a particular sort algorithm for sorting sequences."]], "NnWd5_X3n5s": [["42.56", 140.63482015247374, "And in particular, if I evaluate this, or load this if you like, into a Python environment, a shell, we know"], ["422.95", 106.36614926812116, "naturally pass back to an earlier frame once the function call returns its value."], ["53.75", 91.65005478159665, "Which is we're going to create a frame over here, in which that name, recurMul, is bound to a procedure object."], ["15.86", 89.97148607474035, "Didn't your high school geometry teacher never to use definitions where you defined a term in terms of itself."], ["384.3", 85.50221839957062, "Each recursive call of a function creates its own environment, with a local scoping of variables."]], "oMr9PpDodl8": [["74.18", 186.46929745384915, "We went out to the web to find the formula we can use to compute the monthly payment for a mortgage of size loan at a monthly"], ["82.89", 183.79807880131017, "So we embedded that in a little formula that we'll use below."], ["29.06", 139.3443872775367, "Classes are a convenient way to tackle many programming problems."], ["161.69", 126.01294714715, "We then have to compute the amount of the payment, which is going towards reducing the principal amount of the loan."], ["103.56", 121.99463113110376, "So the mortgage base class remembers the principal amount of the loan, and it computes the monthly percentage rate from the annual interest rate"]], "0bdP3Muy_kU": [["70.41", 110.3833562712676, "shortest path in terms of number of steps, we can stop as soon as we find a solution since it's guaranteed to be a shortest path."], ["283.0", 102.85349913705727, "A little bit different, but still fairly easy to follow."], ["196.27", 90.62646644147752, "Since there are no more paths of length 2 off of node 1, we'll carry on and look at 023 and then 024."], ["35.92", 88.66609785957597, "Instead of always going down the first branch of the tree, we could, instead, explore all the children of a node first before moving on."], ["152.51", 86.78413519651785, "We refer to things as being pushed to the end of the queue and popping off the front of the queue."]], "5DgYyaBb21k": [["12.31", 45.96474187578024, "This is about randomness and mazes and computation and GPS's and robots and all kinds of stuff."], ["40.38", 42.83561774519911, "And this is what I get when I do this questionnaire."], ["86.35", 39.56380719084752, "Mazes, somehow, are an important part of the computer science curriculum."], ["25.74", 38.49937748755423, "I once did this internet questionnaire, what American accent do you have?"], ["358.26", 29.60121056473201, "tours of length n cubed when n is the size of the maze, then most of those tours are going to include the end vertex."]], "--7OF8BOElA": [["141.0", 86.93493127208603, "the growth is much more than just the pure linear, but they're still quite valuable, because the growth isn't"], ["193.46", 80.31980001159926, "Exponential algorithms are incredibly expensive."], ["37.95", 78.1953611998562, "for an algorithm and this is constant that has 20 steps, versus a logarithmic algorithm that has only 1"], ["71.32", 70.3679927925092, "Log grows slowly."], ["49.69", 62.01465254566458, "1,000,000 before the logarithmic algorithm actually catches up to the constant one."]], "CsQrTLde-dM": [["78.23", 151.8424872317932, "as x squared to the n/2, which is the same as x squared, squared to the n/4."], ["49.57", 123.87765650030005, "And I'm going to do it with a simple loop."], ["127.0", 107.00737979514957, "set up x to have some value like 5, and I set n to be some value of 1, and I now call twoPower of 2 to the 8th I"], ["25.04", 102.22397364756249, "And so over here, I've got a simple little example."], ["149.78", 99.77055614656369, "So if I evaluate in Python these two procedure definitions, they create for me bindings of the name"]]}