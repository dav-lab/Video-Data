{"IRxsjPGh1oQ": [["2.73", "so we're going to do one last example in this sequence "], ["6.57", "we've been looking at approximation algorithms "], ["8.58", "we've been looking at guess and check  exhaustive"], ["11.14", "enumeration "], ["12.28", "we saw when we wanted to move to floating point  we needed"], ["14.5", "to be a little more clever  and that led us to the idea of"], ["16.95", "bisection as a smart way of reducing the computation at"], ["20.3", "each stage  especially when we have functions or problems"], ["23.72", "where there's a monotonic relationship between the value"], ["26.92", "we're looking for and the guesses we're making "], ["29.19", "there's one other  very powerful  algorithm for doing"], ["31.42", "approximations  due to sir isaac newton  often called the"], ["34.65", "newton-raphson algorithm because it was found at the"], ["37.99", "same time by newton and by raphson "], ["40.35", "here's the basic idea behind it "], ["42.75", "we want to find the root of a polynomial "], ["44.67", "i'll remind you a polynomial  p x)  is some sequence of"], ["48.54", "coefficients and powers  so it's a_n * x to the n-th power"], ["53.31", "+ a_n - 1 * x to the n minus first power and so on "], ["57.81", "it's just a sequence of numbers times powers of x  and"], ["61.8", "what we often want to do is find a value r such that p r)"], ["65.3", "is equal to 0 "], ["66.02", "we want to find the root  the place where  on that x-axis "], ["70.29", "that graph crosses 0 "], ["72.87", "now  that sounds like a lot of math "], ["73.92", "let's make it a little simpler "], ["74.93", "a simple way to think about this is if we want to define "], ["77.24", "for example  the square root of 24  we just need to find"], ["80.7", "the root of the polynomial x^2 - 24 "], ["84.24", "makes sense  if we combine the value of x such that x^2 - 24"], ["87.24", "is equal to 0  we're done because that's"], ["89.83", "the thing we want "], ["91.43", "now  what newton showed was that for things like"], ["95.04", "polynomials  if g is an approximation to the root  the"], ["99.18", "place where it's equal to 0  then g - p g) / p' g) is a"], ["108.58", "better approximation  where p' is just the derivative of p "], ["112.36", "and if you haven't done calculus "], ["113.82", "don't worry about it "], ["114.42", "we'll show you in a second what that means  but this is a"], ["116.82", "powerful tool "], ["117.6", "newton proved this  that given an approximation  g - p g) /"], ["123.64", "p' g) is a much better approximation "], ["127.2", "ok  so what does this have to do with things "], ["128.88", "well  let's look at an example  a really simple case "], ["131.86", "suppose our polynomial is just some coefficient c times x^2 +"], ["136.45", "k  then its first derivative is just 2cx "], ["140.93", "and in particular  if the polynomial is just something"], ["143.22", "simple  like x^2 + k  then the derivative is just 2x "], ["147.72", "why is that nice "], ["148.51", "well  newton-raphson says that given a guess g for the root "], ["151.82", "a better guess is just shown right here  is g - g^2 - k "], ["157.69", "all divided by 2g "], ["159.45", "and remember  we were using this form to find square"], ["162.68", "roots  because it says if k is the value of the square root i"], ["168.27", "want to find  then that's the polynomial i want to use "], ["171.01", "so this little formula says here's a better way of finding"], ["173.87", "a guess for the square root of k "], ["178.3", "all right  let's put that together "], ["181.27", "we can now have another way of generating guesses  which we"], ["184.23", "can check  which turns out to be very efficient  so here's"], ["187.4", "some code that would do it "], ["188.49", "again  i've got a little epsilon that tells me how"], ["190.96", "close i want to get "], ["192.2", "let's assume i'm looking for the square root of 24 "], ["194.37", "we'll try some other examples in a second "], ["196.63", "i'm going to give an initial guess  which"], ["198.19", "will just be y / 2 "], ["199.95", "it's not a very good guess  but it's"], ["201.14", "reasonable place to go "], ["202.71", "and look at the code "], ["204.11", "very crisp  very clean  very efficient "], ["207.38", "it basically says check to see am i close enough "], ["213.39", "is the difference between the guess^2 and y less than or"], ["216.866", "equal to the epsilon "], ["217.55", "if it's bigger than that  i'm not close enough "], ["220.11", "and then newton says get a new guess by taking the old value"], ["223.58", "of guess  taking guess^2 - 1  divide it by 2 * guess  which"], ["228.36", "is the derivative  and use that to create a"], ["230.82", "new binding for guess "], ["232.41", "you just keep updating "], ["233.62", "do that until i get close enough  and when i'm done "], ["236.05", "just print out the result "], ["238.36", "nice and crisp "], ["239.54", "what's this doing "], ["240.59", "it's generating guesses "], ["242.55", "there's the generation "], ["245.18", "but it's not doing it exhaustively "], ["246.72", "it's using this property of mathematics together  and then"], ["249.48", "it's testing  right here  to see if i'm done "], ["252.74", "so it's another example of a generate and test kind of"], ["255.06", "algorithm  and let's look at what happens if we run it "], ["258.31", "so in my idle  i've got just a version of that "], ["260.42", "i'm going to do it with 24 to start with "], ["262.28", "and if i evaluate this  it prints out its guesses  starts"], ["267.53", "with a value of 14  and then goes to 7  5 "], ["272.11", "and you see  in just 4 guesses  it gets"], ["275.18", "a pretty good answer "], ["276.69", "let's try a different example "], ["277.75", "let's try our good old example of 25 "], ["281.692", "again  if i evaluate that one  you'll see again  in basically"], ["287.28", "five steps because the first one was using 12 and a half "], ["290.55", "it gets to a quite good approximation of it "], ["293.6", "let's try something even bigger "], ["294.99", "i'll go back over here "], ["296.92", "let's do my example of 12345 and let's evaluate that "], ["302.67", "and if we do that "], ["304.43", "huh "], ["305.2", "what did it take me "], ["305.87", "1  2  3  4  5  6  7  8  9  in 10 steps  it got to a really"], ["311.08", "good solution "], ["312.49", "so this is what "], ["313.52", "this is another way of simply figuring out how to generate"], ["317.34", "good guesses and then testing them "], ["320.27", "so we've now seen several examples "], ["323.05", "we've got this idea of iterative algorithms "], ["324.83", "we're using the same piece of code over and over again "], ["327.57", "we're using that to build up this idea of a guess and check"], ["330.51", "method where we guess solutions and then check them "], ["333.96", "we use a looping construct to generate the guesses  and then"], ["336.82", "we just check and keep going "], ["338.77", "and what have we seen "], ["339.93", "we've seen we could do exhaustive enumeration  where"], ["342.24", "we just do a whole bunch of trials "], ["344.26", "we could cut down on the search in a clever way by"], ["346.9", "simply using bisection  bisecting the range of places"], ["350.21", "where we're looking for guesses until we get to"], ["352.2", "something close enough "], ["353.49", "or for the group finding case  which it turns out to be a"], ["355.93", "very general case  we can be really efficient by taking"], ["358.9", "advantage of a mathematical property to very quickly cut"], ["361.98", "down on where the solution lies "], ["364.24", "those are examples of iterative algorithms  and"], ["367.03", "they're examples  in particular  of guess and check"], ["369.25", "methods that turned out to be really powerful "], ["371.85", "and we're going to give you a chance to explore those as we"], ["374", "move through the class "]], "cHpto4Yc45o": [["0.76", "john guttag  in the last segment  we talked about simulation models in"], ["4.15", "enormous generality "], ["6.21", "today  i want to get more specific  look at an example of how a simulation"], ["9.98", "model can be built  and get some practice in designing"], ["13.13", "classes along the way "], ["14.92", "so let's start by looking at the notion of brownian motion  as shown by"], ["19.06", "these red and blue dots moving on your screen "], ["23.48", "in 1827  the scottish botanist robert brown observed that pollen particles"], ["28.71", "suspended in water seemed to float around at random "], ["32.619", "he had no plausible explanation for this so-called brownian motion  and"], ["36.78", "made no attempts to model it mathematically "], ["40.37", "a clear mathematical model of the phenomenon was first presented in 1900"], ["45.64", "in louis bachelier's doctoral thesis  the theory of speculation "], ["51.46", "however  unfortunately for louis  since this thesis dealt with it the"], ["56.085", "then very disreputable problem of understanding financial markets  it"], ["60.52", "was largely ignored by respectable academics "], ["63.46", "and in fact  he struggled to even get a job "], ["66.82", "five years later  however  in 1905  albert einstein  then a young man "], ["72.85", "brought this kind of stochastic thinking to the world of physics  with"], ["76.52", "a mathematical model almost the same as bachelier's and a description of"], ["80.75", "how that model could be used to confirm the existence of atoms "], ["85.8", "for reasons certainly lost on me  people seemed to think that"], ["89.52", "understanding physics was more important than making money "], ["92.76", "i guess the times were different "], ["94.55", "brownian motion is example of something that has come to be called a"], ["97.58", "random walk "], ["98.91", "random walks are widely used to model physical processes  e g  heat"], ["103.17", "diffusion  biological processes  for example  the kinetic displacement of"], ["108.22", "rna from heteroduplexes by dna  "], ["111.22", "i hope some of you know what that means  i'm not sure i do  "], ["115.3", "and social processes "], ["117.37", "for example  getting back to bachelier  the movements"], ["120.35", "of the stock market "], ["122.16", "what i want to do now  though  is look at an example of a random walk that's"], ["125.82", "actually a walk "], ["128.03", "imagine  if you can  a drunken farmer standing in the middle of the field "], ["132.27", "and every second he takes one step in a random direction "], ["136.9", "now i want you to ponder the question  what is the expected distance from the"], ["141.38", "origin in  say 1 000 seconds "], ["145", "more generally  if the farmer takes many steps  is he likely to move ever"], ["149.59", "further from the origin  or is he more likely to wander back to the origin "], ["153.47", "over and over again  and end up not far from where he started "], ["157.34", "let's write a simulation to find out "], ["159.54", "before we do that  before we build any complicated computation  it's always a"], ["166.44", "good idea to develop some intuition about the situation the program is"], ["170.92", "intended to model "], ["172.94", "let's start by sketching the simple model of the situation using cartesian"], ["177.44", "coordinates "], ["179.21", "assume that the farmer is standing in the field where the grass has"], ["183.02", "mysteriously been cut to resemble a piece of graph paper "], ["186.57", "let's assume further "], ["188.01", "put the farmer right here in the middle "], ["190.2", "assume further that each steps the farmer takes is of length 1  and is"], ["194.12", "parallel to either the x or y-axis "], ["196.91", "clearly this is an oversimplification "], ["199.195", "but it's a common approach to building simulation models "], ["202.41", "we start with something simple  and then add complexity a"], ["205.37", "little bit at a time "], ["207.14", "all right  after one step the farmer will be either here  or"], ["211.82", "here  or here  or here "], ["215.66", "so we see that after one step  the farmer is exactly one unit away from"], ["220.33", "where he started "], ["221.75", "let's look at the second step "], ["223.58", "without loss of generality  we'll assume that he took"], ["226.56", "this first step eastward "], ["228.08", "it'll be symmetric if we went in a different direction "], ["230.96", "after the second step  he could be right back where you started  that is"], ["235.08", "to say zero units away "], ["237.75", "or he could be another step east  two units away  each of those a"], ["242.24", "quarter of the time "], ["243.91", "and half the time  he'll be there or there "], ["247.36", "how far away is that "], ["249.27", "well that's the square root of 2 units away "], ["253.82", "how do we know that "], ["255.44", "let's look at old friend the pythagorean theorem "], ["258.579", "we can look at it here "], ["260.51", "and we know that a^2 + b^2 = c^2  "], ["267.9", "therefore c = sqrt a^2 + b^2)"], ["275.12", "if we go back here  we look at say  that x "], ["277.79", "we see that a = 1 and b=1  "], ["281.55", "and therefore this distance here is going to be sqrt 2)  "], ["287.5", "all right  i could now look at the third step and keep drawing circles"], ["291.43", "all over the place  but it's starting to get pretty complicated "], ["296.27", "and that suggests to me that it's time to stop drawing pictures "], ["299.76", "and you'll probably be relieved  given my drawing ability "], ["303.11", "and instead start writing code "], ["306.38", "build a simulation that will actually give us the answer we want "], ["310.41", "ok  let's give it a shot "], ["312.78", "before we do  what's your intuition "], ["315.48", "give it a minute  think about it "], ["317.47", "my intuition is that since more than half the time here  after two steps"], ["324.6", "the farmer is further away from the origin than after one step  maybe the"], ["330.68", "longer he walks  the further he'll be "], ["333", "i'm not positive "], ["334.41", "but that's my guess going into the simulation "], ["337.7", "all right  onto the coding "], ["339.46", "but before we write the simulation  as usual  we want to try to invent some"], ["344.03", "classes that correspond to the types of things that appear in the situation"], ["348.11", "we're attempting to model "], ["350.46", "three classes seem potentially useful "], ["354.83", "we probably want a class location  because after all  it's mostly what"], ["358.73", "we've been talking about is the location of the drunken farmer "], ["363.53", "we probably want a class field  corresponding to the"], ["366.52", "graph paper we drew "], ["368.48", "and surely we're going to need something corresponding to a drunk "], ["372.33", "because that's going to have to model the movements "], ["375.65", "now let's look at each of those classes "], ["378.32", "come over to the code  and look at class location "], ["383.41", "it's very simple "], ["384.63", "it's got initialization "], ["386.84", "but even here  we see that a decision has been made  as simple as it is "], ["391.94", "we see that a location is going to have only x and y coordinates "], ["398.57", "that tells us that it's going to be a two dimensional field "], ["402.73", "we're modeling a farmer not  oh  say  a pigeon "], ["406.07", "there is no ability for the farmer to fly up into z-coordinate "], ["411.52", "also  it looks like perhaps we're ready to generalize our notion of"], ["415.03", "moving due east  west  north  or south  because we're allowing x and y"], ["420.7", "to be floats "], ["422.69", "we've got move  which takes a self with deltax and deltay   and returns a"], ["431.09", "new location  in which we've implemented x and y by the delta "], ["435.58", "note that deltas could be negative "], ["437.43", "so this isn't saying that we're always moving in one or another direction "], ["442.03", "we can get x "], ["442.78", "we can get y "], ["444.32", "and here we're using the good old pythagorean theorem  as we've just"], ["447.72", "seen  to find the distance "], ["450.55", "and finally we have a way to print the location "], ["455.42", "so reviewing  the notable aspects of location are two dimensions  no x and"], ["462.66", "no y  no built in assumptions about directions "], ["469.53", "that's because our delta x and delta y are floats "], ["474.45", "all right  moving on  let's look at our next interesting type "], ["479.47", "that's going to be field "], ["482.66", "fields  like locations  are also quite simple "], ["486.72", "we can initialize them "], ["488.72", "we can add a drunk to the field "], ["491.59", "we can move the drunk "], ["493.53", "this is probably the only really interesting function we have here in"], ["497.81", "fields  interesting method "], ["499.97", "so we say if the drunk is not already there  then we"], ["503.43", "will raise an exception "], ["506.77", "otherwise  we'll take a step "], ["510.54", "what does that mean "], ["511.74", "we don't know yet "], ["512.74", "that depends upon the kind of drunk we're looking at "], ["516.02", "and that will allow us to take a step "], ["518.49", "and that will return a distance along the x direction and the y direction "], ["523.73", "we'll get the current location "], ["526.06", "and then we'll update the current location with whatever we got from"], ["530.61", "drunk takestep )"], ["533.11", "so what are the notable aspects of class field that we might look at "], ["537.38", "well one thing we see about fields is that there can be many drunks "], ["541.95", "we might or might not choose to use that "], ["544.78", "there can be many drunks in the field "], ["546.95", "and furthermore  it seems to be that the drunks can"], ["551.1", "be at the same location "], ["552.96", "we've not put in any restrictions about where the drunks are relative to"], ["557.57", "each other "], ["559.37", "the final thing we'll notice is the field seems to be unbounded "], ["564.06", "we've said nothing about the drunk falling off the edge of the field  or"], ["568", "running into a fence "], ["570.16", "again  these are simplifications  which we may choose to remove later "], ["574.99", "the final class is actually two classes "], ["577.74", "and since it's a little bit complicated  and i want to show you"], ["580.27", "things about it  i'm going to look at them over here on the powerpoint "], ["584.31", "rather than on the idle window "], ["588.48", "as we guessed  i had a class drunk "], ["590.8", "but look how simple it is "], ["592.82", "the only thing the drunk does is it has a name  and it can print the name "], ["598.19", "what we see here is really drunk is what we before"], ["601.47", "called an abstract class "], ["603.89", "it's not intended to do anything useful by itself "], ["607.03", "it's intended to be sub-classed to give us different kinds of drunks "], ["611.29", "and as we'll see "], ["612.54", "not in this segment  but in a future segment "], ["615.09", "we can use it to create some rather interesting and divergent behaviors "], ["619.98", "depending upon the predilection of individual drunks "], ["623.42", "this segment  we'll look at only one drunk  one class of drunk "], ["627.3", "and i'm going to call that the usualdrunk "], ["629.64", "that's the kind of drunk we've been talking about so far "], ["632.82", "the most important thing to see here is that i'm importing class random "], ["638.93", "most programming languages  including python  include simple ways to write"], ["644.04", "programs that use randomness "], ["645.78", "when we need randomness in a python program  we import the class random "], ["650.96", "and that supplies us with a whole variety of useful functions "], ["655.92", "here we're only using one "], ["657.4", "we are using the function random choice )  "], ["660.55", "random choice ) has its argument  a sequence  and at random chooses a"], ["665.27", "single element of that sequence "], ["667.85", "with equal probability  it might choose any element "], ["671.41", "so for example  if i were to look at something like random choice range 3))"], ["677.59", "  it would at random return an integer and the range what "], ["682.82", "0 to 3  because we know that's the sequence range 3) generates "], ["687.5", "here  it will return a random element of stepchoices   which we define to be"], ["693.87", "a list of tuples corresponding to the steps in the north  south  east  and"], ["699.05", "west direction "], ["700.78", "so for example  0 0 is a step north "], ["705.38", "0  - 1 is a step south  a step east  and a step west "], ["712.01", "with that  i'll stop "], ["713.43", "and in the next segment we'll use these classes to start building our"], ["716.96", "first interesting simulation "]], "BWBUXxyRILw": [["0.435", "professor w  eric l  grimson  welcome back "], ["2.69", "we're almost done with this course and  if you think about it  you've"], ["5.76", "seen  actually  a surprising amount of information "], ["8.98", "knowledge  tools  techniques "], ["10.82", "that really help you not only think about how to program in python but"], ["14.53", "more importantly to think about how to attack problems computationally "], ["18.8", "in this penultimate lecture  we're going to have a set of cameo"], ["23.24", "appearances  because we want to show you how the tools that you've been"], ["27.26", "developing "], ["27.79", "the tools you've been thinking about "], ["29.53", "are the basis for a great variety of really interesting applications "], ["34.16", "now  in fairness  you'll need some more sophisticated tools in some cases"], ["37.88", "to really get to the kinds of applications you see here "], ["40.58", "but i hope you see  through these cameo appearances  a thread of the"], ["44.77", "kinds of ideas you've been using showing up "], ["47.72", "we're going to feature videos from five different mit computer science"], ["51.58", "professors "], ["52.71", "fredo durand  sam madden  dana moshkovitz  collin"], ["56.12", "stultz  and russ tedrake "], ["58.34", "all talking about different applications "], ["60.9", "of cutting edge research "], ["62.39", "that use the kinds of tools you've been seeing here "], ["65.08", "so you're going to see examples "], ["66.59", "from graphics  from big data and databases  from computational theory "], ["71.97", "from medical applications  and from robotics "], ["75", "that really demonstrate how what you're learning"], ["78.68", "is incredibly important "], ["80.45", "enjoy "]], "jx0WwCGCh-0": [["1.65", "eric grimson  we've now added tuples  generalization of strengths  an"], ["4.76", "ordered sequence of elements  where the elements can be any structure "], ["8.43", "and we've already seen that a lot of the operations we wanted on strings "], ["11.63", "we're going to have on tuples "], ["13.51", "we're going to add another kind of structure called a list "], ["17.58", "and it looks a lot like tuples "], ["19.99", "and again  lists are ordered sequences of values "], ["22.79", "each one's identified by an index  so it's going to support all the same"], ["25.84", "kinds of operations i saw before "], ["28.15", "the difference here is we're going to use these square brackets rather than"], ["33.17", "the parentheses to distinguish a list or to create a list  as"], ["37.78", "opposed to a tuple "], ["39.04", "so they are a little different in terms of how they're going to look "], ["41.66", "and as a consequence  and one nice thing  is that singletons are now"], ["44.41", "pretty straightforward "], ["45.27", "it's just a square bracket  the entry  and another square bracket "], ["48.7", "i don't have to put that annoying comma in that i had to do with tuples"], ["51.81", "in order to distinguish between an arithmetic expression and a tuple with"], ["55.66", "just one element "], ["57.19", "looks much the same "], ["57.97", "so what's the big deal "], ["59.41", "well  there's one very big difference  and it's a really important one "], ["63.27", "which is that lists are mutable "], ["65.56", "and what does that mean "], ["66.46", "it means we can change them "], ["68.37", "what does that mean "], ["69.48", "well  things like ints  floats  strings  and tuples are immutable "], ["74.215", "and that means that we can't go in and change an element inside of them "], ["78.18", "now for ints and floats  that's obvious "], ["80.5", "and tuples  we just introduced  so we sort of have to accept that on faith "], ["83.45", "but if you think about strings  you can get elements of strings out  you"], ["86.83", "can slice into strings "], ["87.96", "but you can't go in and directly change one character in a string "], ["92.52", "they're not mutable "], ["93.71", "they're immutable "], ["94.4", "they don't change "], ["95.385", "on the other hand  lists can be modified after they're created "], ["99.12", "and why would we want to do that "], ["101.18", "well  in part because there are going to be some problems where that's"], ["104.41", "really valuable "], ["105.66", "so what does that mean "], ["106.98", "some data objects  we really want to treat as if fixed "], ["109.64", "it says we create new versions of them  we combine variables to them "], ["113.23", "but we don't want to change them "], ["115.15", "and this is usually valuable when those data objects are going to be"], ["118.36", "frequently referenced  but where the pieces inside of them don't change "], ["122.54", "why would we want to support having ability to change them  because that"], ["125.16", "could just lead to bugs "], ["126.8", "on the other hand  there's going to be some instances where the data objects"], ["129.94", "may want to support modifications to elements inside of them "], ["134.21", "why might that happen "], ["135.66", "imagine you've got a really large database of personnel information and"], ["138.63", "you want to do things like change salaries "], ["140.81", "you don't want to have to make an entirely new copy of the database just"], ["144.24", "to add in a new salary "], ["145.7", "you'd like to be able to go inside and change a piece of that "], ["148.9", "so lists are going to support that kind of operation by enabling us to go"], ["153.22", "in and mutate  or alter  elements of the pieces "], ["157.07", "one issue to keep in mind is that  while mutable structures give us more"], ["160.4", "flexibility  they also are more prone to programming errors "], ["164.39", "if i've got two different pieces of code both pointing to the same list "], ["168.91", "and i have one piece of code change or mutate a portion of the list  i want"], ["173.29", "to make sure that that other piece of code is aware of that "], ["175.43", "if not  i can get myself into some really interesting bugs "], ["178.93", "so there's a cost  but there's a bonus "], ["182.65", "let's look at an example of what this means "], ["185.27", "so let's create a couple of lists "], ["186.92", "and in fact  over here in my idle shell  i'm going to do that "], ["191.03", "let me just create a couple of lists "], ["193.94", "and i'm going to call techs as a name for a couple of"], ["197.63", "great technical schools "], ["200.27", "and notice the angle braces to get them for me "], ["202.94", "and i'm going to create ivys "], ["204.53", "i'm not going to do all of them  but i will again create a list"], ["207.56", "of some great schools "], ["210.26", "we'll do harvard "], ["211.16", "we'll do yale "], ["212.05", "and we'll do brown "], ["214.21", "and if i print them out  i can say  what is the value of techs "], ["217.2", "and it just gives me that list "], ["219.47", "on my slide  i've given you a visualization of that "], ["222.08", "so think of this as techs and ivys sitting up in that global environment "], ["226.37", "after all  i just typed them into the shell for python "], ["229.66", "and what do they do "], ["230.33", "well  they point to a structure in memory somewhere that has that"], ["234.61", "sequence of elements inside of it "], ["238.1", "as i've said  i can treat this as if they were just an order of sequences "], ["241.52", "so i could say something like  what is the first element of the ivys "], ["245.41", "remember  we start indexing at 0  so that gives me back"], ["247.95", "yale  which is nice "], ["249.74", "and i could slice if i wanted to "], ["251.38", "i could say give me back the ivys  everything up to the second one "], ["257.279", "and that gives me the zeroth and first elements "], ["259.2", "i can do things i'd expect to do on that "], ["261.66", "let's see what happens when we start putting things together "], ["264.5", "so i've got two lists  a list of tech schools "], ["266.88", "i've got a list of ivys "], ["268.47", "let's now create what looks like two different lists of universities "], ["271.99", "so the first one  i'm going to call univs  for universities "], ["274.67", "and it's going to be a list of the techs and the ivys "], ["278", "and i'm going to create what looks like the same thing "], ["280.27", "i'm going to call it univs1  and i'm simply going to"], ["282.98", "re-create that sequence "], ["285.99", "cal tech was the first one "], ["288.31", "and since i'm creating a list of these lists  i'm going to put a comma in"], ["291.785", "there  and then i'm going to do harvard  yale  and brown "], ["297.75", "are these the same thing "], ["299.21", "well  let's print them out "], ["300.46", "if i look at univs  yeah  nice "], ["303.71", "it's a list of two elements  the first of which is a list of two elements "], ["307.19", "second of which is a list of three elements "], ["309.31", "and if i look at univs1  it looks exactly the same "], ["314.31", "they certainly print the same "], ["315.63", "so it is easy to think that these might  in fact  be the same thing "], ["320.74", "but they're not "], ["322.17", "and let me show how i can test that "], ["324.84", "let's evaluate the following little command up here "], ["330.48", "an append is a method associated with lists "], ["333", "we'll come back to methods later on "], ["334.33", "that dot notation basically says  if i type in techs  it's a list "], ["338.74", "the dot says get the method append associated with it "], ["341.45", "don't worry what a method is  but basically think of it as a function"], ["345.7", "that is going to take an argument "], ["347.73", "in this case  a single element  rpi "], ["351.67", "and it is going to attach that element to the end of the list text "], ["357.34", "so  what does it do "], ["360.03", "it's an important thing here "], ["360.88", "it doesn't create a new list "], ["362.28", "it mutates the existing one "], ["365.42", "it takes techs as a list and changes it "], ["368.07", "it mutates it to add a new element to the end  extending the list by one "], ["372.25", "now  as a consequence  if we print out univs  notice we now have in that"], ["379.19", "first element mit  cal tech  and rpi "], ["381.73", "we have changed what's inside of there "], ["383.56", "we have mutated techs  not univs "], ["386.36", "in fact  let's just check it "], ["387.51", "let's go look at techs  and there's techs "], ["390.68", "but again  if i go back to univs  there it is "], ["392.73", "and now what happened to univs1 "], ["395.56", "aha!"], ["396.8", "it didn't change "], ["398.28", "and that's an important point "], ["399.68", "look at the form of univs1 "], ["401.4", "it has just the first two pieces to it "], ["404.36", "and  in fact  if i go to the next slide  we've captured that "], ["408.05", "if i print out univs  i get out mit  cal tech  rpi  followed by harvard "], ["413.09", "yale  brown "], ["414.22", "but for univs1  i just get mit  cal tech  and then harvard  yale  brown "], ["419.51", "why "], ["420.43", "well  this is where the mutability comes in "], ["422.75", "so let's think carefully about what we had "], ["426.1", "before i did that append  i'd had a binding for techs  and i had"], ["429.63", "a binding for ivys "], ["430.46", "we created those "], ["431.1", "they said we're lists "], ["432.23", "and then what did i do "], ["433.05", "i said  let univs equal "], ["434.95", "and in fact  let me just write it out here "], ["436.75", "i bound univs to techs and ivys "], ["440.13", "and what does that say "], ["441.04", "it says make a list "], ["444.23", "so there's univs "], ["444.86", "it's going to make a list "], ["445.9", "and it says the value of the first element is going to be"], ["448.25", "the value of techs "], ["449.15", "so aha "], ["450.28", "it's just a pointer to that list "], ["453.61", "and the value of the second argument  or the second element  is just the"], ["457.91", "value of ivys "], ["458.82", "so aha  it's just pointing to there "], ["462.25", "so univs is a list whose elements are just pointers to other lists "], ["467.37", "on the other hand  what did i do when i created univs1 "], ["470.66", "if you look back  you'll see that  in fact  i created it by"], ["473.14", "actually typing out lists "], ["475.99", "i said univs1 "], ["477.03", "just to say a little bit of it "], ["478.29", "i said univs1 was going to be  and then i said quote mit "], ["482.41", "quote cal tech  comma "], ["483.91", "and then i did a bunch of other things "], ["485.31", "i'm not going to do all of it "], ["486.9", "but this is telling python  create a list with those strings inside of it "], ["492.47", "so in fact  that's exactly what it did "], ["495.912", "univs1 is going to create a list  but it creates it with a new version "], ["502.56", "right there "], ["503.84", "notice techs is not pointing to this "], ["506.1", "there's a new version right there "], ["507.68", "ivys is not pointing to this because i created them and inserted them inside"], ["511.26", "of this larger list "], ["512.45", "that's important  because now when i did that append on"], ["515.57", "techs  what did it do "], ["516.62", "it went over here and changed that "], ["519.12", "it added that into the end of it "], ["521.33", "that means that univs changes because it sees that "], ["525.81", "but what about univs1 "], ["527.65", "this is a completely different list "], ["529.53", "nothing changed there "], ["531.21", "let's make some observations out of this "], ["534.83", "the elements of univs are not copies of the list to which ivys and techs"], ["538.83", "are bound  but are the lists themselves "], ["541.46", "i got the value of techs  which pointed to the list "], ["545.16", "and this effect is something we call aliasing "], ["548.47", "basically what does aliasing says "], ["549.92", "it says we have two distinct paths to a data object "], ["553.94", "one is through the variable techs  in this case "], ["555.81", "there's a second one through the first element of the list object to which"], ["559", "univs is bound "], ["560.64", "and one of the effects of that is that i can mutate an object through either"], ["564.2", "path  but the effect will be visible to both "], ["567.17", "and i just saw that back here when i mutated techs  but univs changed "], ["572.84", "that sharing of data is really important "], ["575.36", "and that mutation  that ability to change things  is really important "], ["578.84", "this is very convenient  but it also can be really dangerous "], ["582.52", "it can be treacherous "], ["583.81", "because if i had something that was changing techs and i didn't realize"], ["587.34", "that univs inherited the techs structure  i've now changed something"], ["591.55", "inside of univs "], ["592.77", "and if you think back to the code i just typed in there  you saw nothing"], ["595.6", "that said make a change to univs "], ["597.81", "but changing a part of it had that effect "], ["600.66", "so aliasing is a valuable tool  but it is going to occasionally lead to some"], ["606.39", "problems  and we have to be careful about it "], ["609.05", "now what else can we do "], ["610.24", "well  we can certainly change elements directly "], ["612.8", "so if i go back  for example  and i look at techs "], ["616.39", "here's my list of tech schools  mit  cal tech  rpi "], ["618.98", "i might decide i want to change the list "], ["621.5", "so i can literally say  change the second element of techs "], ["626.91", "and i do it just with an assignment statement "], ["629.43", "i'm going to pick up wpi "], ["631.36", "and now if i look at techs  that element is changed "], ["636.85", "i've mutated it "], ["638.12", "by the way  if i go back and look at univs  it has also changed "], ["641.68", "i've now got wpi in the first portion of that element "], ["645.82", "just to remind you  it says i can mutate elements of this "], ["649.42", "i cannot do the same things with tuples "], ["651.07", "so if i do an example where i create a tuple "], ["654.39", "we can look at temp "], ["656.11", "but if i now say  and i could certainly get out  for example  the"], ["659.42", "first element of temp "], ["660.49", "but if i attempt to change that  as i just did above here by putting in"], ["665.72", "something new  it's going to complain "], ["667.82", "and it says you can't do it because these things are not things that can"], ["671.406", "be mutated "], ["672.73", "so now we've got lists "], ["674.74", "let's see what we can do with them "], ["676.76", "as i just said  stressing it  i can't do that with tuples "]], "WdFrWzyYoQg": [["0.32", "eric grimson  welcome to 600x "], ["2.41", "in this first lecture  we're going to talk about some of the fundamental"], ["5.78", "principles of computation and computational thinking "], ["9.59", "for example  what does a computer actually do "], ["12.79", "what are its fundamental operations "], ["16.239", "how do those fundamental operations support what we call imperative"], ["19.88", "knowledge or how-to methods "], ["23.28", "what are the basic elements of a computer that enable it to compute"], ["26.27", "things  described by algorithms  or how-to recipes "], ["31.07", "and finally  how can we use a language  a programming language in"], ["34.94", "our case  to describe those recipes "]], "Rjk7yfFQCPI": [["1.78", "eric grimson  so far  in this course  we've been building up"], ["3.91", "a lot of really powerful tools "], ["5.89", "we've seen different kinds of data structures "], ["7.76", "we've seen different classes of algorithms "], ["9.93", "we've seen ways of putting those together to do"], ["12.23", "interesting things  solving problems "], ["14.85", "and one of the things we might want to do now is just step"], ["16.83", "back for second and ask  so what are we trying to"], ["19.07", "accomplish when we design program  a piece of code "], ["23.02", "what are our goals "], ["24.61", "and typically  there are 2 "], ["26.12", "the first and most important one is we want our program to"], ["29.07", "return correct answers on all legal"], ["32.005", "inputs  all legal inputs "], ["34", "so if we're defining a function that is to apply to"], ["36.21", "integers  we want to work on all values of integers "], ["38.86", "or if there's a particular range  we want to specify that"], ["41.07", "as part of the specs "], ["42.63", "so our first goal is to have code that"], ["44.41", "does the right thing "], ["45.02", "it computes the right answer "], ["46.92", "second goal can often also be  though  that we want it to"], ["49.89", "perform its computation efficiently "], ["52.34", "typically  1 is more important  but there are times"], ["55.01", "when that second point is also critical "], ["56.77", "for example  we've got a program to detect collisions"], ["59.86", "in aircraft  or to do real time"], ["62.15", "control of traffic signals "], ["63.77", "we need it to be very efficient to ensure that it"], ["65.73", "can respond before something happens in the world "], ["69.42", "as a consequence  sometimes 2 is really crucial "], ["72.5", "but even in cases when 1 is most important  it is still"], ["75.43", "valuable to understand and optimize efficiency "], ["78.46", "so even if we've got code that computes the right answer  if"], ["82.14", "we've got alternatives that are going to give the same"], ["84.44", "answer  but one's more efficient than another  we'd"], ["86.88", "like to know about that "], ["88.9", "so that leads us to this question of what we call"], ["91.97", "computational complexity "], ["93.17", "and here we're going to do a somewhat informal version of"], ["95.47", "this  but to give you a sense of how you begin thinking"], ["97.74", "about computational complexity "], ["100.17", "so what does it mean to say  how efficient is an algorithm "], ["102.8", "there are 2 questions we can ask "], ["104.57", "we can ask how much time is it going to take for the program"], ["106.48", "to run  and we can ask how much memory is it going to"], ["109.32", "need  inside of the machine  in order to do the computation"], ["111.7", "it wants to do "], ["113.55", "again  typically  we're going to be most interested in this"], ["116.34", "one  the amount of time "], ["118.51", "we'll see that we can also worry about memory  and for"], ["120.76", "some really big problems  memory's crucial "], ["122.86", "but in general  we're going to worry about time "], ["124.83", "how long does it take for the program to run "], ["127.22", "even there  when we start thinking about that  we want"], ["129.53", "to be careful "], ["130.139", "we want to balance minimizing computational complexity with"], ["134.74", "conceptual complexity "], ["135.695", "and what do i mean by that "], ["137.79", "i'd like to keep my code clean  simple  easy to"], ["141.29", "understand "], ["142.28", "so if i come back to it a month from now  a year from"], ["144.75", "now  i still understand what the code was written to do "], ["147.16", "if somebody else looks at it  they can understand what the"], ["149.18", "code was intending to do "], ["150.78", "and i say that because sometimes one can find"], ["153.19", "interesting tricks one can play to get a little bit more"], ["155.62", "efficiency in the code  but it makes the code much harder to"], ["158.8", "understand "], ["160.13", "and we need to balance that "], ["161.58", "there's no perfect balance  but in general  i'd prefer to"], ["164.11", "have code that's still easy to understand "], ["167.1", "and  having done that  have it be as efficient as possible"], ["170.26", "than to jeopardize the code just to give a little bit of"], ["172.79", "efficiency "], ["174.02", "i want to make sure that our code is still clean  but we do"], ["176.99", "want to worry about how do we minimize complexity "], ["180.26", "and that complexity is typically going to be in terms"], ["182.35", "of how long does it take something to run "], ["185.68", "ok  so now we could say  given a function  we'd like to"], ["188.18", "answer the question  how long will this take to run "], ["191.33", "so what are our choices "], ["192.61", "well  a simple choice would just be run it on some input"], ["195.99", "and time it "], ["197.4", "that  of course  has several problems "], ["199.48", "the first one is  it depends on the speed of the computer "], ["202.56", "the second one is  it actually depends on the specifics of"], ["205.33", "the python implementation "], ["206.6", "depending on which version you're using  you may get"], ["208.36", "slightly different answers "], ["210.6", "both those aren't great "], ["212.19", "and the third one is  of course  it will depend on the"], ["213.77", "value of the input "], ["215.14", "now if i've got something that's a recursive function "], ["217.57", "changing the input will lead to different amounts of time "], ["220.92", "so how do i get rid of these factors "], ["222.21", "i want to be able to make general statements about"], ["224.01", "complexity "], ["225.32", "well  for points 1 and 2  i can avoid those by measuring"], ["228.78", "time  not in terms of actual elapsed time  but in terms of"], ["232.25", "the number of basic steps that the computer executes "], ["236.08", "we'll come back to 3 in a second  but we're going to"], ["238.07", "start with thinking about how do we avoid 1 and 2 "], ["240.27", "and for that  we use what's called a random"], ["244.11", "access machine model "], ["245.9", "we're going to use that as our model of computation "], ["248.26", "what does that say "], ["248.8", "it says the steps are executed sequentially "], ["251.05", "we're not running in parallel "], ["252.99", "and the second assumption that model makes is that a step is"], ["256.12", "an operation that takes a constant amount of time "], ["258.39", "and for that  we're going to assume assignment  comparison "], ["262.39", "arithmetic operations  and accessing an object in memory "], ["265.73", "all take a constant amount of time "], ["268.58", "you might quibble a little bit "], ["269.61", "you say  well  maybe multiplication's a little bit"], ["272.15", "more expensive than addition "], ["273.91", "but as a first pass  this is a pretty good approximation "], ["276.38", "that all arithmetic operations are roughly the same amount of"], ["278.93", "time  comparisons  assignments "], ["281.32", "this last one here might surprise  and we'll come back"], ["283.84", "to that later "], ["284.4", "but in fact  we can set up our system so that  indeed "], ["287.78", "getting any point in memory is going to take a constant"], ["290.18", "amount of time "], ["291.68", "the advantage of this model is it says  i'm removing the"], ["295.06", "aspects of the machine "], ["296.33", "how fast is my machine "], ["297.98", "what kind of python am i running "], ["299.49", "and i'm able to just focus on counting the number of basic"], ["302.64", "steps that i have to execute in order"], ["304.96", "to compute a function "], ["306.54", "so that removes the first two points"], ["308.33", "where i had some concerns "], ["310.04", "for the third point  the third point  i'll remind you  is it"], ["313.26", "depends on the value of the input "], ["315.1", "here we're going to measure time  not in terms of a"], ["317.19", "specific input  but in terms of the size of the input "], ["321.6", "and that'll make sense in a second as we walk through it "], ["325.59", "now  you first say  well  ok  even if i'm talking about the"], ["328.72", "size of the input  might the complexity not still"], ["331.53", "depend on the value "], ["333.37", "let's take a little example "], ["334.75", "here's a piece of code to linearly search a list "], ["337.08", "this is trying to see if a particular"], ["338.5", "element is in a list "], ["340.14", "so what does it do "], ["340.82", "it iterates over the list  for e in the list "], ["343.79", "and for each one of those elements of the list  it"], ["345.37", "checks to see is it equal to the thing i'm looking for "], ["348.35", "if it is  i'll return true "], ["350.75", "if it isn't  i'll return false "], ["352.95", "all right "], ["353.33", "nice simple piece of code "], ["354.74", "here's the problem "], ["356.2", "and the problem is that i could try and measure the"], ["359.18", "complexity of this code in terms of the size of the list"], ["362.49", "l  which makes sense "], ["363.73", "that's the thing that's most likely change "], ["366.19", "but the problem is that if x happens to be near the front"], ["369.6", "of l  it's going to return true almost immediately "], ["372.94", "on the other hand  if x is not in l  then the code is going"], ["374.99", "to have to go through all the elements of l before it can"], ["377.55", "return false "], ["378.76", "and so it's going to give us dense  different answers"], ["380.92", "depending on the specific choice "], ["382.86", "and that's not what we want "], ["383.92", "we need a general way of measuring complexity "], ["387.67", "so what we're going to do  as a consequence  is  we're going"], ["390.92", "to think about what are the different cases under which we"], ["393.89", "can measure complexity "], ["395.9", "well the first one will be what we could call best case "], ["398.85", "it's the minimum running time over all possible inputs of a"], ["401.65", "given size "], ["402.65", "so for all possible lists of some length  for example "], ["406.87", "what's the best case i could see "], ["408.85", "well  for linear search  the answer will be constant "], ["411.21", "it would be independent of the size of the inputs  in the"], ["413.27", "best case  because to be the first thing i'd look at "], ["415.71", "that's not very helpful "], ["417.13", "an alternative is to look at the worst case "], ["420.08", "what's the maximum running time over all possible inputs"], ["423.01", "of a given list "], ["424.43", "and there  what we see for linear search is this going to"], ["426.92", "be linear in the size of the list "], ["429.1", "so it's going to take some number of steps that depends"], ["431.19", "on how long the list is "], ["432.69", "if i double the list  the worst case is going"], ["434.94", "to double as well "], ["436.78", "that may be more useful to me "], ["439.08", "there's a third possibility which is to use the average"], ["441.31", "case or expected case  that is  just average the running"], ["443.95", "time over all possible inputs of a given size "], ["447.3", "and that might be more effective in terms of"], ["448.99", "thinking  on average  what do i expect to see "], ["451.27", "i could even be clever "], ["452.54", "if i know that my inputs don't come uniformly distributed "], ["456.09", "they're not all equally likely  if i have some"], ["458.78", "knowledge about how likely an input is  i could even take"], ["461.78", "advantage of that to do my averaging "], ["464.23", "so an average case  some sense for practical purposes  is"], ["467.47", "kind of nice "], ["468.52", "but in fact  what we're going to focus on is the worst case "], ["471.85", "sort of an upper bound on the running time "], ["473.61", "and it gives us a sense of what happens in the worst"], ["476", "possible case for different kinds of algorithms "], ["478.89", "and in particular  it's going to allow us to compare"], ["481.1", "different classes of algorithms in a"], ["483", "kind of nice way "], ["484.45", "ok  so now i'm saying i want to measure basic steps and i'm"], ["487.715", "going to do it in the worst case "], ["488.95", "let's see how we might try and do that "], ["491.91", "and let's look at an example "], ["494.31", "here's our old friend factorial  a little procedure"], ["497.34", "that's going to compute factorial of n "], ["499.69", "it's a little iterative loop  sets answer initially to 1 "], ["502.78", "and then it runs through a while loop "], ["504.22", "as long as n is bigger than 1  it multiplies n by answer and"], ["508.77", "binds answer to that new value "], ["510.37", "it decreases n by 1 "], ["511.87", "and it keeps going through the loop until it's done and then"], ["513.88", "it returns an answer "], ["515.15", "you've seen this before "], ["516.64", "let's think about how do we measure the complexity here "], ["519.62", "so we want to count the number of steps  right "], ["522.28", "so what have we got "], ["522.929", "well here's the first one and that's basically one step "], ["527.2", "that assignment statement we said that was one of our"], ["529.69", "pieces of our model "], ["530.66", "now inside the loop  what do we have "], ["533.41", "well  for each time in the loop  i've got to do a test "], ["539.02", "and this *= = is actually 2 operations "], ["542.04", "it's a multiplication and an assignment "], ["543.95", "and this -= is actually 2 operations "], ["546.46", "it's subtraction and an assignment "], ["548.78", "so inside of the loop i go through 5 steps "], ["551.87", "and then what do i do "], ["552.73", "well  i go through that loop multiple times "], ["555.3", "so i do it 5 steps and then i do 5 steps  then i do 5 steps "], ["559.5", "and in fact  we know we'll go through that loop n times "], ["562.54", "whatever the value of n is "], ["563.93", "so there are 5n steps "], ["566.32", "go through the loop  and then  finally  i've"], ["568.09", "got one for the return "], ["569.93", "so i could write a little expression for this "], ["571.54", "it says that the number of basic steps execute"], ["574.57", "here is 5n + 2 "], ["577.02", "do we really care about the 2 "], ["579.22", "well  clearly not because  as n gets large  it gets"], ["582.66", "irrelevant "], ["583.18", "this really turns into an expression that"], ["585.19", "says it's 5n steps "], ["587.79", "and again  i'm not worried about tiny differences in"], ["590.17", "terms of milliseconds of something "], ["591.47", "i want to know how does this algorithm behave i make my"], ["594.67", "argument arbitrarily large "], ["596.26", "and so basically  this has 5n steps that we need to execute "], ["600.4", "all right "], ["600.69", "i got rid of the 2  but what about the 5 "], ["604.14", "do i really care about the 5 "], ["606.62", "and i'm going to argue that  in general  we don't  that"], ["608.68", "those multiplicative constants are not relevant when"], ["611.27", "comparing algorithms "], ["613.25", "to see that let's look at a different example "], ["616.13", "here's something we saw before "], ["617.92", "this is trying to find square roots  the square root of x"], ["620.28", "within some accuracy epsilon "], ["622.96", "i'm not going to go through the code in detail "], ["624.41", "we simply set up a step size "], ["625.83", "we get an answer and we've got a little while loop that runs"], ["628.83", "through  looking at different values of answers "], ["631.64", "so it starts at 0  increases by a small amount  a small"], ["634.95", "amount  a small amount and it keeps trying until it finds an"], ["637.31", "answer that's close enough  in which case it returns it "], ["640.09", "if we were to call this procedure with x equal to 100"], ["644.25", "and an epsilon of 0 0001  it's going to take about"], ["647.55", "1 000 000 000 iterations to get through the loop "], ["650.16", "now inside the loop  there are actually about 8 steps if we"], ["652.87", "count them carefully "], ["653.75", "so you could say it's about 8 000 000 000 operations "], ["656.01", "but it's 8 times the number of times through the loop "], ["659.42", "in this case  the number of times through the loop is"], ["661.05", "about 1 000 000 000  "], ["662.5", "now let's compare that to bisection search "], ["665.99", "we saw this before "], ["666.82", "this is a bisection way of trying to"], ["668.27", "find the square root "], ["669.58", "remember what it said we do "], ["670.59", "given a number  we look at a low value of 0 and a high"], ["674.19", "value  let's assume it's big enough  of x "], ["676.39", "we pick the middle point  we check it "], ["678.23", "if it's close enough to the answer  we're done "], ["680.19", "if not  we decide whether the real answer lies between that"], ["684.07", "midpoint and the high number  or between the low number and"], ["686.445", "that midpoint  and then we do the same thing "], ["688.66", "and we keep chopping it down "], ["690.54", "if we call this procedure on the same argument  100  and"], ["693.97", "that same epsilon 0 0001  it's only going to take 30"], ["697.54", "iterations through the loop "], ["699.71", "now it turns out  in this case  there are about 10 steps"], ["701.61", "within each iteration as opposed to what i had the"], ["703.97", "previous case  which was eight  so a few more steps in"], ["706.75", "the iteration "], ["707.7", "but it's really the number of iterations that matter "], ["710.04", "1 000 000 000 versus 30 "], ["711.99", "hey  i'll take 30 any day "], ["713.76", "so what we're really saying is do we care whether it's"], ["715.97", "1 000 000 000 or 8 000 000 000 when we're comparing it to"], ["718.88", "whether it's 30 or 300  and the answer is no "], ["722.07", "what we really care about is the growth in"], ["724.47", "the size of the problem "], ["725.82", "it's the size that matters and so those multiplicative"], ["728.43", "factors don't concern us very much "], ["731.62", "and what that  then  says is  given that it's the difference"], ["735", "in the iterations through the loop that matter  we're going"], ["737.29", "to drop the multiplication factor "], ["738.85", "it's probably not particularly relevant "], ["741.06", "and so we're going to focus on measuring complexity as a"], ["743.58", "function of the input size "], ["746.01", "we'll focus on the largest factor in whatever expression"], ["748.99", "we write that captures the number of basic steps  and"], ["751.44", "we're going to be mostly concerned with"], ["753.19", "the worst case scenario "]], "LxI8Mko_MKs": [["0.27", "in this seventh lecture  we're going to talk about testing and debugging "], ["5.14", "while it would be great if we could always write correct code that ran the"], ["8.92", "first time we tested it  things usually don't work out that well "], ["13.19", "so we're going to talk about how to tests code to determine if it might"], ["17.48", "have a bug "], ["18.75", "focusing on black box testing  where we exercise paths through the"], ["22.91", "specification  and glass box testing where we exercise"], ["27.02", "paths through the code "], ["29.35", "we will also talk about techniques for debugging "], ["32.08", "that is  isolating the location of bugs in our code "], ["36.04", "in particular we will talk about treating debugging as a search"], ["39.37", "process  and use the ideas of binary search to help isolate"], ["43.45", "and detect bug sources "]], "-VjpRFaz5f4": [["1.07", "eric grimson  i want to show you a visualization that gives you an idea"], ["4.16", "of bisection search "], ["5.7", "just to give you a way of thinking about how this actually works "], ["8.38", "so imagine i have a sequence of sorted items  like these right here "], ["13.07", "what does bisection search say "], ["14.37", "it says i'm going to start by looking at the middle element "], ["17.08", "if i'm lucky  it's the thing i'm looking for "], ["19.55", "if not  i can use the difference between what i'm looking for and that"], ["23.33", "element to decide that it has to be in the lower half "], ["26.4", "and so i can instantly take these things and ignore them "], ["31.36", "having done that  i'm now going to look at the middle element of what's"], ["33.93", "left  and say is the thing i'm looking for there "], ["36.75", "if i'm lucky  it is "], ["37.67", "if not  i'll use again the difference between what i'm looking for and that"], ["41.13", "element to decide which half i can throw away "], ["43.79", "for example  might be able to toss those away "], ["48.42", "and then i can look here and eventually decide whether i've got the"], ["52.63", "thing i'm looking for or not "], ["54.3", "the idea is that on each stage  i can take half of the remaining things and"], ["59.17", "ignore them "], ["59.92", "throw them away  which makes this a very efficient way"], ["62.91", "of doing the search "]], "j9as5xwUwA8": [["0.33", "in this eighth lecture we're going to talk about how to measure the"], ["3.59", "complexity of different algorithms "], ["6.75", "we'll give you a model of what we mean by complexity  how to estimate how"], ["10.89", "much time a computation will take for an arbitrarily large input argument "], ["15.68", "our goal is not to estimate actual time  but rather to reason about"], ["20.06", "different classes of algorithms and their inherent complexity "], ["24.93", "we'll use this idea to introduce a range of classes of algorithms from"], ["29.29", "constant to linear  to more complex classes  such as polynomial and"], ["34.47", "exponential "], ["36.34", "at the end of this lecture  you will be able to categorize the complexity"], ["40.16", "of algorithms  and especially to compare the costs of decisions you"], ["44.14", "make in designing an algorithm "]], "SQUNkr4bQyQ": [["0.85", "well  what we have is a bunch of observations that we made with our"], ["4.85", "experiment "], ["5.39", "you can see them here plotted as the blue points "], ["8.22", "and what we'd like to do is to somehow discover the most likely line that"], ["14.79", "represents the theory that we hypothesized that explains how the"], ["19.66", "spring works given the observations that we have "], ["23.67", "so what we did is that  for a particular force that's being applied "], ["29.16", "we have the notion of adjusting the parameters of our prediction to come"], ["33.22", "up with a particular prediction "], ["35.09", "and what we'd like to do is to adjust those parameters so that the"], ["42.71", "prediction is the most likely one given the observation that we made "], ["47.88", "and we discover that the difference between the two of those observations"], ["51.63", "and the prediction we described as the error "], ["54.51", "so the likelihood that the prediction is the right one is sort of determined"], ["60.61", "by the size of the error "], ["62.55", "so we take the i-th observation and we compute the error by subtracting off"], ["67.69", "the i-th prediction "], ["69.1", "and so this is the likelihood here of such an error occurring "], ["73.25", "and the likelihood gets bigger the smaller the error is "], ["77.86", "and we saw that on the previous slide  that small errors are much more likely"], ["82.33", "than large errors "], ["84.33", "and what we'd like to do is to now say  ok  well  i have many such"], ["88.94", "observations that i've made "], ["90.77", "and the likelihood of making all those observations will be  like with"], ["96.1", "probabilities  the product of all the individual likelihoods "], ["100.89", "so if i'm going to go off and look at the likelihood of each observation "], ["106.99", "what i'm going to do is to then multiply all those together "], ["111.39", "and here's what my job is going to be "], ["112.84", "i want to choose the parameters of my prediction "], ["119.23", "so in this case  it would be the constant 1 over k "], ["122.96", "that's the slope of the line "], ["125.15", "i want to choose the slope and then the intercept at the line such that"], ["130.669", "that particular choice of parameters maximizes the likelihood "], ["135.02", "so i want to maximize this product "], ["138.71", "so we want to maximize the product of the likelihoods of the errors "], ["143.5", "so that will actually be the same as minimizing 1 over the product "], ["149.24", "so if we want to minimize this product of the likelihood of the error  so 1"], ["157.19", "over the product "], ["158.68", "so let's work on that a little bit "], ["160.38", "let's actually start by taking the log "], ["164.12", "it turns out that whatever parameters will minimize the 1 over the product"], ["170.82", "will also minimize the log of that expression "], ["174.33", "so let's take the natural log  natural log ln "], ["179.89", "and so the natural log of 1 over this product of "], ["187.49", "well  let's see "], ["188.25", "so the natural log of 1 over something is minus the"], ["192.22", "natural log of the product "], ["195.15", "and the log of the product is the sum of the log "], ["198.67", "so we basically all do the same summation here "], ["202.57", "and now what we want is the natural log of this error "], ["209.39", "and i'll write it out this time "], ["211.9", "observations minus the predictions "], ["214.41", "ok "], ["214.67", "so the likelihood of the error "], ["217.96", "so we're still trying to minimize this "], ["220.745", "that's our goal "], ["222.36", "and now what we're going to do is take advantage of our knowledge about what"], ["227.53", "this error  the likelihood looks like "], ["231.43", "so we're going to use our knowledge to expand this further on the next slide "], ["238.75", "so just carrying on from the previous slide  we're going to want to minimize"], ["244.77", "this sum  which is the natural log "], ["248.43", "and now i'm going to go off and write it in the likelihood of the error "], ["253.61", "so it's  1 over 2 pi sigma squared "], ["257.899", "and i'm just using the formula here for the normal distribution "], ["261.92", "so this will be e and this will be minus "], ["265.7", "and now the error itself here was the observed value minus the predicted"], ["270.84", "value squared  all over the variance of the errors "], ["277.77", "ok "], ["278.54", "so that seems pretty straightforward "], ["281.99", "let's go ahead and simplify that "], ["283.74", "so i'm going to take care of the minus sign here as i do the simplification "], ["288.61", "so let's see "], ["289.91", "the natural log of a product is the same as the sum of the natural logs "], ["296.21", "and the natural log of 1 over something is minus the natural log of"], ["300.86", "the something "], ["301.74", "so we'll use that minus to cancel out some of this "], ["304.83", "so this will be the same as the natural log of the square root of 2 pi"], ["311.07", "sigma squared  plus "], ["315.73", "i'm going to move this minus sign again in "], ["318.07", "minus the natural log of this guy  which the natural log of e to the"], ["323.45", "something is something "], ["325.37", "i'll take care of that minus sign "], ["327.39", "and so this will be observation minus the prediction squared "], ["333.5", "all over sigma squared "], ["335.92", "ok "], ["336.59", "and we're going to be wanting to sum all those up "], ["340.6", "so this is the same sum as before "], ["343.01", "and we've just used the minus sign and expanded out the log a little bit "], ["347.85", "now let's observe that some of these terms are constant "], ["350.38", "this is a constant  as is this guy "], ["352.74", "he doesn't change "], ["354.76", "the error processes are sort of stable and their statistics are stable as"], ["359.69", "we're making our measurements "], ["361.43", "and so what we discover is that this guy here  particularly if we're doing"], ["364.77", "a minimization problem  this is all proportional "], ["367.66", "and i can just get rid of the constants "], ["369.24", "they won't affect the minimization at all "], ["371.16", "the same choices for the parameters of the prediction that minimize this"], ["376.96", "equation will also minimize this equation "], ["379.72", "so i'm just taking out all the constants "], ["382.81", "we don't need them here to help us with our minimization problem "], ["386.32", "and i end up with that  which is sort of a magic result in the business of"], ["392.8", "processing data points "], ["395.48", "this is what's called the sum of the square of the errors  or sse for"], ["404.51", "short  sum of the square of the errors "], ["408.3", "and if we minimize that  then we'll have made the most likely choice of"], ["414.46", "the parameters "], ["415.28", "if we choose parameters such that we minimize the sum of the square of the"], ["421.69", "observed errors  then that will be the most likely predictor for the"], ["427.45", "observations that we have "], ["429.35", "and we actually have sort of a nickname for this guy "], ["431.78", "we often call this sort of as shorthand  the least squares "], ["437.75", "finding the values of the parameters for the prediction that minimize the"], ["442.38", "sum of the square of the errors is a very common thing to want to do to"], ["446.23", "data points "], ["447.33", "and in fact  pylab has a built-in procedure that will do that for us "], ["452.45", "it's called polyfit "], ["454.56", "let me show you how to use it "], ["456.74", "the first example here is finding the parameters for a linear predictor "], ["462.52", "so we're making the assumption that the prediction in this case of the"], ["467.75", "extension of the spring is based on a linear relationship between the mass"], ["473.35", "and the observation that we make "], ["475.21", "so we're asking polyfit to find us the parameters a and b "], ["479.71", "so it's going to find us those given in our case a bunch of forces that we"], ["485", "applied to the spring and a bunch of observations that we made "], ["488.57", "and its job is to find the best such set of parameters that minimizes the"], ["492.98", "sum of the square of the errors "], ["495.3", "we can also asked for fits with higher degree polynomials "], ["500.43", "here's one that does a parabolic fit "], ["503.07", "so this would be a second-degree equation "], ["505.98", "here we're assuming that the relationship between the prediction"], ["511.1", "and the observation  or the basic parameters and the observation is"], ["516.76", "governed by a second-order equation  so ax squared plus bx plus c "], ["522.679", "so given  again  the forces that we've applied and the observations we made"], ["528.31", "of the extensions  we could get a second-order fit "], ["532.14", "and in fact  if we set this parameter to 3  we would be fitting a cubic"], ["536.84", "equation  so forth and so on "], ["539.36", "so our next step is to actually use these routines and try to find those"], ["544.16", "parameters given the observations that we made "]], "2e6pE07JJ8M": [["0.78", "eric grimson  we've now seen a bunch of examples of recursive functions "], ["4.36", "seen some of the power of them "], ["5.77", "we keep coming back to this idea of break a problem down into smaller"], ["8.72", "versions of the same problem "], ["10.39", "really great way of trying to tackle a problem "], ["12.9", "we're going to do one last thing "], ["14.545", "and that goes back to when we ran fib "], ["17.51", "when we ran fibonacci  we might have noticed that as we made the arguments"], ["22.26", "larger and larger  it slowed down "], ["23.78", "which is not surprising "], ["24.56", "it's calling itself multiple times "], ["27.3", "but suppose we wanted to actually count the number of times that fib"], ["29.98", "called itself recursively "], ["32.22", "multiple ways of doing it  but one of the ways in which we can do this is to"], ["35.29", "use what's called a global variable "], ["38.325", "what does that mean "], ["38.87", "well  so far  all the functions have communicated with their environment"], ["43.41", "strictly through their parameters and their return values "], ["46.21", "if it's when we call a new function  it creates an environment with some"], ["49.06", "parameters passed in "], ["50.25", "it does some work internally  and it returns a value as the"], ["53.01", "value of its response "], ["55.02", "we can make a variable or declare a variable to be global "], ["59.75", "and what this means is that the name is defined at the outermost scope of"], ["64.12", "the program  rather than the scope of the function within which it appears "], ["68.94", "it's global because it's going to appear up at the top level "], ["71.17", "it's going to be part of what we want to deal with when we're interacting"], ["74.42", "with  for example  the python shell "], ["78.62", "as it notes here  this can be a bit dangerous "], ["80.98", "and we'll talk about that in a second "], ["82.25", "but let's just look at how we might do this "], ["84.77", "so  here's the idea "], ["86.78", "we're going to call this a metered version of fibonacci "], ["89.68", "it has much the same form as before "], ["91.62", "there is the recursive call  just as we had before  using a"], ["95.03", "different name  of course "], ["96.19", "but we do two things "], ["98.01", "right here  we make a declaration that says the variable numcalls is global "], ["104.24", "that means it's going to be bound way up at the top  at the highest-level"], ["108.44", "environment "], ["109.76", "inside of fibmetered  we're going to actually change numcalls "], ["113.97", "this says every time we call fibmetered  we're going to increase"], ["118.39", "that global variable by one "], ["120.29", "great "], ["121.08", "so that's going to count how many times it's called "], ["123.56", "we can test this with a little test script here "], ["126.46", "i'm going to run fib for some number "], ["128.18", "i'm going to have i roll over from 0 up to n "], ["131.84", "and notice what i'm going to do "], ["132.99", "each time i go through the loop  i'm going to again say numcalls is a"], ["137.48", "global variable "], ["138.51", "it's defined up in that top-level place "], ["140.92", "and i'm going to set it to zero "], ["143.82", "that is going to have the effect of in the global environment changing"], ["147.27", "numcalls to zero "], ["148.27", "and then i'm going to actually do some work and print up some results "], ["152.69", "i'm going to do the work of figuring out what fibonacci is "], ["155.31", "the call to fibmeter will  every time it calls it  change numcalls by one "], ["160.65", "and when i'm done and when it returns  i can print out how many times was"], ["164.51", "that actually called "], ["166.51", "ok "], ["167.07", "let's see what happens if we do this "], ["168.45", "i'm going to go over and start up over here inside of my idle environment "], ["173.37", "and if i load that in  let's actually do a test on fib "], ["178.984", "and this put means we're going to do up to five "], ["182.82", "and it now tells us  oh cool "], ["185.16", "when i call a fib on zero  the answer is one "], ["188.14", "it was called one time "], ["189.09", "makes sense "], ["189.73", "when i call fib on one  the answer is one "], ["192.03", "it was also called one time "], ["193.11", "we knew those were the base cases "], ["194.68", "and then you can see the responses as we move up "], ["196.83", "so let's make this a little bit bigger "], ["198.64", "let's do testfib "], ["202.36", "oh  let's make it up to 20 "], ["206.55", "then we'll see what it does here "], ["209.54", "you see it's moving pretty quickly "], ["210.87", "it's starting to slow down a little bit "], ["212.44", "but we're actually now calling testfib in that metered form "], ["216.73", "and it's showing us how many times it's called "], ["219.34", "also notice  if you look at the numbers  it's clear that we're"], ["221.76", "resetting numcalls each time around "], ["223.69", "and that  if we go back to our slides  came from right here "], ["226.87", "each time through the loop and testfib  we reset numcalls to zero up"], ["230.59", "in that top environment "], ["232.04", "so that when we go ahead and call fibmetered  it is starting from zero"], ["237.17", "and doing a count for each time it calls recursively within itself "], ["241.58", "a nice tool "], ["242.4", "a tool that's really kind of handy  and something that we'll come back to "], ["244.83", "because it is a way of being able to keep track of some things "], ["247.865", "but i want to finish with a couple of comments "], ["251.66", "first one is use it with care "], ["254.53", "putting a variable as a global variable is destroying the"], ["257.54", "locality of the code "], ["258.519", "one of the beautiful pieces about recursive code is all of the function"], ["263.12", "call contains within it all the information it needs "], ["266.55", "the parameter's passed in  it does all the work internally  locally  and it"], ["269.79", "simply returns a value back out "], ["272.05", "that is an elegant way of being able to not only think about what's going"], ["275.36", "on  but to be able to deal with the code "], ["277.73", "once we have global variables  they can be modified or read in a wide"], ["282.56", "range of places "], ["283.48", "and that's going to make it really easy to break the locality  especially"], ["287.58", "if someplace outside of the function we're dealing with makes a change for"], ["291.8", "global variable and that affects the computation inside that local call to"], ["296.21", "a procedure "], ["297.42", "this is going to allow the potential for introducing bugs "], ["301.23", "and most computer scientists will be very strong about arguing that one"], ["304.81", "should not use global variables if at all possible "], ["307.83", "it is much better to encapsulate the computation locally "], ["311.14", "but here's an example where we're metering things  where having a global"], ["314.48", "variable can be really handy "]], "CJh-mscFZgU": [["1.46", "eric grimson  so now we have lists "], ["2.9", "ordered sequences of arbitrary elements  but they can be mutable "], ["6.39", "we've already seen some operations on them "], ["8.33", "but there's a lot of other operations that we'd like to have and"], ["10.65", "we do have on lists "], ["11.88", "so for example  we can iterate over them "], ["14.65", "what does that mean "], ["15.31", "it says inside of a for loop or a while loop  but certainly inside of a"], ["18.19", "for loop  i can have a call with a loop variable that's iterating over"], ["22.57", "that structure "], ["23.7", "and let's look at an example of it "], ["25.43", "so i've already bound that variable univs "], ["27.92", "and so this says i'm going to let e  in turn  be each element in univs "], ["32.409", "and i can do things like print up some information about them "], ["35.58", "and since each of those elements is itself a list  i can have another"], ["38.29", "loop  where i loop over e  letting u be each element inside of there "], ["42.15", "then i print something out "], ["43.69", "and if we just go over to my idle screen here  i'm just printing out "], ["49.14", "so what's the value of univs  what's the value of univs 1 "], ["52.35", "and then  at the bottom  you can see that loop  where  in fact  i print"], ["56.46", "some information and i loop through each of the pieces"], ["59.2", "inside of that structure "], ["60.95", "as with tuples  what that iteration is doing is it's setting up an internal"], ["65.01", "index  starting at 0  and walking down each element of the list till it gets"], ["69.76", "to the end of the list  with the index pointing to each element in turn "], ["73.31", "letting me extract and do something with it "], ["75.3", "and that something might be  in fact  printing or looping over"], ["77.92", "that interior structure "], ["79.21", "so i've got iteration "], ["80.17", "this sounds pretty nice "], ["82.88", "what else do i have "], ["84.71", "well  we've already seen that i can add things to lists "], ["87.6", "and i did that with append "], ["89.05", "now again  if i go over to my idle shell  i can do techs append "], ["93.32", "in fact  before i do that  let's just remind you "], ["95.49", "techs is a list of mit  caltech  and rpi "], ["99.11", "and suppose i say i'm going to do techs  and i'm going to"], ["101.37", "append to it the ivys "], ["104.09", "if i now look at the value of techs "], ["107.38", "a-ha "], ["108.53", "as i would have expected "], ["109.76", "remember what we said about append "], ["111.2", "it's a method  which is why we've got that funky little period there "], ["114.62", "and it's a method that  in fact  has a side effect "], ["117.69", "it mutates "], ["119.95", "it causes a side effect in which  in particular  i'm going to take techs as"], ["125.65", "a list  and i'm going to change the end of it to add a new element in "], ["129.24", "and this new element  in this case  was itself a list "], ["131.82", "so the structure is now a list four-long  the first three elements of"], ["135.88", "which are just strings  the fourth element of which is a list "], ["140.22", "and that's what got printed out there "], ["142.35", "now  suppose i said  that's nice  but i don't want to have a whole list"], ["147.44", "hanging off as appendage "], ["148.65", "i'd like to have a list with everything at the same element "], ["151.1", "i'd like to flatten them "], ["152.49", "in that case  what i'd really like to do is to take two lists and"], ["154.93", "concatenate them together "], ["156.51", "it's called flattening "], ["157.75", "and we can do that using the plus operator "], ["160.05", "so i'm going to reevaluate these pieces again "], ["162.96", "let me just bring them back into my environment "], ["166.68", "and i'm running through that loop  because now what i'd like to do is"], ["169.34", "just go back to where i have with techs before "], ["171.37", "there's techs "], ["172.52", "and i'm now going to ask flat to be a name for what i get by concatenating"], ["178.1", "techs and ivys together "], ["179.93", "the plus sign's saying just do a concatenation "], ["182.55", "and if i look at flat "], ["184.57", "ah  nice "], ["185.65", "it is a sequence  a list of elements  all at the same level "], ["189.68", "so append sticks something in at the end of the list "], ["193.27", "addition or concatenation puts copies of two lists together "], ["197.72", "and notice it creates a new list "], ["199.68", "and to see that  let's see what happened with techs "], ["202.755", "ah  yes "], ["203.54", "it has not changed  and neither has ivys "], ["206.8", "that's actually important "], ["208.56", "and so to look at that  what that's really saying is that in the case of"], ["214.11", "append  i am mutating "], ["216.03", "i'm changing one of the lists "], ["218.64", "in the case of concatenation  i'm creating a new version of those lists "], ["223.28", "i'm literally creating a copy of it and then adding a copy  if you like "], ["228.26", "of the second list to it  as well  which allows me to separate out"], ["232.01", "different ways of thinking about how i might want to manipulate lists "], ["235.56", "so i can mutate when i need to  but i might want to just make"], ["238.58", "copies when i need to "], ["239.68", "and i can do that "], ["241.32", "let's look at one last example "], ["243.16", "and this is going to look at an example of both where things go wrong"], ["246.94", "when i'm iterating over lists and how i get around that "], ["249.82", "and for that  i'm going to bring up a new piece of code "], ["254", "and the piece of code here is going to be something that's going to look at"], ["258.07", "removing duplicates in a list "], ["260.1", "so the idea is i want to have two lists "], ["262.81", "and i'd like to get back a list with just those elements that only appear"], ["266.09", "once inside of the list "], ["267.93", "so i could write a little loop to do it "], ["270.23", "here it is "], ["270.57", "i'm going to remove duplicates "], ["271.94", "now i have two lists  l1 and l2 "], ["273.13", "i'm going to loop over l1 "], ["275.1", "and i'm going to say  for each element in l1  if it's in l2  let's just"], ["278.79", "remove it from l1 "], ["280.02", "and again  remove is a method "], ["281.88", "there's the dot "], ["282.91", "don't worry about the details of it "], ["284.08", "but it basically takes the list l1  takes the first instance of that"], ["287.84", "element e1  and takes it out of the list by mutating "], ["291.36", "so let's look at what happens if we do this "], ["293.79", "and in fact  we can load this up into our idle shell "], ["298.65", "and if i do that  let's look at what happened here "], ["302.05", "in fact  let's look at it in a little bit more detail "], ["305.12", "l1 i'm going to start off as the list 1 2 3 4 "], ["307.09", "3  4 "], ["307.922", "l2 is the list 1 2 5 6 "], ["310.43", "and i'm going to remove the duplicates between l1 and l2 "], ["313.87", "ideally  i would like that to be just having the list l1 be those elements"], ["321.73", "that are not duplicated in l2 "], ["323.99", "but if i  in fact  look at what l1 is  printing it out  i get"], ["328.62", "the list 2  3  4 "], ["330.93", "so why does that happen "], ["332.47", "well  let's look at that in a little bit more detail  as well "], ["336.95", "the problem is that inside of the loop  python is keeping track of where"], ["339.89", "it is in the list using this internal counter "], ["341.84", "we already said  as it iterates over l1  it's keeping a little index that"], ["345.495", "says where it is "], ["346.36", "when i decide to remove something from l1  i'm going in and"], ["350.18", "changing the list "], ["351.79", "but i don't adapt the counter "], ["353.46", "so i can literally change the list by one  which means the counter is now"], ["357.43", "pointing to a different place in the list  because if i shorten the list by"], ["360.95", "one by removing something from the front  the counter  if it was"], ["363.66", "pointing  for example  at a second point in the list  is now pointing at"], ["366.46", "the third point in the list "], ["367.75", "so when we mutate a list  we change its length "], ["370.5", "but python cannot adapt to that "], ["372.65", "and obviously  that's a problem  because it doesn't do what we'd like "], ["375.13", "so when we are doing mutation on lists while iterating over them  that's"], ["378.86", "probably not a good idea  at least not on the list we started with "], ["382.4", "so how could we do this better "], ["384.48", "well  let's clone "], ["386.61", "and what does clone say "], ["387.63", "it says  let's make a copy of the list "], ["390.68", "and i can do that with this very simple form here "], ["392.54", "if i take the list l1 and i say  in square brackets  just a simple colon "], ["396.82", "it says  give me all the elements from the first to the last "], ["399.56", "but make me a copy "], ["401.48", "and now i can loop over l1start  but mutate l1 "], ["405.61", "so this is changing l1  but this is looping over a copy of l1 "], ["410.3", "and if i do that  which was the second piece of code i had there  that's why "], ["414.37", "in fact  it will print out just 3  4 "], ["416.42", "it removes the 1 and 2 from l1 because those are duplicates  but it does it"], ["421.34", "without getting confused about where it is inside of pieces "], ["424.51", "and so what this says is that we want to use a copy of l1 as l1start "], ["431.27", "and notice  by the way  i actually have to make a copy "], ["433.53", "if i were simply up here to have said instead  let's use l1start just to be"], ["437.65", "l1 rather than l1 with that funky thing at the end  it"], ["440.78", "would not have worked "], ["441.91", "why "], ["442.87", "because if i say this form  l1start points to the value pointed to by l1 "], ["448.88", "which is the list itself "], ["450.26", "and i'm back to the first state "], ["451.82", "by using l1 with the colons  i literally make a copy "], ["456.81", "and now i can walk down a copy checking for duplicates while changing"], ["461.17", "the original list itself "], ["463.59", "so now we've seen properties on lists "], ["465.31", "we can iterate over them "], ["466.39", "and we can do it while mutating them "], ["468.13", "and when we need to  we'll want to use clones to make copies of lists so that"], ["471.94", "we make sure that we keep track of where we are inside of that structure "]], "ftu1cc1A8q8": [["0.78", "eric grimson  i want to look now at one last example on doing some"], ["3.17", "interesting things with graphs "], ["4.97", "part of what we've been trying to show you is how graphs capture a range of"], ["7.84", "problems and some ways in which we can explore them "], ["10.45", "we're doing it quickly "], ["11.65", "we don't expect you to fully grasp everything about graph theory  but we"], ["14.56", "wanted to give you a flavor of how graphs can be really valuable in"], ["17.61", "solving certain kinds of optimization problems "], ["20.73", "the last example i want to look at is something called a clique "], ["24.39", "and you may remember this from middle school "], ["27.05", "it has some of the same flavors "], ["29.16", "there are some problems for which finding subgraphs or subsections of a"], ["33.06", "graph can be important  especially subgraphs that are complete "], ["37.29", "and what does complete mean "], ["38.93", "complete means that for every node in that subgraph  it has an edge to every"], ["44.1", "other node in that subgraph "], ["46.29", "it's called complete because it has a complete set of edges "], ["48.87", "now that doesn't say the whole graph is complete "], ["50.87", "it says  given a graph with some edges in it  we'd like to find what are the"], ["54.55", "places in it that have portions that are complete "], ["59.62", "now there are lots of places where this is valuable "], ["62.83", "finding  for example  sets of people in a social network that all know each"], ["66.08", "other is a simple example of this "], ["68.4", "finding subjects in an infected population that all have had contact"], ["72.41", "with one another can also be really important  for example  in disease"], ["75.95", "control or in checking the spread of a disease "], ["78.97", "network traffic  network flow  can often be analyzed by"], ["82.39", "using clique problems "], ["84.06", "so this idea of finding a clique can be really valuable "], ["87.78", "just to show you an example "], ["89.76", "let's think about users in a social network "], ["93.81", "for a given user  we'd like to say things like "], ["97.3", "can i find the set of all other users that know this person and that also"], ["101.1", "know everyone else in the group "], ["103.27", "what's the largest set of users like that "], ["106.48", "or  having found the largest set  can i pull that maximal clique out and"], ["111.34", "then find the next largest set "], ["112.77", "and in essence  partition the graph up into clusters or components of people"], ["117.54", "that all know one another "], ["119.45", "how might i do that "], ["120.38", "well  we're going to get to that in a second "], ["122.78", "but i want to stress this idea of using cliques"], ["125.27", "actually is very valuable "], ["127.15", "it's used  for example  in analyzing communications networks "], ["130.35", "it's used to design circuits  doing layout "], ["133.69", "it's used in computational biology to analyze gene expression data "], ["137.89", "it's used by places like google and others to analyze social networks "], ["141.69", "and it's used by the centers for disease control and other such places"], ["145.48", "to do things like analyzing disease networks among infected populations "], ["149.75", "so all of these are examples of places were cliques are of value "], ["153.76", "and as i said  or hinted  already  for cliques we're particularly going to be"], ["157.91", "interested in finding a maximum clique or a max clique "], ["160.88", "a clique "], ["161.81", "set of nodes in a graph that has a complete set of edges "], ["165.38", "every node is connected to every other one "], ["167.51", "and i want to find the largest such subgraph "], ["171.03", "now there are some wonderful algorithms for doing this  some very"], ["174.25", "efficient ones  but they're fairly complex "], ["176.695", "and so for our purposes  we're just going to use the brute force method "], ["180.12", "going way back to the beginning of this class where we talked about"], ["183.22", "straightforward methods for generate and test if you like"], ["185.78", "methods for doing that "], ["187.26", "and what we can do here is the following "], ["190.11", "we're going to first find all the subgraphs of a graph  all the"], ["193.72", "different partial collections of nodes  if you like  in a graph "], ["197.39", "for each one  we're going to test to see if it's complete  and then we'll"], ["201.42", "just keep track of the largest one "], ["203.32", "that will give us the maximum clique "], ["205.28", "and we could then  of course  extend that recursively "], ["207.37", "once we've done that  we could pull those nodes out of the graph  remove"], ["210.48", "them from the graph  and go ahead to find the next largest clique and keep"], ["213.46", "on doing it "], ["214.9", "let's do that in the next segment "]], "pflzzK47wEo": [["0.31", "while the meat of the course is in this courseware section "], ["3.16", "we have some other resources for you to access in the"], ["5.98", "header at the very top of the page "], ["8.31", "you are currently in the courseware section  where most"], ["11.11", "of the instructions and assignments will be located "], ["14.08", "the course info section contains any announcements"], ["17.15", "that the course staff would like you to see "], ["19.48", "it also has all of the handouts associated with the"], ["21.7", "course  including the syllabus and calendar "], ["24.94", "if your course uses a textbook  you should be able"], ["27.38", "to find an online version of the textbook in"], ["29.86", "the textbook section "], ["31.14", "the discussion section has a question and answer forum "], ["33.77", "where you can ask questions have them answered by the"], ["36.37", "course staff or your fellow students "], ["39.11", "the wiki section is where all of the students in the course"], ["42.23", "can keep their collective course notes "], ["44.55", "finally  you can see how you're doing in the course in"], ["47.96", "the progress section "], ["50.02", "you can see your overall edx profile  including your"], ["53.1", "current enrollment if you click on your username in the"], ["56.04", "top right corner of the page "], ["57.87", "you should also be able to change your personal"], ["59.7", "information from this dashboard "], ["61.55", "the next several videos will go into more depth on"], ["64.39", "discussion forum usage  wiki usage  and any course-specific"], ["68.65", "features that you may need "]], "fwEyyCo5dxo": [["1.16", "john guttag  hello  and welcome back to 600 "], ["4.21", "we're about to move away from probability  but before i do  i can't"], ["7.79", "resist looking at a probability question that has stumped many"], ["11.02", "supposedly clever people  the so-called monty hall problem "], ["16.219", "the problem is based on a television game show called let's make a deal "], ["20.57", "the show was popular in the 1960s and '70s "], ["24.36", "imagine that you're on that show  and you're given the choice of three"], ["28.56", "doors  one  two  or three "], ["33.51", "by the way  the people who were on the show dressed up in silly costumes in"], ["37.6", "the hope it would attract the idea of the host  monty hall  who would invite"], ["41.58", "them up front to play "], ["43.9", "behind one of the doors is a car "], ["46.43", "now  ok  maybe it wasn't this car in the 1960s "], ["49.81", "and behind the other two doors are goats "], ["53.23", "the contestant is asked to choose a door "], ["56.02", "after "], ["56.58", "let's assume you're the contestant "], ["58.47", "after you have chosen a door  the door remains closed "], ["61.88", "monty hall  who knows what is behind the door  now has to open one of the"], ["66.23", "two remaining doors  and the door he opens must have a goat behind it "], ["71.35", "after monty opens a door with a goat  he will ask you  the contestant  to"], ["76.08", "decide whether you want to stay with your first choice  say door number"], ["80.34", "one  or switch to the last remaining door  in this case  door number two "], ["86.05", "what should you do "], ["87.82", "well  the audience will shout all sorts of advice  but you should ignore"], ["91.38", "it and figure it out yourself "], ["93.42", "the problem has been around for quite a time  and the literature suggests"], ["96.93", "that most people get it wrong the first time "], ["99.73", "in 1991  parade magazine published a correct solution to the problem  and"], ["104.51", "approximately 10 000 readers wrote to claim that the magazine got it wrong "], ["109.92", "by the way  among those 10 000 readers  1 000 claimed to have phds "], ["114.54", "i hope none of them were from mit "], ["116.8", "if you were taking this class at mit  you would now have the opportunity to"], ["120.12", "play the game for fabulous prizes "], ["122.67", "since you're not  you'll have to settle for my working the"], ["125.03", "probabilities "], ["126.36", "i'm going to do that in two different ways "], ["129.56", "so let's look at the first way "], ["131.69", "assume that without loss of generality  you choose door one "], ["136.61", "now  monty will open another door  and again  let's assume without loss of"], ["141.17", "generality  he opens three "], ["144.32", "and there stands the goat "], ["147.89", "when the game started  it was equally likely that the car was behind door"], ["153.49", "one or two "], ["155.665", "because we know it wasn't behind three "], ["158.16", "it was placed at random "], ["160.06", "so  one and two are equally likely "], ["162.44", "therefore  it doesn't matter "], ["166.46", "you can switch or not switch  and the odds will be the same  0 5 "], ["171.26", "sound plausible to you "], ["173.34", "it does to most people  but in fact  the argument is flawed "], ["178.86", "let's look at the problem a different way "], ["182.04", "again  you're the player and you make a choice "], ["184.54", "with the probability of 1/3  the choice is correct "], ["189.47", "that means that if you could choose the other doors  the probability of"], ["194.3", "the goat or the probability of the car being behind doors two or three  the"], ["199.6", "remaining one is 2/3 "], ["202.95", "so with probability a third  you are correct  and the car is indeed behind"], ["207.59", "the door you chose "], ["208.73", "but with probability 2/3  you were wrong  and the car was behind one of"], ["214.58", "the other doors "], ["216.18", "now comes the key moment "], ["218.24", "monty opens the door that he knows does not contain the car "], ["225.64", "note that this choice is not independent of the"], ["228.87", "choice made by the player "], ["230.95", "the player has made a choice  say door one  forcing monty to"], ["235.6", "choose two or three "], ["237.68", "he does not want to open the door with the car  because then the game would"], ["240.95", "be over  so he opens the other door "], ["243.47", "so in fact  by switching  the contestant has a 2/3"], ["248.32", "probability of winning "], ["250.56", "it's tricky "], ["252.67", "when we work probabilities  we always have to think about whether or not we"], ["258.29", "are looking at independent events or related events "], ["263.06", "to drive this point home  i want to look at some code that"], ["266.75", "simulates the game "], ["269.05", "so  here's the game "], ["270.31", "i'm going to simulate it for 100 trials "], ["273.61", "and i'm going to pass in this choose function  and we're going to look at"], ["277.39", "two different ways that we might choose which door to open after the"], ["281.45", "contestant has made a choice "], ["283.95", "we'll look at the number of times the contestant wins "], ["287.96", "the number of wins by not switching  we'll look at the number of times a"], ["291.79", "contestant wins by switching  and the number of times a contestant doesn't"], ["296.27", "win it all "], ["297.47", "the door will be behind one  two  or three  and the guests will have to be"], ["302.32", "one  two  or three "], ["303.68", "so for t in range numtrials  we first choose a place to"], ["307.91", "put the car at random "], ["309.74", "the contestant then makes a guess at random "], ["312.83", "we then call the choose function  this one  which takes as an argument the"], ["317.83", "guess and the door behind which the prize exists  because remember monty"], ["323.4", "knows that  and it makes a choice "], ["326.13", "if two open is a prize door  then there's no win "], ["329.67", "of course  if we play the game according to monty hall rules  this"], ["333.77", "will never happen  because he won't open the prize door "], ["337.33", "but we're going to explore the other option where he chooses at random "], ["340.89", "otherwise  if the guess is the prize door  the contestant wins by sticking "], ["346.13", "otherwise  by switching "], ["348.66", "and then  we'll return the number of stick wins and the"], ["351.01", "number of switch wins "], ["352.91", "here are two possible choose functions "], ["355.27", "the first one is the one that is used on let's make a deal "], ["359.18", "essentially  monty is just choosing the door that the contestant didn't"], ["363.1", "choose and that has a goat "], ["365.53", "the other possibility is a random choice  where monty will say  if the"], ["370.65", "guest door is one  we'll open either two or three "], ["373.76", "so perhaps  it might be the car "], ["376.13", "otherwise  one or three  else one or two "], ["378.86", "finally  we'll have a function that displays the results "], ["381.83", "i'm showing you this  because it's using yet another pylab plotting"], ["385.43", "function  pylab pie  which produces a pie chart "], ["389.72", "ok "], ["390.23", "let's go over to the code window and run it "], ["393.12", "so  we'll first run it the way the game works calling it with monty"], ["398.67", "choose  and we'll display it "], ["401.78", "and we'll produce another figure in which we make the random choice  and"], ["405.39", "we'll display it "], ["406.96", "well  notice that if we play by the game rules  indeed  it's the case that"], ["411.2", "you double your odds by switching  shown by this pie chart "], ["415.3", "course since there's randomness  it's not exactly 1/3 "], ["418.09", "2/3  but pretty close "], ["420.69", "on the other hand  if we play the game randomly  then in fact  it doesn't"], ["425.53", "matter  because an independent decision is being made  and indeed "], ["429.56", "the odds are unchanged by switching "]], "yGAPgGgodyo": [["0.2", "in this fifth lecture we're going to first talk about the functions we've"], ["3.76", "been writing  especially about how we can think of them as iterative"], ["7.25", "computations that capture the heart of a computation as a set of state"], ["11.36", "variables that update with each iteration through a loop "], ["15.7", "we will then build on that to talk about the wonderful concept of"], ["19.4", "recursion  where we reduce a computation to a simpler version of"], ["23.25", "the same problem  and then use that idea to very crisply and cleanly"], ["27.92", "capture computational processes "], ["31.25", "we will show how this idea of recursion builds on"], ["34.02", "the concept of induction "], ["36.17", "and we will in particular use this to reason about why"], ["39.09", "recursive algorithms work "], ["41.27", "and  we'll use that idea to guide general principles in designing"], ["45.66", "recursive algorithms "], ["47.91", "to demonstrate this  we will show you a number of classic and fun recursive"], ["52.37", "algorithms  especially algorithms we call divide and conquer methods "]], "VAAia4PpxZc": [["0.12", "larry rudolph  my name's larry rudolph  and i'll be your instructor"], ["2.21", "for this course  introduction to computer science and programming "], ["5.62", "from mitx on edx "], ["8.28", "this course will teach you how to use computation to"], ["10.32", "solve real world problems "], ["11.98", "it's aimed at students with little  or no  prior experience in programming "], ["16.01", "but with a desire to learn how to use computation to solve problems "], ["21.23", "it is aimed at students who have no  or little  prior experience in"], ["25.12", "programming  but do have a desire in how to solve problems using"], ["29.11", "computation "], ["30.01", "it's not a programming course "], ["31.36", "although you will learn how to program "], ["32.94", "it's not a mathematics course "], ["34.45", "although you will use mathematics "], ["36.56", "and it's not a theory of algorithms course "], ["39.47", "although you will learn how to appreciate really clever algorithms "], ["42.85", "600x is a challenging and rigorous course "], ["45.9", "it's an mit course "], ["47.24", "as such  the lectures and text will appear clear  logical  orderly and"], ["52.64", "understandable "], ["53.67", "when you do the finger exercises and problem sets  you may find that they"], ["57.41", "are challenging "], ["58.12", "why "], ["59.62", "because there's a lot of material  and it's going to take a while for it to"], ["63.01", "become clear  logical  orderly and understandable in your brain "], ["67.47", "i've been doing research in high performance parallel processing for"], ["71.06", "many years "], ["72.34", "i started programming over 40 years ago when i was in ninth grade "], ["76.32", "recently  i founded a company called redigi  which is a marketplace for"], ["80.57", "used digital goods "], ["82.28", "it's taught me how to communicate with a large customer base"], ["85.73", "that's mostly silent "], ["87.44", "this is all in addition to the fact that i've been teaching computer"], ["90.2", "science courses for the past 30 years  both at mit and at other universities "], ["95.02", "halfway through the semester  we'll have a town hall meeting "], ["97.94", "it'll be your opportunity to interact live with an mit faculty member "], ["102.77", "by that point  you should know a lot about programming"], ["105.61", "and computer science "], ["106.7", "and i look forward to very interesting interactions "], ["109.35", "most  if not all of the lectures  are by professors grimson  guttag and"], ["114.297", "terman  and are the result of years of refining this material while"], ["118.39", "teaching it at mit "], ["120.27", "i  however  will remain behind the curtain along with my great staff"], ["125.24", "ensuring that everything runs smoothly  and the course is a success"], ["129.18", "for all participants "], ["130.57", "we want to make sure you have all the tools to succeed in this class "], ["134.95", "our staff will be in the forums everyday to answer your questions "], ["139.51", "but you  too  can answer each other's questions "], ["142.43", "the moment that you understand a difficult concept  you are the perfect"], ["148.03", "person to answer other people who have yet to understand that concept "], ["152.88", "remember  the best way of learning something is by teaching "], ["156.88", "here are some tips for your success "], ["158.58", "600x is fast-paced "], ["161.03", "please try not to fall behind "], ["163.45", "as soon as the videos are released  watch them "], ["166.27", "as soon as you're finished watching your video  do the finger exercises "], ["170.43", "get started on the problem sets as soon as possible "], ["173.57", "we try to keep things into bite-sized chunks "], ["176.16", "so there's no reason to postpone them "], ["178.16", "we practice the philosophy of learn by doing "], ["181", "the finger exercises may not be trivial "], ["183.84", "the problem sets may be challenging "], ["186.75", "not everything is in the preceding video "], ["190.14", "you are going to have to find the solution "], ["192.24", "how do you do that "], ["193.55", "read the text "], ["194.61", "re-watch the video "], ["195.78", "but mostly  experiment "], ["198", "play with the interpreter "], ["199.64", "type different examples "], ["201.39", "computers don't care about how many times you make the same mistake "], ["205.32", "computers do not get bored "], ["207.14", "computers do not yet have feelings "], ["209.28", "and most of all  computers are not judgmental "], ["212.04", "please complete problem set one as soon as possible  even before watching"], ["215.57", "the first set of videos "], ["217.32", "you'll find the interpreter is your friend "], ["220.45", "use it as much as possible "], ["222.12", "type whatever you want into it "], ["223.5", "and don't worry about making mistakes "], ["225.37", "you'll learn by doing "], ["226.87", "again  this is a course in experiments "], ["229.9", "the more you type in and the more mistakes you make  the more you learn "], ["233.68", "if you're still confused after consulting the textbook and trying the"], ["236.41", "experiments  then search the web or search the forums "], ["240.39", "try not to move on until you understand the solution "], ["243.19", "if you don't understand the solution  post to the forum again "], ["247.23", "now stop listening to me  and go learn some computer science "]], "j-d7-5lWcT4": [["1.2", "eric grimson  ok "], ["1.82", "we've talked about designing a test suite "], ["4.54", "that is finding a set of samples of inputs and expected outputs  that we"], ["8.56", "can use to test whether our code's doing what we expect it to or not "], ["12.29", "and we talked about both black-box testing  and glass-box testing as ways"], ["16.3", "of designing test suites "], ["18.46", "what happens when we're ready to actually start doing the test "], ["21.49", "what should we do "], ["22.95", "here  and we're going to do an example a little bit later on in this lecture "], ["25.95", "here what we're going to do is alternate between two important parts"], ["29.98", "of testing "], ["31.08", "we're going to start with what we call unit testing "], ["34.07", "that says take a module  a function for example  and check it "], ["39.08", "check it on input values whose results we know what to expect "], ["43.58", "run the suite basically on the module to make sure that"], ["46.4", "the module runs well "], ["47.94", "this will catch algorithm bugs  that is places where i got a bug  either in"], ["54.355", "how i encoded the algorithm or in terms of how i"], ["56.36", "thought about the algorithm "], ["58.02", "once i've checked the modules  i'm going to move on to what we call"], ["61.64", "integration testing  which is to check that the system as"], ["65", "a whole works correctly "], ["66.81", "if i've got multiple functions that are interacting with one another  i"], ["70.02", "want to make sure that even if the modules do the right thing  that the"], ["73.43", "whole system does well "], ["74.48", "and this will typically catch  what we might call interaction bugs "], ["78.945", "and by that i mean places where an incorrect value is being communicated"], ["83.21", "to another function "], ["84.2", "or an assumption about input is being broken as i move back and forth "], ["88.32", "and once i've done that  i want to cycle "], ["90.6", "i want to go back around  and having done integration testing and fixing"], ["94.51", "things  go back and check the modules as unit testing  and then check"], ["98.01", "integration testing "], ["98.88", "and cycle until i'm convinced that i've caught all the bugs that i'm"], ["101.94", "likely to find "], ["103.88", "so we're going to think about how we deal with doing unit testing and"], ["107.9", "integration testing "], ["109.92", "now there's another piece of testing that's really useful to do "], ["113.88", "and that's to build a test driver "], ["116.78", "what does that mean "], ["117.96", "well  drivers are code that actually set up to do the testing for us "], ["121.54", "so i'm not just typing things in by hand "], ["124.84", "the idea is that in a driver we're going to set up an environment  and"], ["127.75", "what we mean by that is we're going to set up a piece of code that creates"], ["132.02", "bindings for global variables   data structures  other pieces that i need"], ["136.06", "to do the testing  is then going to take that test suite "], ["140.21", "that sequence of inputs "], ["141.57", "and run the code in each one  and save the results and report back out "], ["145.85", "so a test driver is basically a piece of code that does the testing for us "], ["150.16", "builds the environment  takes and implements the test"], ["152.53", "suite  and runs it "], ["154.95", "nice thing about drivers are that they basically simulate parts of the"], ["157.83", "program that use the unit being tested "], ["161.19", "so they're going to do the actual simulation of the"], ["163.22", "testing that we want "], ["164.96", "now if there are interactions with other pieces of code  what happens if"], ["169.02", "we haven't already debugged those "], ["170.25", "and there we can often use what's called a stub "], ["173.12", "a stub simply simulates parts of the program that are used by the unit"], ["178.09", "being tested "], ["179.17", "and when i say simulate  if i've already built the code"], ["181.28", "and it runs  great "], ["182.48", "but even if i haven't  i can still get the same effect "], ["184.97", "for example  by building a table of input-output pairs  and using that to"], ["191.7", "simulate the behavior of that particular piece of code "], ["194.99", "the advantage of a stub is that it's going to allow you to test units that"], ["197.83", "depend on software even if you haven't written it yet "], ["200.92", "maybe not be able to test everything "], ["202.55", "but remember since i'm building a test suite with particular set of cases  i"], ["206.5", "can basically say if this code was there  here's what it should do "], ["210.33", "and that stub will let me go back and actually fix  or test rather  the"], ["213.98", "piece of code i'm testing inside of the driver "], ["217.16", "so when i get to testing in a second  but what does it say then "], ["221.81", "it says  having built a test suite i start with unit testing "], ["226.69", "having tested all the units i'm going to go to integration testing "], ["229.1", "and i'm going to cycle back and forth "], ["231.25", "but one of the key things to remember is  when i'm done debugging and i"], ["235.1", "think my code has been corrected  it's really important to do what we call"], ["239.05", "regression testing "], ["240.55", "that is go back  and check that the program still passes all the tests it"], ["244.7", "used to pass "], ["246.23", "even though a piece of code may have run correctly before  because i've"], ["249.65", "changed things there's no guarantee i haven't accidentally"], ["252.4", "messed something up "], ["253.5", "and so a really good practice is to go back and re-run the tests i've run"], ["257.79", "before to make sure that they still work "], ["260.26", "and that regression testing will ensure  in a sort of principled way "], ["264.4", "that the tests i'm running are actually running correctly "]], "FP4Hw1IEWCA": [["1.476", "professor  hmm  it looks like every time we do a calculation involving a"], ["5.24", "new mass and its corresponding displacement  we're computing a"], ["8.75", "slightly different value for k "], ["10.89", "does that mean that the spring constant is actually changing a little"], ["13.69", "bit every time that we hang a weight on the spring "], ["16.97", "well  probably not "], ["19.02", "it looks like there's a process at work that's causing our measurements"], ["22.32", "to be slightly off every time we make one "], ["25.54", "a good first step whenever we're trying to figure out what's up with"], ["28.46", "our data is to plot it  to look at it visually  and to see if we can spot"], ["32.99", "what's going on "], ["35.01", "in order to figure out what's going on  we're going to have"], ["37.01", "to look at the data "], ["38.01", "and here's a couple python procedures to help us do that "], ["41.02", "the first procedure here  getdata  its job is to read the data in from a text"], ["45.87", "file where we've entered the data "], ["47.61", "so it opens the file  and the first line of the file is just a header line"], ["52.8", "that describes the format of the data in the rest of the file "], ["56.05", "we don't need that here  so we'll read in that line and discard it "], ["60.03", "and then  for all the other lines in the data file  we'll read"], ["63.33", "each of them in "], ["64.8", "each line comes in as a string "], ["66.75", "and then we're going to take that string and split it into substrings"], ["70.52", "that correspond to the non blank portions of the line "], ["73.97", "so the first substring is the first non blank portion of the line  which"], ["79.12", "will be the data measurement "], ["80.85", "and the second substring is the second non blank portion of the line  which"], ["85.76", "is the mass measurement "], ["88.33", "we then go off and convert those two strings into floating point numbers "], ["93.05", "and append them to the appropriate list that we're using to accumulate"], ["96.62", "the results "], ["97.71", "and when we're all done  we return the masses and the distances in two"], ["102.26", "separate lists "], ["103.58", "the plot data routine is now takeover  and its job is to plot the data "], ["108.15", "so it goes off and first reads in the data "], ["111.55", "and the reason that we've separated the reading in of the data  the i/o "], ["115.18", "from the analysis  or  in this case  the plotting  is in case the format of"], ["119.69", "the data file changes in the future  we'll only need to rewrite the getdata"], ["124.8", "portion of the python procedures "], ["127.56", "the first thing we do once we get the data is to go off and convert it into"], ["132.79", "the pylab array data type  a very handy data type for doing numerical"], ["137.28", "manipulation "], ["138.74", "and here we see an example of how handy it is "], ["140.95", "on the next line we want to multiply each element of the xvals array by the"], ["146.12", "gravitational constant "], ["147.48", "in other words  what we're doing is  we're busy converting the masses that"], ["150.38", "we measured into the forces that they applied to the spring "], ["154.85", "and this statement here  an array times a constant  will multiply each"], ["160.31", "element of the array times whatever that constant is "], ["164.08", "the rest of the procedure goes off and then creates a plot  plotting the"], ["169.35", "forces applied against the distances measured "], ["173.17", "the data points will appear as little blue circles  so the b means please"], ["177.06", "make it blue  and the o is please make them a circle "], ["181.07", "let's run it and see what the data looks like "], ["184", "here's the results  we can see we get the sort of plot that we might expect "], ["189.24", "the x-axis is the force that was applied to the spring "], ["192.35", "the y-axis is the displacement we measured  and here are all the data"], ["196.82", "points that we measured from applying everything from the 10th kilogram up"], ["201.835", "to the full kilogram weight "], ["203.87", "let's see what we can make of that "], ["206.4", "so is this what we were expecting "], ["208.59", "well  our hypothesis tells us that this should be the relationship"], ["213.4", "between the weight and the extension that we measured "], ["217.4", "that implies that if we sort of solve this for the extension  that we expect"], ["221.95", "it to be mg  so this guy here is the force  divided by the"], ["228.3", "spring constant k "], ["230.06", "so that means that what we expect  also all the measured points to fall"], ["235.26", "on a line with slope 1/k "], ["238.85", "graphically  what that would mean is that we'd expect to find some line"], ["243.67", "that had all the data points on it  and the slope of this line should be"], ["247.72", "the inverse of the spring constant "], ["249.98", "at least that's what this equation here is telling us "], ["253.13", "well  that's not quite what we got "], ["254.94", "let's see if we can figure out what went wrong "], ["258.76", "so what did we expect was going to happen "], ["261.399", "well  we have this theory "], ["262.67", "so we have this notion that there's a linear relationship between the force"], ["268.01", "that we apply  so here's a particular force  f sub i  and"], ["272.28", "the observed extension "], ["273.73", "so we have this prediction "], ["275.09", "so this will be our prediction for the i-th force and our prediction for what"], ["280.7", "the offset that should be is equal to the force divided"], ["285.05", "by the spring constant "], ["286.37", "so this is a line of slope 1/k "], ["290.39", "well  what actually happened is  we have some measurement up here "], ["294.27", "and that measurement differs from the prediction by a certain amount "], ["298.02", "so here's my i-th observation "], ["300.98", "and there was clearly some sort of error that crept in and so we have the"], ["305.13", "sort of model that what really happened was here "], ["308.71", "but because of some error in our process  we actually made a slightly"], ["313.4", "different observation "], ["315.75", "maybe we'll make some progress if we think of it that way "], ["318.45", "so here's the error  and that's a difference between the i-th"], ["322.13", "observation and the i-th prediction "], ["325.31", "so the question is  what can we say about what our expectation is for"], ["330.89", "those errors that are creeping into our measurements "], ["334.32", "in many experiments in the real world the errors that we're seeing are"], ["338.39", "actually the accumulation of many  many  many small random effects "], ["342.64", "for instance  a position measurement  such as the one we're taking  might be"], ["346.77", "affected by the sums of all sorts of little vibrations  the footsteps in"], ["350.75", "the room  machinery across the room  machinery down the hall  that's"], ["354.94", "causing a small vibration which causes our error"], ["358.42", "measurement to be off somewhat "], ["360.62", "let's sort of see how that might affect our experiment "], ["363.62", "so what i want to do is to model errors "], ["368.07", "so we're going to model the errors that we're going to measure "], ["371.76", "basically  as random numbers "], ["374.01", "so this is the assumption that the errors aren't really related directly"], ["378.72", "to the experiment we're making "], ["380.27", "they're effects that are added on to the results of the experiment "], ["385.54", "and just to sort of see what's going on  i'm going to show you a"], ["389.07", "probability density function here for a particular class of errors which are"], ["395.61", "distributed between  so the errors  basically  will lie in the range"], ["400.38", "between +1 and -1 "], ["402.38", "so this is basically between -1 and 1 "], ["406.45", "and the idea is that  with this particular probability density"], ["410.78", "function  that the errors are much more likely to be small than they are"], ["416.16", "to be large and close to one "], ["418.35", "so let's run a little experiment  and here's our experiment "], ["421.51", "first thing we're going to do is to draw 100 numbers from that probability"], ["429.26", "distribution "], ["429.96", "so we can write some python code that says  using this probability density"], ["434.65", "function  please give me a random number between -1 and 1 "], ["439.54", "and it will choose 100 such numbers "], ["442.78", "then we're going to sum them up "], ["444.37", "so each one of those numbers that we draw will represent a small error from"], ["450.17", "some random source "], ["451.35", "and it's really the cumulative effect of all those errors that"], ["454.85", "we'll want to do "], ["455.77", "so we're going to sum them  and obviously sort of the smallest value"], ["460.69", "we should get should be like -100 "], ["462.68", "and at the other extreme  we might get something as big as +100 as the sum "], ["468.37", "we're actually going to see what the distribution looks like "], ["471.35", "having done that particular sum  we'll save it away in a histogram and repeat"], ["476.71", "10 000 times "], ["477.54", "so we're going to build a histogram of what all the sums look like "], ["481.58", "and we're going to do it for 10 000 such experiments "], ["486.65", "let's write a little program and see what the results look like "], ["491.18", "here's a python procedure  testerrors  that will let us run our little"], ["494.78", "experiment "], ["495.9", "what testerrors does is  for the number of trials that we've asked for "], ["500.93", "in this case the default value for trials is 10 000  it will go off and"], ["505.88", "select a certain number of points  in this case 100  from a particular"], ["511", "probability distribution  in this case a triangular distribution that goes"], ["515.919", "between -1 and 1 "], ["517.71", "so that's exactly the distribution that we graphed on the slide "], ["522.15", "it will then sum up the results of each of those random selections  and"], ["528.92", "then it will keep a list of all the sums that it creates for all 10 000"], ["533.67", "trials that we're doing "], ["535", "when we're done  we're going to plot the results in a histogram using the"], ["538.99", "handy hist function from pylab "], ["541.24", "and let's see what we get when we do it "], ["543.67", "so i'm going to save this out and run it "], ["547.33", "of course  with 10 000 trials of 100 points each  it can take a"], ["550.54", "little time to run "], ["552.04", "and here we see the results "], ["553.65", "what we have "], ["555.64", "what this little graph is telling me that  of the 10 000 trials  some 650"], ["562.22", "of them resulted in a sum which was exactly 0 "], ["566.88", "that's a little surprising  but maybe not too surprising "], ["569.21", "we had pretty much an equal chance of having a negative error and a positive"], ["572.9", "error  and we expect many of the errors to end up"], ["575.59", "canceling each other out "], ["577.04", "and that sort of what we see in this diagram "], ["579.56", "the highest probability of the sums are grouped right around 0 "], ["584.16", "and then that probability drops off dramatically as we get into situations"], ["590.72", "where many errors would have had to have been on one side of the"], ["594.61", "distribution  which becomes increasingly unlikely as the number of"], ["599.92", "trials grows "], ["600.75", "so what we're going to do now is to think a little bit"], ["603.55", "about what we see here "], ["605.79", "so what we saw from our little experiment looking at the accumulation"], ["611.01", "of many small errors is that the net effect of all the errors being added"], ["616.26", "together has a probability distribution that looks like so "], ["619.84", "and that's a curve that we've seen many times "], ["622.82", "so the result is that the probability of all of our sum of the errors  that"], ["629.42", "probability distribution converges on the normal distribution as the number"], ["634.38", "of trials in our experiment increases "], ["637.52", "so if we  instead of doing 10 000 trials  we had done 100 000 or a"], ["641.29", "million trials  we would start to see that the histogram would trace out"], ["647.04", "very precisely a normal distribution "], ["650.14", "sort of amazing "], ["651.79", "another observation that comes to us courtesy of the central limit theorem "], ["657.31", "and that basically tell us that we get the same result no matter what error"], ["662.73", "distribution that we choose "], ["663.84", "we chose a triangular distribution  but we could have chosen a uniform"], ["668", "distribution  or a gaussian distribution  or  in fact  any"], ["671.76", "distribution that has a finite mean and variance "], ["674.84", "so the only requirement is that we the distribution have a"], ["679.3", "finite mean and variance "], ["681.18", "and if so we'll get the same conversion to a normal distribution "], ["685.22", "if we look at the accumulated sum of many small errors  and in fact  they"], ["689.75", "don't even have to be identically distributed "], ["691.74", "so what's sort of amazing is that if our errors that we're seeing in our"], ["697.74", "experiment are the result of the accumulation of many small random"], ["701.7", "processes  we can actually say something about the probability"], ["705.82", "distribution of those errors "], ["708.34", "let's just quickly remind ourselves what the normal"], ["710.44", "distribution looks like "], ["712.2", "here it is over here  plotted for a bunch of different values of the"], ["717.23", "variance sigma squared "], ["719.11", "the distribution is completely characterized by two parameters "], ["722.07", "one of the parameters is the mean "], ["724.36", "and that's the central axis of the distribution  in this case  we're"], ["728.62", "plotting normal distributions with a mean of 0 "], ["733.6", "the other measurement is the variance  which is a measure of the width of"], ["738.21", "this curve "], ["739.58", "with those two factors in hand  we can actually write a little equation that"], ["742.77", "describes the pdf  the probability density function  for a normal"], ["747.53", "distribution "], ["748.54", "so that's f x) and we have a normalization constant  which is 1"], ["754.45", "over the square root of 2 pi sigma squared  and then we get the"], ["759.16", "exponential part "], ["760.2", "so it's e and it's x minus x minus the mean squared all over sigma squared "], ["767.96", "you can see what that means  that is the argument x gets bigger  the"], ["773.59", "probability associated with that becomes exponentially smaller "], ["777.61", "there's some special names we apply "], ["779.59", "if mu is equal to 0 and the variance is equal to 1  we call that the unit"], ["785.3", "normal or maybe the standard normal distribution "], ["791.16", "so let's put it all of it together "], ["793.1", "so when our observation errors are due to the accumulation of many small"], ["796.91", "random processes perturbing the measurements ever so slightly  we can"], ["801.32", "say something about the likelihood that the error will be"], ["804.97", "of a certain size "], ["806.36", "and we'll just use our information about the errors being normally"], ["810.45", "distributed to write the following formula "], ["813.33", "so this is really just the information from the previous page  except here"], ["817.72", "i've made the assumption that the mean of 0  which implies that the errors"], ["824.13", "balance out over time "], ["825.86", "and that's typically true with many error processes "], ["829.39", "now this is actually a really neat fact  it basically tells that large"], ["833.67", "errors are basically much less likely  i mean  exponentially less likely "], ["840.48", "than small errors "], ["841.92", "and we're going to use that fact  now  to go back and finish the analysis of"], ["850", "the data points "], ["850.97", "but it was really important to sort of establish how the measurements we're"], ["855.6", "taking are differing from our expected predictions "], ["858.47", "and now  we're going to use this information about this probability"], ["861.2", "distribution  this likelihood distribution  to help us figure out"], ["865.77", "the best way to sort out the actual data  or the actual predictions  from"], ["872.27", "the observations that we made "]], "kpa7QyOtIHI": [["0.56", "ta  hi "], ["0.98", "today i'm going to be talking to you about default values and keyword"], ["3.56", "assignment "], ["4.81", "so what you see on the right here is a fairly silly complex function that"], ["9.78", "i've concocted just for this particular exercise "], ["13.59", "so we call it complex function because it has so many of these variables that"], ["18.03", "it needs in order to function "], ["20.28", "something  another thing  number of silly walks  and so on "], ["23.07", "it's a whole lot of variables  and believe me  if you do a whole lot more"], ["26.56", "programming  either in this class  or when you go out in the world of"], ["30.55", "wonderful programming stuff  you'll probably have to come up with your own"], ["33.8", "versions of complex functions that are taking a whole lot of"], ["36.56", "variables as well "], ["37.79", "so the problem with complex functions is that when you call it  you have to"], ["41.81", "specify a whole lot of things "], ["43.35", "and sometimes it can get confusing "], ["45.23", "let's say that something  i want something to be a cat  and another"], ["48.12", "thing to be a dragon "], ["49.92", "and number silly walks will be 100  and the cans of spam to be 20 "], ["54.85", "and that thing should be random  sort of random indicator is true "], ["58.31", "and i love furry things  so furry should be true "], ["61.88", "and frogs found  let's say we found just one frog "], ["64.989", "and unfortunately  the doomsday device is not complete "], ["68.21", "so that's false "], ["69.87", "so you call that  it responds with the output of the function "], ["73.02", "if you give it all those variables  and that looks all nice and good "], ["76.59", "but the problem is what happens when you want to change something "], ["80.33", "you have to type in the whole thing in over again "], ["82.76", "complex function  and let's say t and dog "], ["90.26", "10 silly walks "], ["91.5", "let's see "], ["92.36", "20 cans of spam  let's say that everything else is the same "], ["97.02", "so that was a whole lot of work  and a lot of painful stuff to try to change"], ["101.49", "those three first things "], ["103.27", "and that's kind of painful  but what can you do "], ["107.52", "well  i guess we could try to simplify things a little "], ["110.4", "if all we're going to change is just these first three things  we could"], ["115.61", "make a new function  like the one below over here "], ["118.32", "where the user is only required to specify the first three things  and"], ["123.85", "everything else is pre-specified for the user "], ["128.11", "wonderful "], ["128.639", "you've made life simpler by making a simple looking function "], ["131.63", "let's try it out "], ["132.33", "simple function "], ["133.74", "this time i'm just going to say t and a dog  and 10 "], ["137.88", "and things look better "], ["140.01", "you don't have to type so many things "], ["141.12", "you just have to type three things  instead of  i don't how"], ["143.19", "many things that was "], ["143.86", "but it was a whole lot of things "], ["145.13", "so that was nice  but it comes up with a problem "], ["149.16", "what if you needed to change one of these things "], ["151.56", "like  let's say you wanted to change the cans of spam "], ["154.2", "instead of always being 30  you needed just this one particular time  you"], ["158.98", "needed cans of spam to be two "], ["161.62", "then i guess you could just change it in the function definition  save it "], ["165.99", "reload it in python "], ["167.65", "and this  i'm just going to copy and paste it "], ["169.93", "and then you'll find that indeed  the cans of spam is two now "], ["175.84", "well  that's a whole lot of work for your users of the function "], ["179.77", "and fairly bad programming practice to have to change the definition of your"], ["184.52", "function every time you needed to change a variable "], ["187.43", "you ought to make it a variable again "], ["189.53", "but then  if you keep on doing that by adding it to its list of variables "], ["193.27", "cans of spam  you're back to square one "], ["197.66", "if each of these things you only occasionally need to change  and you"], ["201.95", "have to add it to the function definition every time  you end up with"], ["205.84", "your complex function all over again "], ["208.52", "so that's not good "], ["210.94", "can we come up with something better "], ["212.35", "well luckily  python thought about this problem and came up with the idea"], ["216.04", "of default values "], ["217.48", "so over here we have this function again  and it's the exact same as"], ["222.99", "before  except now we've set this equal sign and some numbers after a"], ["228.96", "few of these variable names "], ["230.22", "for example  cans of spam equals 10  and this indicator equals"], ["233.02", "true  and so on "], ["234.16", "so what this does  if the user doesn't specify a value for cans of spam  it"], ["239.63", "sets the value of cans of spam equal to 10 and runs the function as usual "], ["243.5", "same thing with all these other variables "], ["245.47", "so now i can call this function  complex with defaults "], ["250.14", "complex with defaults "], ["254.44", "with a cat  a werewolf  and 1 000 silly walks "], ["261.839", "and it'll run just fine "], ["263.67", "so it had set can of spam equals 10 and all the other variables to its"], ["267.85", "default values "], ["269.35", "wonderful "], ["270.17", "and this time if i needed to change the can of spam to 20  all i had to do"], ["275.74", "is just add number 20 for cans of spam  and everything else is just the"], ["280.9", "default value "], ["281.59", "so i don't have to change anything else "], ["283.88", "and now we have 20 cans of spam "], ["286.85", "great "], ["287.22", "that saves us a whole lot of time "], ["289.24", "but it's still not quite there "], ["291.89", "well  what if we needed to change the number of frogs found "], ["296.01", "its kind of really far out in our list of variables  so if we did that  we"], ["300.7", "kind of had to type it all out again "], ["303.24", "so 20 was cans of spam  say true for randomness in the indicator  and"], ["307.57", "unfortunately  it's a non furry thing "], ["310.26", "and let's say  i forget how many frogs i said i wanted "], ["313.51", "let's just say 10 "], ["315.18", "and we didn't have to specify the is doomsday device complete "], ["319.05", "so we can write all of this out  hit enter  and now we do"], ["323.13", "have 10 scary frogs "], ["326.95", "oh  yeah "], ["327.92", "i didn't need to do that "], ["328.97", "but 10 scary frogs are very scary  and they deserve their own"], ["331.92", "line and syntax error "], ["333.67", "anyway  so that was  i guess slightly better  since you didn't have to type"], ["337.47", "is doomsday device complete "], ["338.96", "but it was still kind of problematic "], ["340.87", "you had to type all those other things that you didn't really need to "], ["343.76", "because those were the default values "], ["345.75", "luckily  python comes up with another cool solution for this problem "], ["349.71", "so now complex with defaults "], ["352.18", "i can just say something is cat  and i do have to say a value for cat  and"], ["356.62", "another thing for number of silly walks  since those do not have any"], ["361.22", "default values "], ["362.4", "so let's see "], ["362.72", "another thing is werewolf again  and that number of silly walks is 40 "], ["368.91", "and this time  if i just want to change the value of frogs found from"], ["372.62", "the default value  i can just specify it by using a keyword"], ["377.29", "assignment like this "], ["378.75", "frogs found "], ["380.39", "let's see if frogs found is 80 "], ["382.44", "so when i do that  it sets the frogs found variable to 80  and everything"], ["386.72", "else to its default values "], ["388.9", "that is really cool and powerful "], ["390.91", "now  it does come up with some  just use a little bit of caution when using"], ["395.59", "keyword assignments "], ["396.97", "you can't  for example  do something like this "], ["400.09", "you have to put the keyword assignments after list of variables "], ["404.34", "because if you do keyword assignment before then  you'll come up with a"], ["407.94", "syntax error "], ["409.45", "and also  you can even specify the things that do not have default values"], ["414.98", "with the keyword assignments  like this "], ["417.81", "so complex with defaults "], ["423.12", "you can say something equals cat "], ["427.36", "and let's say that i don't want to specify another thing yet "], ["430.68", "let's just say i want to specify the number of silly walks this time "], ["433.91", "and number of silly walks "], ["435.98", "let's say that's 100 "], ["438.06", "and let's say that another thing is  oh  let's say a vampire "], ["444.98", "so it just sets something to cats  even though another thing is the"], ["449.26", "second variable in the function definition "], ["452.54", "i can specify another thing as the third thing as long as i use keyword"], ["456.54", "assignments "], ["457.43", "same thing with number of silly walks  even though in the function it's the"], ["460.77", "third number  or the third variable "], ["462.87", "i can make it the second thing by using these keyword assignments "], ["466.74", "this kind of notation makes it easier for you to keep track of what values"], ["473.33", "you're passing into your function "], ["475.16", "sometimes when you're working on a long project  you can easily forget"], ["479", "what the order of variables are "], ["481.84", "so writing it this way will help make it more obvious when you're reading"], ["486.2", "back and saying  hm  what was this 5 over here "], ["489.23", "what did it correspond to "], ["490.98", "using keyword assignment lets you make the code a whole lot more readable "], ["495.25", "so that's it for today "], ["497.8", "i hope you found this feature of python as useful as i did "], ["501.62", "have a good day  and don't let the frogs be too scary at you "]], "o8tmvzs6F4Q": [["1.85", "ok  we've now seen a mechanical description of the evaluation of"], ["6.01", "procedures  both what happens when we define them  and what happens when we"], ["9.84", "actually use them  when we do a computation where we use the body of"], ["12.68", "the procedure "], ["13.82", "we described a mechanical way of using environments  let's look at a couple"], ["17.09", "of examples to really drive home that process "], ["20.31", "here's a simple example "], ["21.36", "let's suppose i want to compute the power of some number to some other"], ["25.07", "power  a to the power of p "], ["27.51", "i'm going to do it with just successive multiplication "], ["30.14", "i know that python provides a built-in version of this "], ["32.65", "but i would  say  for example  wanted to take a to the p-th power "], ["35.47", "and i do it by multiplying a by itself  storing that result away  then"], ["39.99", "multiplying that by a  then multiplying that by a "], ["43.15", "and then just keeping track of how many multiplications do i need to do"], ["46.2", "until i've done p of them  and keep track of the result  and return it"], ["49.677", "when i'm done "], ["51.19", "so here's some code to do it "], ["53.31", "and it's pretty straightforward "], ["54.17", "in fact  we just saw it earlier "], ["56.22", "it was in my earlier example "], ["57.54", "i'm going to input some number for x "], ["59.23", "i'm going to input some number for p "], ["63.59", "and i'm going to make sure it's an int by doing a type casting there "], ["67.22", "i'm going to set up an intermediate variable  or a place"], ["70.69", "to store the result "], ["72.09", "and i'm just going to run through that loop  where i'll print something up to"], ["75.16", "tell me where i am  and i'll change the value in result "], ["78.93", "let's look at an example to see if this does it "], ["81.31", "so if i go over to python  i can load that computation "], ["86.975", "it is now saying give me a number  let's give it 3 "], ["90.3", "it says give me an integer  let's give it 5 "], ["93.59", "oh  and it prints through the stages  telling me at each iteration what the"], ["96.38", "current result is "], ["97.17", "it starts as 1  and then it's 3 and then it's 3 squared  and then it's 3"], ["100.57", "cubed  and then it's 3 to the fourth "], ["102.83", "wait a minute  didn't i want to take it to the fifth power "], ["106.39", "well  notice that my print statement is just printing before i"], ["109.08", "actually do the work "], ["110.1", "and in fact  when i'm done  what i've done is  i'll return"], ["113.425", "the value in result "], ["115.97", "and there it is  it's 243 "], ["119.37", "ok  we saw how that computation would take place previously "], ["123.03", "now  let's capture it in a procedure "], ["127.45", "so i'm going to define a procedure called iterative"], ["129.65", "power  there's the name "], ["132.65", "i'm going to give it two formal parameters  x and p "], ["136.57", "and then the body of the procedure is much like what i have for my"], ["139.71", "computation before "], ["140.76", "i've got an internal definition of result  which i'm going to use "], ["145.6", "and the only big difference is  when i'm done with the computation of that"], ["149.24", "for loop  i've got that special keyword return "], ["152.13", "that says return the value of this expression  which is just the value of"], ["156.37", "result  when i'm done "], ["158.58", "let's try it to see if it works or not "], ["160.56", "i've already loaded this over here "], ["161.23", "so if i say i'm going to int  yeah  yeah  iterative power  i'm going to"], ["165.733", "compute that "], ["167.12", "let's do 3 to the 5 "], ["170.58", "it runs through exactly the same stages  and notice what it printed out"], ["173.61", "at the end "], ["173.841", "it printed out the value of the computation "], ["176.81", "and in fact  if i were to bind this and say z is equal to iterativepower"], ["180.08", "of 3 and 5  it runs through the computation "], ["184.38", "and if i ask for the value of z  there it is  243 "], ["189.16", "so it does the computation i want  now let's think about what happens inside"], ["192.36", "of the environments  how it does the scoping of the variables "], ["195.62", "so if i were to evaluate that definition  which i did  by loading it"], ["199.83", "into my python environment  what it does is  it creates a binding for the"], ["203.62", "name iterativepower to a procedure object "], ["207.9", "and inside there  i have a list of formal parameters "], ["211.14", "and i have the body "], ["213.25", "i also have an environment pointer that points back to the environment in"], ["217.11", "which i did the definition "], ["218.43", "in fact  we know we're going to use it "], ["220.73", "if i now call iterativepower with 2 and 5  what do we say happens "], ["227.74", "we get  first of all  the value of this expression  iterativepower  it"], ["231.44", "points to that  it's a procedure object "], ["234.01", "i get the values of each of these expressions with respect to this"], ["237.68", "environment "], ["239.21", "numbers are always numbers  so it's just 2 and 5 "], ["241.12", "and then i create a new environment  which i'm calling e2 "], ["243.97", "this new environment here "], ["246.22", "it has as a parent the environment that the procedure"], ["250.1", "object has as a parent "], ["252.67", "and then  inside of that environment i bind these formal parameters to the"], ["257.85", "values of the expressions passed in "], ["262.06", "and then relative to this environment  i now evaluate the body of the"], ["266.66", "expression "], ["267.647", "ah  that's really cool "], ["271.03", "because now  i've basically reduced a computation to a simpler computation "], ["274.41", "i'm now evaluating this expression or sequence of expressions relative to"], ["279.19", "this environment "], ["280.14", "and that environment contains the bindings i want "], ["282.66", "so in fact  if i evaluate that body  what does it do "], ["285.87", "well  the first expression it evaluates says bind result to 1 "], ["289.6", "and notice where that happens  it happens down here in this environment "], ["294.51", "not up in the global environment where i want to have some value that i might"], ["298.73", "want to think about "], ["299.44", "it's happening inside of this environment created"], ["302.12", "by a procedure call "], ["303.87", "having done that definition  i run through the for loop "], ["306.32", "and that says look up the value of x  which is right there "], ["309.35", "look up the value of result  which is right there "], ["311.26", "multiply them together and change the binding for result "], ["313.94", "and then do it again and again  you get the idea "], ["319", "all of this computation takes place in this environment  e2 "], ["323.46", "what that says  then  is that the loop rebinds that local variable until we"], ["329.05", "get to the exit  until when we're done and we hit that return expression "], ["333.38", "and return says look up the value of result in this environment "], ["336.95", "because that's where i'm doing the computation for the procedure "], ["339.55", "there it is "], ["340.62", "that's what's actually returned "], ["344.2", "cool  that's exactly what it said we should do "], ["347.37", "now  let's drive home a point "], ["349.47", "imagine that we had actually done some bindings for x and p"], ["352.73", "before we called it "], ["353.54", "in fact  let me go back over here to python "], ["355.29", "and i want to say  let's set x equal to 3 "], ["358.57", "let's set p equal to 4 "], ["361.365", "let's set result equal to 5 "], ["364.63", "and now let's call z as iterativepower 6 and 7 "], ["373.72", "it runs through the computation "], ["375", "and notice what's happening "], ["376.74", "what's the value of z "], ["377.49", "well  that is 6 to the seventh power "], ["379.92", "but more importantly  what's the value of x "], ["381.875", "still 3 "], ["383.705", "the value of p "], ["384.55", "still 4 "], ["385.255", "the value of result "], ["386.645", "still 5 "], ["388.23", "those were bindings in a global environment "], ["390.826", "when i called the procedure  it created its own frame  its own"], ["394.52", "context  did all the computation "], ["396.71", "and that local environment had separate bindings for x and p  which"], ["400.51", "are not visible to the environment where we did the function call "], ["404.08", "so this point captures that notion of encapsulating the computation "], ["408.846", "and what that then says is  to say it in a little more detail  we have"], ["413.05", "bindings for x and p up here "], ["415.36", "when we call the procedure  we do local bindings to the values passed"], ["418.32", "in  we do local bindings for result "], ["421.72", "and when we do that computation  the evaluation of the body only sees the"], ["426.46", "bindings down here in e2 "], ["428.69", "so we created a black box "], ["430.88", "details don't matter "], ["432.38", "i can re-use this procedure anywhere by simply using its name "], ["436.95", "if i decide to change  for example  the names of the parameters in here "], ["440.995", "i'm free to do that "], ["443.08", "and it doesn't change any computation that relies on just using"], ["446.61", "iterativepower "], ["447.94", "so procedures give us this wonderful notion of abstraction "]], "B03dhB-YmMM": [["0.82", "john guttag  hello  it's me again "], ["3.21", "in the last segment  we looked at hashing and hash tables by drawing a"], ["6.61", "bunch of pictures "], ["8.26", "now it's time to look at some code "], ["11.05", "the class intdict uses a simple hash function  the same we looked at"], ["14.85", "before  modulus  to implement a dictionary with integers as keys "], ["19.96", "i know that's boring because we could just use a list  but it's at least"], ["23.79", "easy to understand "], ["25.73", "the basic idea is the same when we looked at in the last segment "], ["29.58", "you represent instances of class intdict by a list of buckets where"], ["34.09", "each bucket is a list of key value tuples "], ["37.8", "by making each bucket a list  you will recall  we handle collisions by"], ["41.94", "storing all the values that hash to that bucket "], ["46.33", "by the way  there are many other ways to handle collisions  some"], ["49.77", "considerably better than using lists "], ["51.975", "but this is probably the simplest mechanism "], ["54.38", "and it works fine if the hash table is big enough  and the hash function"], ["58", "provides a good enough approximation to a uniform distribution "], ["62.39", "all right  to the code "], ["65.68", "so we've got class intdict "], ["68.32", "init does exactly what we looked at in the last segment "], ["71.82", "it takes the number of buckets as an argument  and then creates an empty"], ["75.8", "dictionary  and then goes through and adds to each dictionary a bucket "], ["81.04", "which is initialized to be the empty list "], ["85.13", "exactly what we saw in the picture in the last segment "], ["89.1", "addentry entry  takes the key and the value "], ["92.41", "it starts by finding the correct bucket "], ["95.28", "it does that by taking the key and then hashing using modulus "], ["99.44", "and it gets the number to take it from self numbuckets "], ["103.92", "if we go back  we'll see that we saved numbuckets as an attribute of the hash"], ["110.62", "table being created "], ["112.46", "consequently  we can retrieve it here and use it "], ["116.41", "it's then going to go look at the hash bucket  as we did in the last segment "], ["120.46", "until it finds the dictionary key "], ["122.95", "if it does  it updates it and then returns "], ["126.66", "notice that once it's returned  it's done "], ["128.83", "it never gets to this statement if it returns "], ["131.46", "on the other hand  if it finishes this loop without finding the key  then it"], ["136.65", "just adds a new tuple dictkey  dictval to the dictionary "], ["143.09", "getvalue is very similar to addentry   a little bit simpler "], ["147.53", "once again  it has to start by finding the bucket  which it"], ["150.44", "does the same way "], ["151.8", "once again  it has to search through the bucket  looking at each element "], ["156.07", "to see if it can match the key "], ["158.54", "if it finds a match  it returns the value associated with that key "], ["163.27", "otherwise  it didn't find the match  then it returns none "], ["166.92", "i suppose it would have been perhaps better to raise an exception  but i'm"], ["170.71", "sure you get the idea "], ["172.92", "let's now go look at the code window "], ["175.91", "way down at the bottom i've got one extra method we didn't look at "], ["180.48", "that's the string method "], ["182.09", "and it does nothing interesting  it just provides a way to print it "], ["186.57", "now let's see what happens if we use it "], ["189.752", "it does nothing very interesting "], ["191.57", "it creates a dictionary with 29 entries "], ["195.29", "and then i'm going to  for i in range 20  that's going to be a number of"], ["199.81", "inserts  i'm going to choose a random integer in the range up to 10^5  "], ["206.08", "so quite a large range of numbers "], ["208.41", "that will be my key  and then i'll add that key with i  the i-th"], ["213.12", "insertion as the entry "], ["215.28", "then after we've built it  we want to look at what's in there "], ["218.13", "in order to make it a little easier to see  i'm going to print it bucket by"], ["221.79", "bucket so that we can see the buckets "], ["224.4", "but of course  that violates the abstraction barrier "], ["227.01", "i really shouldn't be doing that  in a good program "], ["231.15", "but for pedagogical reasons  it's worth doing "], ["234.35", "so let's run it and see what we get "], ["239.15", "well  we get 29 buckets which  conveniently  just happens to fit on"], ["243.24", "our screen "], ["244.51", "if we look at it  we'll see that some buckets  like the first one here  have"], ["248.88", "just one element in them "], ["250.79", "other buckets have multiple elements because there's been a collision "], ["255.72", "and a lot of the buckets are empty "], ["258.279", "but again  observe  even though the keys can get very large  i don't have"], ["262.59", "very many collisions as we're inserting 20 elements into 29 buckets "], ["268.16", "now let's return to the code for getvalue "], ["272.29", "what is it's algorithmic complexity "], ["274.83", "well  let's look at the simple case "], ["276.37", "if there were no collisions  what would happen "], ["279.01", "we'd go through this loop exactly once "], ["281.72", "and so it would be order one "], ["284.45", "suppose there's a collision "], ["286.5", "well  as we saw last time  if there's a collision  it has to go down the"], ["290.73", "entire length of the list in the bucket "], ["294.49", "let's think of the simple case where we got very unlucky  and everything"], ["298.91", "hashed to the same bucket "], ["301.08", "well  if we inserted n elements and each hashed to the same bucket  then"], ["306.99", "we would have to do order n trips through this loop to see whether or"], ["311.75", "not we had an entry "], ["313.59", "but remember  we decided that our hash function was uniform  or we would"], ["317.74", "design it to be uniform  and therefore it's unlikely that everything would"], ["322.2", "hash to the same bucket "], ["324.1", "in fact  let's think about what the actual predicted time should be "], ["328.68", "let's assume that we have k buckets and n insertions "], ["335.47", "and again  let's assume the hash is uniform "], ["338.36", "what is the average length of a bucket "], ["341.27", "it's simply the number of insertions divided by the number of buckets"], ["346.55", "this wraps up our brief excursion into hashing "], ["349.81", "there are a small number of things to take away "], ["353.17", "one  and this is probably the most important thing to remember  hash"], ["358.57", "tables are really useful  especially if you want to optimize the time"], ["365.26", "required to look up keys other than integers "], ["368.3", "if the key is an integer  a list works just fine "], ["373.08", "two  it's very important  as we've said perhaps too many times for your"], ["379.87", "taste  for the hash function to provide a uniform distribution "], ["386.68", "otherwise  we get too many collisions "], ["389.53", "and finally  a hash table is an example of a data structure that"], ["393.73", "allows us to trade time for space "], ["397.83", "by using more space  we can use less time "]], "ADB7EXNTVqs": [["4.019", "this coin just came up tails twice in a row "], ["8.02", "how many more tails in a row would it take for me to convince you that the"], ["12.02", "coin has tails on both sides "], ["14.62", "if i were to flip it 12 times and got eight tails and four heads  would you"], ["19.63", "be convinced that is was weighted  so that tails would typically come up"], ["23.17", "twice as often as heads "], ["25.24", "suppose i flipped it 1 200 times and got 800 tails and 400 heads "], ["31.36", "in the next sequence of lecture segments we'll look at this and"], ["34.08", "related questions "], ["35.63", "we'll cover the law of large numbers and the gambler's fallacy "], ["39.8", "more generally  we'll talk about what happens when we draw samples from"], ["43.7", "different kinds of distributions "], ["46.12", "we'll conclude by looking at normal distributions "], ["49.16", "and how one can use the standard deviation of a normal distribution to"], ["53.34", "understand how confident one should be in the accuracy of"], ["56.4", "inferences based on sampling "]], "9rVsdCMxeiA": [["0.38", "eric grimson  welcome back to 600x "], ["2.77", "in this second lecture we are going to start developing knowledge of"], ["5.92", "programming languages "], ["7.78", "we'll talk about how a computer converts a description of a how-to"], ["11.12", "method that we write in a high level  although a semantically constrained"], ["15.21", "manner  into a set of instructions that its internal"], ["18.45", "circuitry can execute "], ["21.04", "to do this  we're going to begin to introduce the basic elements of"], ["24.15", "python  the language we're going to use in this course "], ["28.24", "we will introduce a bunch of things "], ["30.78", "numbers  expressions that combine numbers arithmetically  ways to"], ["36.34", "compare objects like numbers  boolean operations on logical expressions "], ["42.83", "ways to abstract expressions by giving them names "], ["47.01", "strings or collections of characters and words and operations on them "], ["52.28", "combining expressions in a linear manner  and simple ways to make"], ["56.98", "decisions and to take different options or branches"], ["59.79", "based on those decisions "], ["62.49", "at the end of this lecture  you should be able to write simple programs that"], ["65.98", "manipulate numbers or strings  make decisions  and print out results "]], "mixmc-woOF8": [["1.38", "eric grimson  we've now added tuples  we've added lists  we've started to"], ["5.22", "see the kinds of things we can do with them  all the sorts of things we'd"], ["7.86", "like to do "], ["8.44", "we can slice  we can index  we mutate the list  we can apply functions to"], ["12.61", "all of those pieces "], ["14.04", "we're going to add in one last data structure that is a further"], ["17.32", "generalization of the kinds of things we've been building "], ["19.76", "and that data structure is a dictionary "], ["21.66", "so a dictionary's a generalization of a list  but now the indices  the ways"], ["25.4", "to get to elements of the dictionary  don't have to be integers "], ["28.6", "if you think about it  a list is a linear sequence of things  and its"], ["31.63", "indexed starting at 0  1  2  3  all the way up to the end "], ["35.27", "now  with dictionaries  the places or the ways to get to elements of the"], ["39.64", "dictionary can be any value that's immutable "], ["43.43", "hm  what does that mean "], ["45.8", "first of all  we're going to start referring to these indices not as"], ["48.31", "indices  because that implies integers  but as keys  because the"], ["51.01", "keys can be arbitrary in form "], ["53", "and a dictionary then is simply a collection of key value pairs "], ["57.43", "that is  a pairing up some key and an associated value "], ["61.61", "the syntax for this is shown here "], ["64.18", "we use curly braces to indicate that this is a dictionary  and each of the"], ["68.33", "pairings is a combination of some key  a colon  and some value "], ["73.81", "they're separated by commas  so the commas tell me where the ends of each"], ["77.42", "one of those are "], ["78.7", "so i'm giving the name monthnumbers to a collection of jan 1  feb 2  mar 3 "], ["84.88", "and 1 jan  2 feb  and 3 mar "], ["86.72", "so i've got pairings both ways "], ["88.58", "each pairing has both a key and a value in it "], ["92.9", "ok "], ["94.3", "if i've got that  and in fact  i'm just going to show you over here  i've"], ["97.42", "got monthnumbers defined  and it is that pairing of these pieces "], ["102.71", "now  what i can do is  i can start doing things on this "], ["107.68", "so the first one is  if that's monthnumbers  one of the first things"], ["110.56", "i can do is i can get out elements of it "], ["113.01", "so i could say  for example  if i wanted to get the value associated"], ["116.86", "with a key  i simply give it that value of the key as an index  and it"], ["124.14", "gives me back the thing i'd like "], ["126.35", "or i can say  if i want monthnumbers of the value associated with the key"], ["131.34", "too  i can get back that as well "], ["134.24", "so we get things by giving it a key "], ["137.91", "so it's a lot like a list  except that now the things that go in are"], ["141.17", "arbitrary expressions "], ["142.31", "they don't have to be integers "], ["144.21", "it's also important to notice "], ["146.52", "and here's what we can do if we give it a second one "], ["148.43", "it's important to notice that the entries in a dictionary are unordered "], ["152.37", "and they can only be accessed by a key  not an index "], ["156.08", "and in fact  if you look back on my idle screen  you can see when i"], ["158.51", "printed out monthnumbers  it gave me the dictionary "], ["160.51", "and notice they weren't in the form that i typed them in "], ["164.42", "i type them in with jan and 1  and yet it has 1 and jan as being the first"], ["167.84", "element of it "], ["168.77", "and so if i somehow say gee  i'd like to get what i think is the 0th entry"], ["175.105", "of monthnumbers  which would be that 1 jan pairing  it's going to complain "], ["179.59", "because in fact  i can't index by number "], ["182.2", "i have to index by key "], ["184.72", "ok  so what can we do with dictionaries "], ["188.27", "well  we can do insertion "], ["190.22", "so for example  i can go over to monthnumbers  and i can"], ["192.76", "add something new "], ["193.52", "and i would do that as you might expect "], ["195.32", "i'm going to give it as an assignment statement saying  associated with the"], ["198.76", "key apr as a string  i want the value 4 "], ["202.97", "and that has now added to the dictionary monthnumbers so that if i"], ["207.48", "ask for the value associated with key apr  it gives me back 4 "], ["211.63", "so i've just inserted something into there "], ["214.17", "i can also iterate over a dictionary  and i want to show you"], ["216.92", "an example of this "], ["217.63", "i'm going to bring this up here  and i'm actually going to"], ["218.92", "type it in over here "], ["219.7", "i'm going to create a variable called collect  which is going to be"], ["222.66", "initially an empty list "], ["224.44", "and then i'm going to loop over this dictionary i created  monthnumbers "], ["229.38", "so i'm creating an generator iterator  e is going to vary over each of the"], ["232.27", "elements of that "], ["233.06", "and i'm just going to append to the end of collect  that entry "], ["238.1", "and if i now look at what collect is  ha  cool "], ["242.8", "its a list "], ["244.17", "oh  and notice what it put in "], ["245.16", "it looks like it has put in the keys associated with each one of these"], ["248.82", "things  and that's actually very good "], ["251.28", "ok  so i've got the keys associated with each one "], ["254.02", "and indeed  if i want to look at this  i can compare that to"], ["259.24", "monthnumbers of keys "], ["263.48", "and that's just a method "], ["264.87", "and we'll come back to methods later on  but basically it's a method"], ["267.25", "associated with the dictionaries  which is going to give back to me the"], ["270.06", "list of all of the keys  and it turns out to be in exactly the same order "], ["274.12", "not a big deal "], ["274.72", "all i wanted you to see was the idea that we can iterate over a dictionary"], ["278", "doing things to the elements if we want to  and that's great "], ["281.17", "the final thing that we can do is stress that the keys can be complex "], ["286.03", "i can create a new dictionary where my keys now are tuples "], ["288.48", "the tuple 1 2  or the tuple 1 3 have values associated with them "], ["293.27", "i can ask for the value by giving it that key "], ["296.73", "and notice the form "], ["297.9", "i have to actually give it the key "], ["299.11", "open paren  1 comma 2  close paren  and it will get back for me the value"], ["303.2", "in the dictionary "], ["304.7", "it's also important to stress that these keys must be immutable "], ["308.84", "so i can use a tuple as a key  but not a list "], ["312.76", "and that makes sense because if i'm storing something with a key in a"], ["315.29", "value  and i can somehow go along and change the key  that's going to really"], ["318.84", "mess things up "], ["319.55", "i can't have mutable keys "], ["321.32", "they need to be immutable "], ["322.51", "and this is one place where it's advantageous to have both a tuple that"], ["325.92", "can't change  and a list which we can change "], ["329.4", "this is intended to be just a brief introduction to dictionaries "], ["332.29", "we'll come back to them and their methods later on "], ["334.55", "but now  what you've seen is we can have arbitrary collections of"], ["337.42", "elements  ordered collections like tuples and lists  and collections like"], ["342.84", "dictionaries that are simply indexed by arbitrary kinds of things  and"], ["346.27", "we've got functions that can start operating on those kinds of data"], ["349.26", "structures "], ["349.99", "and that's going to add a lot of power to the kinds of things we can do "]], "LYbCruklFEQ": [["0.13", "professor  so congratulations "], ["1.59", "you've made it almost all the way through this course "], ["4.7", "in this last lecture  we're going to try and wrap up what we've been"], ["7.65", "talking about "], ["9.11", "so in fact we want to do two things "], ["12.1", "we want to first talk about what have you done "], ["14.95", "where have you been "], ["16.35", "what are the key things that you learned in this course  what are the"], ["18.96", "key lessons we want you to take away from this course "], ["21.87", "and the second thing we want to do is we want to talk about"], ["25.51", "where you're headed "], ["26.78", "what have you learned  and more importantly  how might you use the"], ["29.73", "knowledge that you gained in this class to think about new things as you"], ["32.75", "move forward "], ["34.29", "so let's start by talking about what's actually going on this course "], ["37.73", "and we're going to start with a strange question "], ["41.26", "what do computer scientists actually do "], ["43.62", "in some sense  why might you have taken this course "], ["45.68", "well  we hope you've taken this course because you want to learn to think"], ["48.46", "like a computer scientist  at least some of the time "], ["51.38", "so what's a computer scientist actually do "], ["54.46", "well  they think computationally "], ["57.19", "well  duh "], ["58.3", "that's kind of an obvious statement "], ["59.87", "what does it really mean to say that "], ["62.12", "a little more carefully "], ["63.5", "a little less of a trivial answer  if you like  is that computer scientists"], ["67.53", "use a set of tools "], ["69.31", "they use abstractions "], ["71.05", "they use algorithms "], ["72.09", "and they use automated execution in order to solve problems "], ["76.3", "so a better response is that you don't need to think about all of the details"], ["80.94", "of something in order to build a model of it "], ["83.2", "that's an abstraction "], ["83.845", "you know what details to suppress so you can focus on key things "], ["87.8", "you know how to think in a mechanical way "], ["90.01", "a sequence of instructions "], ["91.65", "that word  recipe  we used way back at the beginning of the class as a way of"], ["95.78", "structuring how to execute a set of operations that let you deduce new"], ["100.37", "information from initial information "], ["103.68", "and we see ways in which you can capture all of that in a language that"], ["107.3", "describes methods that can be automated to actually solve all of"], ["110.74", "those problems "], ["112.15", "one of the things we want to argue is that computational thinking is really"], ["116.53", "a fundamental skill "], ["118.25", "every well-educated person ought to know how to think computationally "], ["122.16", "and indeed  this is a skill that is going to be used by everybody in the"], ["126.14", "very near future "], ["126.76", "certainly by the mid 21st century "], ["129.18", "so that notion of computational thinking is really valuable "], ["133.22", "and what does that say "], ["134.5", "well  just like the old days  one talked about the three rs "], ["138.24", "and yes  i know it's a bad pun  reading  arithmetic  and writing "], ["142.62", "we would like to argue that the ubiquitousness of computing and"], ["145.85", "computational thinking and computers  the fact that they're embedded"], ["148.55", "everywhere  is going to enable the spread of computational thinking as a"], ["152.28", "fundamental skill for every well-educated person "], ["156.52", "with that in mind  let's say a little bit more about what does that"], ["160.16", "computational thinking mean "], ["162.15", "what's the actual process "], ["164.2", "and here  this is just reminding you of the kinds of tools you've gathered "], ["170.01", "if we approach a problem from a computational"], ["171.98", "perspective  what do we say "], ["174.38", "we start by trying to identify or invent useful abstractions "], ["178.88", "what does that mean "], ["179.99", "we want to take elements of a problem and capture them in objects "], ["184.98", "abstractions "], ["185.84", "where we were suppress some details "], ["188.06", "they're internal to the abstraction "], ["189.52", "they matter only to the implementer of that abstraction "], ["191.97", "but to the user of the abstraction  those details are not relevant "], ["195.67", "what is relevant is the contract one has with that abstraction "], ["199.4", "if you give that abstraction certain inputs  it will give you back a"], ["202.85", "particular output "], ["203.84", "if you deal with an abstraction in a particular way  it will act in a"], ["208.1", "well-designed and specified way "], ["210.09", "so we suppress details and we formulate interfaces "], ["213.75", "and those are our abstractions "], ["215.91", "those are the elements on top of which we then build a computational process "], ["221.3", "and then what we say when we talk about how to think computationally "], ["225.3", "we said given those abstractions  given those elements of a problem  we"], ["228.71", "want to formulate a solution to the problem by using experiments "], ["233.6", "building those abstractions  we want to formulate what are the steps one"], ["236.98", "should use to execute those instructions or to use those"], ["240.13", "abstractions to compute something new "], ["242.25", "and having formulated a problem as a computational experiment  we then"], ["246.55", "design and construct a sufficiently efficient implementation "], ["250.57", "so we start up here with abstractions "], ["253.6", "we then formulate a solution as an experiment "], ["256.92", "we're going to do some computation on it "], ["258.76", "and we then design and construct an efficient implementation of the"], ["262.32", "experiment "], ["263.55", "that's where our algorithms come in "], ["265.6", "and having designed that  we then validate the experiment  or the setup"], ["269.95", "of it  rather "], ["271.05", "that is  we debug it "], ["271.95", "we make sure that it actually is going to do what we expect it to "], ["275.33", "and having done that  we then go ahead and run the experiment "], ["279.55", "now  running the experiment isn't the only stage "], ["282.37", "we also want to make sure that the things that we set up  the model we"], ["285.64", "built actually makes sense "], ["287.44", "and so when we run the experiment  we need to also evaluate the results "], ["291.37", "do these results make sense "], ["293.39", "do they satisfy preconditions "], ["296.9", "do they pass the laugh test  if you like "], ["299.29", "do they actually satisfy all the things that we would like "], ["302.4", "and that says if  in fact  they do  great "], ["305.43", "we've computed what we want  and we can move on "], ["307.81", "but if they don't  then we need to repeat "], ["310.08", "we need to go back around through this loop and refine our"], ["314.24", "experiment and continue "], ["316.7", "but that computational thinking  that designing the experiment then we can"], ["319.73", "actually use computationally  is a key element of what we do "], ["323.76", "now  with that in mind  we can then specify three elements that you've now"], ["328.65", "learned about how to think computationally "], ["331.82", "the three as "], ["332.73", "so the first one is that notion of abstraction "], ["336.01", "key elements here are how do you pick the right abstraction "], ["338.5", "how do you decide how to break a problem down into modules or chunks"], ["342.43", "that have well-defined interfaces between them and that capture elements"], ["346.25", "of the computation in a matter where we can suppress the details and just"], ["350.89", "use the attraction "], ["352.75", "we want to do that using multiple layers of abstraction "], ["355.42", "we certainly saw that  for example  when we talked about object oriented"], ["358.59", "programming in classes "], ["360", "we also saw that with algorithms  where we might build one algorithmic"], ["362.94", "module  suppress those details  and build on top of that another"], ["366.44", "algorithmic module  suppressing details within that  and so on "], ["370.35", "so we want to think about different layers of abstraction and using those"], ["374.1", "simultaneously "], ["375.58", "and of course  once we've defined those layers  we need to define the"], ["378.57", "relationships between them "], ["380.24", "and that really is a key element of how we think about abstraction "], ["384.55", "second element is automation "], ["387.78", "it's really important when we build abstractions to build them in a way in"], ["390.67", "which we can mechanize the use of those abstractions "], ["393.8", "we can specify a set of well-defined stages or operations that access or"], ["399.09", "manipulate elements of the abstractions "], ["401.82", "and one of the things that we saw that's very central to computational"], ["404.9", "thinking is the fact that mechanization  that building a"], ["408.12", "computer algorithm that does everything  is possible because we"], ["411.65", "have very precise and exact notations and models for things "], ["416.04", "that was the elements  if you like  of our syntax and our semantics of our"], ["419.39", "language  as we talked about "], ["421.26", "and the second key element is that there is a machine that can interpret"], ["424.53", "those notations "], ["425.8", "that is our interpreter "], ["426.93", "that is our evaluator  underlying all of the evaluation that we do "], ["431.42", "and then the third a are the algorithms "], ["434.18", "these are the specifications  the recipes  the ways in which we detail"], ["438.76", "the things that we're going to deal with "], ["440.62", "and again  the key element with our algorithms is that they"], ["443.03", "follow certain patterns "], ["444.23", "they obey certain rules "], ["445.6", "and we've learned those rules "], ["447.12", "and those rules are  by and large  independent of the programming"], ["449.86", "language in which we described those algorithms "], ["454.06", "with that idea of computational thinking  one of the things that we"], ["457.74", "can then say is we've got a language  we've got abstractions to details "], ["463.43", "with that  we can also then think about some examples "], ["466.8", "and i want to give you two of them "], ["468.99", "the first one is when we think about a problem computation "], ["472.51", "the kinds of questions we can now ask are how difficult is this problem  and"], ["477.48", "how best can i solve it "], ["479.62", "we've already seen that the theory of computer science gives the precise"], ["483.17", "meaning to these questions and to their answers "], ["485.9", "we saw that certain problems have more complexity "], ["489.61", "that solutions to them inherently involve some minimum amount of"], ["493.02", "computation "], ["494.025", "and that some classes of problems are much more efficient"], ["496.72", "to solve than others "], ["497.98", "and it gives us a sense of where we want to be when we think about how to"], ["500.58", "tackle a particular problem "], ["502.69", "we also saw that different kinds of algorithms tackle different kinds of"], ["506.56", "problems better "], ["507.7", "and those tools we're going to come back to when we think about how to use"], ["510.57", "them to best solve a problem "], ["513.1", "one of the key things we saw with computational thinking is that we can"], ["517.75", "think recursively "], ["519.48", "and this means not just that we use a recursive program to solve something "], ["523", "it also talks about how we solve a problem "], ["525.73", "that if we're given what seems like a very difficult problem  often we could"], ["529.89", "reduce it to a simpler version of another problem  or to a simpler"], ["534.14", "version of the same problem "], ["535.78", "the latter one  of course  is the standard recursive version "], ["538.37", "but this idea of reducing or embedding or transforming problems into other"], ["542.68", "solutions is really handy "], ["545.25", "so part of your goal as a computational scientist is to create"], ["549.59", "and store away a set of standard methods for solving problems "], ["553.33", "so that when you get a new problem  you can use it to say  is this a"], ["557.02", "problem i can reduce to a problem that i already know how to solve "], ["561.57", "and if i do  how do i do that transformation in a way that lets me"], ["565.04", "solve the original  more difficult problem "], ["568.23", "that idea of recursive thinking  we've seen many times "], ["572.3", "and just to show you a favorite example of it  you can obviously"], ["574.9", "create things that recursively unwind into simpler or smaller versions of"], ["578.77", "the same problem "], ["579.96", "but of course  somewhere way down here in the middle  you do need to have a"], ["583.57", "base case to stop the unwinding of the computation "], ["587.72", "but that's basically what we've been doing in this course "], ["592.41", "we've been thinking about how to approach problems computationally "], ["596.11", "in the next section  we're going to move on to talk about what actual"], ["598.6", "tools have you learned "]], "mExCdX2EPyY": [["1.08", "professor  in the modern world  we often have to search through many"], ["3.66", "alternatives to find out which combination will"], ["5.88", "give us the best result "], ["7.55", "for example  what stock portfolio will give us the greatest return at"], ["11.83", "acceptable risk "], ["13.33", "or what combination of trams and buses will get me across town in time for"], ["18.12", "the concert tonight "], ["19.53", "or we might want to know what choice of rocket booster and trajectory will"], ["23.32", "provide the minimum transit time for a space capsule to mars "], ["28.73", "these problems  called optimization problems  have been studied for many"], ["31.67", "years and good computational solutions exist for many of them "], ["36.38", "if you have your own optimization problem  you'll probably find it can"], ["39.96", "be reduced to one of the classic optimization problems  and you'll be"], ["44.53", "able to adopt one of the existing solutions "], ["47.83", "over the next few lectures  we're going to be looking at some of the"], ["50.94", "classic optimizations "], ["52.41", "and of course  you'll get to experiment with some of the"], ["54.98", "solutions in python "], ["58.21", "as we tackle each of the problems  spend some time thinking about how you"], ["61.36", "would approach the problem "], ["62.82", "it can be a lot of fun "], ["65.5", "let's get started "], ["67.05", "optimization problems share some common characteristics "], ["70.58", "suppose we wanted to find the minimum airfare from boston to san francisco"], ["75.34", "on a monday or tuesday "], ["77.34", "well the first thing we notice is that the statement of the problem has an"], ["81.76", "implicit objective function "], ["83.84", "so there's our objective function  the minimum airfare "], ["86.32", "so often the objective function involves mins or maxes or biggest or"], ["91.37", "smallest or something like that "], ["93.49", "notice that some objective functions actually require us to look at all"], ["96.95", "possible solutions so that we can choose the one that is the minimum or"], ["102.07", "the maximum "], ["102.72", "after all  how would we know that we had found the minimum unless we"], ["105.7", "examined all the other ones to see that they were bigger "], ["109.37", "the second thing that we notice is a set of constraints this"], ["112.93", "solution must satisfy "], ["114.92", "in this case  we're interested in flights that happen"], ["117.83", "on monday or tuesday "], ["119.63", "that seems pretty straightforward "], ["120.77", "we could obviously generate solutions and check to see if they satisfy the"], ["124.76", "constraints "], ["125.56", "and then if they do  we can apply the objective function and decide if this"], ["129.18", "is the one that we are looking for "], ["131.32", "sometimes a set of constraints can help constrain the search "], ["134.73", "that's why they're called constraints "], ["137.59", "for example  with the airfare  we might only consider flights that were"], ["141.45", "flying on monday or tuesday  and from the set of all possible flights  that"], ["145.97", "would be a considerable reduction in the amount of work we would have to do"], ["150.6", "to come up with a final answer "], ["152.54", "before we look into how to write computer programs to solve"], ["156.03", "optimization problems  let's take a moment and look at some of the more"], ["159.6", "interesting ones "], ["161.05", "here's a classic optimization problem from the world of chess "], ["164.86", "the goal is to place  in this case  8 queens on an 8 by 8 board such that"], ["169.92", "none of the queens is attacking each other "], ["172.39", "that would mean that no 2 queens occupy the same"], ["175.4", "row  column  or diagonal "], ["177.31", "well if we're going to program a computer to solve this problem  we"], ["180.26", "might try a simple brute force approach where we would start by"], ["183.66", "placing the first queen on a square and then think about where we could"], ["188.65", "place the second queen "], ["190.13", "and we wouldn't be able to place it anywhere in the first column  nor in"], ["196.2", "the first row  the second column  or in the second row  the second column "], ["199.69", "but we could place the second queen here "], ["202.51", "and then we could go on and think about how to place the third queen and"], ["205.93", "the fourth queen  so forth and so on "], ["208.52", "we might eventually come to a situation where it would be impossible"], ["212.2", "to place some queen  because there would be no remaining position on the"], ["216.42", "board where that queen could go "], ["218.53", "and that might mean that we'd have to back up and reconsider one of our"], ["223.73", "earlier choices "], ["224.55", "for example  the final solution might involve having the second queen"], ["229.89", "actually be in this square "], ["231.6", "and then we'd have to redo the placement of all"], ["233.75", "the subsequent queens "], ["235.63", "so this is an example that we're sort of step by step slowly enumerating all"], ["241.9", "possible solutions "], ["243.22", "well in this case  there are 64 squares on 8 by 8 board  and we're"], ["248.31", "trying to choose 8 of the locations "], ["251.5", "so 64 choose 8 is about 4 billion possibilities  so the enumeration"], ["257.899", "would take a long time "], ["260.339", "however  we will eventually come to an answer  and one of the characteristics"], ["264.47", "of optimization problems is that there's almost always a brute force"], ["269.29", "approach that involves an exhaustive enumeration of all the possibilities "], ["274.34", "another classic problem is bin packing "], ["277.1", "in this problem  we're given many objects of different sizes  and our"], ["281.74", "goal is to pack them into bins of a fixed capacity "], ["285.12", "and so in this case  our capacity of each bin is 80 "], ["289.94", "so we can see here that if we stack up objects of size 26  and 8  and 45 "], ["296.24", "we've basically almost filled up the first bin "], ["299.55", "the goal of the problem is to pack all the objects in the bin  but if we can "], ["305.17", "is to minimize the number of bins "], ["309.29", "you can imagine there's many different ways to think about how to go about"], ["312.41", "this problem "], ["313.45", "for example  you could just simply take the objects as they came and"], ["317.2", "stack them up one at a time in a bin  and when the next object wouldn't fit "], ["321.01", "you simply move to the next bin and keep going until you've used up all"], ["324.79", "the objects "], ["326.09", "of course that would leave a bunch of bins with room at the top  and"], ["329.47", "perhaps  some small object would fit there "], ["332.06", "so another alternative would be to simply leave bins open all the time "], ["337.82", "and every time you have an object  you look for the first bin"], ["340.96", "that will it fit in "], ["342.42", "or maybe you look for the bin that has the most room and put it in there "], ["345.69", "or maybe you'll look for the bin that has the least amount of room remaining"], ["350.22", "but which the object would fit in "], ["351.89", "so forth and so on "], ["353.11", "it's actually fascinating to think through all the different ways you"], ["356.36", "could tackle this problem "], ["358.18", "you can see that if we tried to enumerate all the possible solutions "], ["362.06", "however  particularly when there's many  many  many choices to be made "], ["365.97", "it would be almost computationally impossible "], ["368.56", "it would take years of computer time to figure out what we're doing  to"], ["373.89", "figure out all the possible combinations "], ["376.38", "so this is an example of a problem where almost certainly we'll have to"], ["379.54", "figure out a heuristic or approximate solution that will let us make some"], ["383.47", "progress and hope that it produces  as best we can  the"], ["387.95", "smallest number of bins "], ["390.29", "for our next example  suppose you worked at a cabinet shop and your job"], ["394.7", "was to cut doors and cabinet sides out of large sheets of plywoods "], ["399.85", "the objective function is to minimize the waste "], ["402.9", "what you'd like to do is to take any lumber that ends up getting thrown"], ["406.38", "away and make sure that's the least amount of lumber possible "], ["410.49", "the constraint that you have to satisfy is that you can only do"], ["414.29", "guillotine cuts "], ["415.64", "now  in a cabinet shop  you have to use a table saw to make a cut  and the"], ["421.37", "table saws really want to cut all the way across a piece of stock  like so "], ["425.93", "so that would be a guillotine cut  the first one you would make "], ["429.84", "so the goal is to figure out a plan for laying out the pattern and then"], ["436.38", "the sequence of cuts to minimize the waste and only do guillotine cuts "], ["441.5", "what's interesting about this particular problem is you notice that"], ["444.83", "once we've made our first cut  we have a similar subproblem "], ["448.69", "so in other words  now we have a smaller problem that's exactly the"], ["452.27", "same of taking these 3 pieces and laying them out on a smaller piece of"], ["456.05", "plywood and solving the problem once again "], ["458.87", "so this is often a structure you find in optimization problems  where you're"], ["463.02", "sort of have to think a little bit about how maybe solving the problem"], ["467.1", "involves really solving 2 subproblems and then looking to see if the"], ["472.11", "solution produces a minimum cost "], ["477.47", "here's an example with a different kind of cutting "], ["480.12", "imagine that this is a description of an electrical grid  and we have a"], ["483.6", "generating station at this end  and a city down here at this end  and the"], ["489.33", "intermediate points are all substations "], ["492.37", "and the arrows represent the capacity and the numbers represent transmission"], ["497.73", "lines and their capacity "], ["499.67", "and what we're interested in doing is computing the maximum flow from the"], ["504.27", "starting point down to the ending point "], ["507.15", "how much current can flow through this network "], ["509.95", "well  the answer to this problem is related to the following observation "], ["515.09", "suppose we make a cut through the network  and we realize that "], ["519.59", "so a cut would divide the network in half so that s is in one half and t is"], ["524.11", "in the other half "], ["525.39", "and we realize that all the current flowing from s to t would have to"], ["529.69", "cross that cut "], ["531.09", "what we would like to do is to find the cut  that so-called min cut  the"], ["536.27", "minimum cut "], ["537.51", "and what we'd like to do is to minimize "], ["540.09", "ok  if we look at the capacity of all the cut edges  what we'd like to do is"], ["546.75", "to sum up that capacity  and we'd like to minimize that sum "], ["552.48", "so if we find the min cut through the network  that will actually tell us"], ["557.14", "the maximum flow that can go from s to t "], ["561.34", "as you can see  there's a lot of possible ways to make cuts in this"], ["564.99", "network  and to do so without examining every possible cut is sort"], ["569.91", "of a tricky business "], ["571.902", "as a final example  consider the problem a traveling salesman faces "], ["576.59", "he has a territory with cities with rail lines connecting the cities "], ["580.51", "he would like to find the minimum cost trip that's subject to the following"], ["584.65", "constraints "], ["585.93", "he'd like to visit each city exactly once  and at the end of the journey "], ["590.97", "he would like to return home "], ["594.21", "so this is one of the classic graph problems "], ["596.62", "so the vertices represent cities  the lines represent the opportunities to"], ["603.05", "travel from one city to another  and the goal here is to find a path now"], ["608.82", "through this graph of cities that visits each city exactly once and"], ["614.36", "returns to the start "], ["616.22", "now the question is is that the minimum cost  such trip "], ["619.46", "can we figure out a way to do this that doesn't involve enumerating every"], ["623", "possible trip "], ["624.58", "the challenge of optimization problems is that they are hard to solve "], ["629.28", "hard in the sense that finding the solution you're looking for  the"], ["632.83", "optimal solution  requires examining all the possible"], ["636.63", "combinations of items "], ["638.88", "so that's why this field is often given the name combinatorial  so"], ["644.57", "studying of all the different combinations  optimization  because"], ["648.48", "we're going to then look through each of the possible combinations and see"], ["652.48", "if it's the one that is the best solution to the problem that we have "], ["657.1", "the reason it's hard is that the time to examine all the combinations of a"], ["661.21", "set of items grows exponentially with the number of items "], ["665.01", "and what i mean by that is if i go ahead and add a single item to the"], ["669.03", "collection  if i think about now all the possible combinations of items "], ["672.96", "what i will discover is that i will have a doubled the number of"], ["677.18", "combinations "], ["678.36", "and so as i go from 1 to 2 to 4  the problem is getting exponentially"], ["683.87", "harder  twice as hard each time "], ["687.65", "and the reason that's a problem is that real world challenges often have"], ["691.87", "a very large number of items that you need to consider "], ["694.8", "so as the problem is growing exponentially more difficult with each"], ["698.99", "item  we can see that if we have 50 items that the problem may  in fact "], ["704.77", "take us too long to solve using the exhaustive techniques of looking at"], ["708.96", "each possible combination "], ["710.75", "so instead  we're going to have to look around for approximate solutions"], ["715.87", "to these problems "], ["717.41", "we give that the fancy computer science term of heuristics  something"], ["722.37", "that will let us not examine all the solutions but come up with a solution"], ["726.58", "more quickly "]], "-8T8AXxVFZg": [["0.71", "eric grimson  ok  so we want to think about computational"], ["3.52", "problem solving "], ["4.62", "we want to understand  what does it mean to think"], ["6.41", "computationally "], ["7.862", "that leads to the philosophical question  so"], ["10.22", "what's computation "], ["11.52", "and like a good philosophical question  that leads to"], ["13.89", "another  deeper philosophical question "], ["16.265", "to answer that question of what's computation  let's"], ["18.94", "start by asking the question  what is knowledge "], ["22.27", "and  as we're going to see  we can divide"], ["23.81", "knowledge up into 2 parts "], ["25.49", "there's declarative knowledge  which we can think of the"], ["27.89", "statements of fact "], ["29.41", "and there's imperative"], ["30.32", "knowledge  or how to's methods "], ["33.13", "statements of facts give us true  but  as we'll see  they"], ["36.74", "don't necessarily help us think about how to find new"], ["39.01", "information "], ["40.25", "imperative knowledge  how to methods or recipes  give us"], ["43.45", "ways of finding new information  and that's going"], ["45.85", "to be really valuable to us "], ["47.96", "now  to look at this  let's look at an example "], ["51.65", "so  what do we mean by declarative knowledge "], ["53.51", "well  here's a piece of declarative knowledge "], ["56.232", "that first statement says  the square root of a number x is a"], ["60.54", "number y such that y * y = x  "], ["63.75", "you know that's true from high school algebra "], ["66.78", "it's a statement of truth "], ["68.82", "it tells us something about how to decide whether a"], ["73.13", "particular number is a square root or not  but can we use"], ["76.4", "this to actually find a square root "], ["78.77", "and the answer is no "], ["80.14", "if we have a number x equal to 25 and we're trying to find"], ["84.13", "the square root of that  and somebody gives us a guess y ="], ["87.18", "5  we can use this statement to test to see if 5 * 5 = 25  "], ["92.27", "which it does "], ["93.35", "but it doesn't tell us how to find the guess "], ["95.68", "so declarative knowledge  which is what much of"], ["97.92", "knowledge is based on  isn't what we need "], ["100.48", "we want a different kind of knowledge  and for that "], ["104.32", "fortunately  we have imperative knowledge "], ["107.59", "as we said  imperative knowledge is how to kinds of"], ["110.15", "knowledge  or methods or recipes for finding something "], ["114.17", "and here's a recipe for deducing square root "], ["117.185", "it's actually attributed to heron of alexandria  although"], ["119.75", "there's some debate as to whether he was the original"], ["122.45", "creator of this algorithm  but it dates from the first"], ["124.95", "century ad "], ["126.53", "and you can see the description here "], ["128.56", "description says if i want to find the square root of some"], ["130.889", "number x  i'm going to start with a guess "], ["132.85", "i'll call it g "], ["134.24", "i'm going to take g and multiply it by itself and look"], ["136.89", "if that result is close enough to x "], ["139.37", "if it is  i'm going to stop  and say that g is the answer "], ["143.19", "otherwise  i'm going to make a new guess by averaging g and"], ["146.96", "x/g   and using this new guess  which i will call g"], ["150.9", "again  i'm going to repeat the process until we get something"], ["153.79", "that's close enough "], ["155.87", "notice  this is a mechanical set of steps and it has some"], ["159.17", "basic forms "], ["160.48", "right here there's a test "], ["162.88", "it's going to let us know when we're done "], ["165.48", "when we're close enough "], ["167.192", "if that test isn't satisfied  then there's some simple"], ["170.47", "calculations  like here  that tells us what to do "], ["175.383", "and then  finally  there's a flow of control  or a loop "], ["180.26", "that tells us how to keep executing the same sequence of"], ["184.44", "operations until we get  in fact  to a"], ["186.69", "place where we're done "], ["188.28", "this is something that tells us how to find a square root "], ["192.17", "this is imperative knowledge and this is what we want "], ["195.5", "ok  let's try it out "], ["196.65", "here's a little description of that "], ["198.08", "let's see what happens if we were actually to do it "], ["200.64", "so i'm going to do a simple little simulation "], ["202.89", "i want to find the square root of 25 "], ["204.34", "and  yeah  i know the answer is 5  but let's think about"], ["207.28", "what might happen here "], ["207.94", "i'm going to start with a guess and i'm just going to"], ["209.69", "initially guess 3 "], ["212.3", "heron of alexandria's algorithm says"], ["214.04", "multiply 3 by itself "], ["216.08", "that  of course  gives me 9 "], ["217.884", "is 9 close enough to 25 "], ["220.59", "i don't think so  so let's get x/g   which is about 8 33 "], ["227.62", "and now  let's take the average of x/g and g "], ["231.48", "so we add g and x/g   take the average of"], ["234.56", "that  and we get 5 67 "], ["238.41", "and then our little recipe says take"], ["240.67", "that and do it again "], ["242.09", "so this now becomes my new guess  5 67 "], ["247.92", "i multiply those together "], ["249.35", "i happen to know that comes out to be about 32 5 "], ["252.363", "i've gotten closer to 25  but it ain't there yet  so that's"], ["255.71", "not close enough "], ["256.85", "again  let's take x divided by this g which turns out to be"], ["260.829", "about 4 41  and then i take g and x/g and i average them "], ["267.67", "and i get 5 04 "], ["270.98", "and my algorithm says  my recipe says  take"], ["274.46", "this and do it again "], ["277.62", "5 04 multiplied by itself is about 25 4  and i'm going to"], ["282.66", "say  you know what  that's close enough  so my little"], ["285.11", "recipe says there's the answer "], ["287.92", "not perfect  but close enough "], ["290.72", "so  heron had it right "], ["292.49", "this looks like a pretty good algorithm "], ["293.98", "this is a way of describing a method for doing something "], ["297.12", "and that idea  that notion of a recipe  is something we're"], ["300.41", "going to use a lot "], ["301.81", "so we can think of algorithms as being recipes  sequences of"], ["305.1", "mechanical steps for doing something "], ["307.95", "we put that analogy to a little bit more use  we can"], ["310", "see that recipes have much of the same form  real recipes "], ["313.19", "imagine i want to make some custard "], ["315.3", "here's my recipe "], ["316.11", "i'm going to take all the ingredients of the custard "], ["317.7", "that mixture  put it into a pot over some heat  and i'm"], ["320.72", "going to stir it "], ["322.48", "as i stir it  every once in a while  i'll dip a spoon into"], ["324.84", "the custard  pull it out  and run my finger across the back"], ["327.75", "of the spoon "], ["329.04", "if the spoon is clear  then i'm done and i'm going to"], ["331.62", "remove the custard from the heat and let it cool "], ["334.48", "if not  i'm going to repeat "], ["336.3", "and notice what we have here "], ["337.68", "again  we've got a test  right there "], ["342.05", "and we've got a way of  in fact "], ["344.02", "changing the flow of control "], ["345.39", "so  normally  the flow runs this way  but based on that"], ["350.37", "test  we have a way of going back up and"], ["353.45", "continuing the path "], ["354.88", "and this pattern is something we're going to repeat a lot "], ["357.7", "so  you want to capture recipes and we need to figure"], ["361.38", "out how to get the computer to do that for us  which is what"], ["363.82", "we're going to talk about next "]], "3nWlFHGKNAk": [["0.92", "eric grimson  we've been looking at optimization problems "], ["3.66", "these are problems where we want to find a solution that satisfies some"], ["7.48", "function  some measure  some estimate of performance "], ["11.11", "and we've seen that often those optimization problems can be thought"], ["14.38", "of as search problems "], ["15.92", "we write an algorithm that looks through the space of possible"], ["18.82", "solutions  trying to find a solution that maximizes or minimizes some"], ["22.99", "measure of success "], ["24.39", "and  ideally  we've seen that those solutions  or those search solutions "], ["28.41", "will be efficient "], ["29.24", "they may not look at the entire space "], ["31.12", "they'll take advantage of the structure of the problem to find"], ["33.9", "efficient ways to maximize some measure "], ["38.21", "we want to generalize that idea to take it in a different direction  and"], ["41.41", "we're going to take it in a different direction by looking at optimization"], ["44.27", "problems over graphs "], ["46.67", "so what's a graph "], ["48.21", "well  let me give you an example "], ["50.51", "imagine you are a college student  which you may well be  and you want to"], ["54.09", "go home for the holidays "], ["55.43", "so you'd like to plan a flight that gets you there "], ["58.42", "imagine you had data on all the flights between cities in the us  or"], ["61.75", "major cities within the us  including information about the prices "], ["66.97", "let's also assume that for any pair of cities  a and c  if i want to fly from"], ["72.14", "a to c through b  that is  a to b to c  the cost of that flight a to c is"], ["77.1", "the same as the cost from a to b and the cost from b to c  if i have that "], ["82.89", "what might i like to know "], ["83.81", "well  i might like to know what's the best set of flights that has the"], ["86.88", "fewest stops between two cities "], ["89.19", "i might like to know what's the least expensive airfare between two cities "], ["93.75", "or  even constrained things like what's the cheapest flight from a to c"], ["97.69", "that doesn't go through more than one other stop along the way or no more"], ["101.8", "than two other stops along the way "], ["104.81", "all right  so you can imagine i might like to do this "], ["107.52", "what does a graph have to do with this "], ["109.76", "well  let's think about how to capture this problem "], ["113.47", "here's a map of the united states  where i've marked off some of the"], ["116.19", "major hubs  that is  airports through which airlines fly with a large number"], ["120.95", "of flights  so san francisco  la  chicago  for example "], ["127.7", "each one of these cities i've marked here i can think of as an"], ["130.77", "element of the graph "], ["131.81", "it's a piece of information  an object  if you want to think of this"], ["134.89", "in terms of our object-oriented system  with some information on it "], ["138.54", "what else would i like to know "], ["140.05", "well  i'd like to know where are the flights "], ["142.95", "so i could mark in all the connections between these hubs  that is  places"], ["147.7", "where there is a flight  a direct flight from one point to another "], ["150.81", "so for example  from san francisco to denver  there's a flight "], ["156.93", "now having marked those in  let's abstract away this problem "], ["161.005", "let's throw away the map and just capture an abstraction "], ["164.63", "and now i have a graph "], ["166.8", "and what's the graph "], ["167.98", "well  it's got some nodes  or elements  with information"], ["171.94", "associated with them "], ["173.27", "and it has some edges  or connections  things that link those nodes "], ["179.1", "let me describe that a little more carefully "], ["182.05", "a graph is two things "], ["184.43", "it's a set of nodes or vertices  my blue dots in that previous diagram "], ["189.85", "and those nodes or vertices are connected by a set of edges or arcs "], ["195.36", "arrows in this case "], ["197.33", "those edges indicate relationships between the nodes  and we're going to"], ["200.5", "use that in a second to actually think about doing optimization "], ["204.22", "now  if the edges are uni-directional "], ["206.68", "they only go one way  you can only fly from san francisco to"], ["209.59", "chicago but not back "], ["211.65", "then we say the graph is a directed graph or a digraph  and the arrows"], ["215.98", "here would be one directional "], ["218.84", "if they go both ways  we just say it's a graph "], ["222.59", "if we think about my example  i could imagine finding paths through that"], ["226.46", "graph from one airport to another that minimizes the number of"], ["231", "stops along the way "], ["232.44", "that would just be the fewest number of edges i have to pass through in"], ["235.35", "order to get there "], ["236.73", "but if i want to know about cost  i need additional information "], ["239.72", "and so often with a graph  i'm going to have other information "], ["243.09", "if we add a weight  or a cost  to each edge  then we say the graph is a"], ["248.4", "weighted graph and that says i can solve other kinds of problems "], ["252.41", "so for example  here i've added in  for each edge  the cost  the cost of a"], ["257.25", "flight between those two cities "], ["259.24", "and now i can actually start answering questions like  what would be the best"], ["263.67", "flight from san francisco all the way out here  for example  to boston that"], ["269.43", "minimizes  for example  the total cost  or it minimizes the total cost"], ["274.65", "subject only going through one or two additional cities "], ["277.62", "now i can start thinking about optimization"], ["279.56", "problems over these graphs "], ["281.95", "this is actually going to be really powerful "], ["284.1", "now why are these actually useful "], ["285.95", "well  graphs let us represent a wide range of different kinds of problems "], ["292.08", "and they lead  naturally  to questions that could be answered by a particular"], ["295.72", "kind of search problem  something we're going to deal"], ["297.52", "with in this lecture "], ["299.54", "we've talked about it in terms of transportation networks  that's kind"], ["302.63", "of obvious "], ["303.1", "but there are lots of other places where a graph is a very natural way of"], ["306.43", "capturing a problem "], ["308.22", "web traffic "], ["309.72", "imagine i've got a set of web pages "], ["311.35", "those could be the nodes in my graph "], ["313.21", "the edges would be the links "], ["314.71", "a page links to another page  and note they may be one directional "], ["318.78", "and then  the weights could be how often are those links used  and i"], ["321.96", "could ask questions about traffic in a particular collection of"], ["325.29", "pages on the web "], ["327.11", "another nice example is epidemiology  dealing with diseases "], ["331.4", "if i want to track the spread of a disease  i might gather information"], ["335.13", "where the nodes are people with information about the disease "], ["338.42", "they have the disease "], ["339.47", "they've been exposed to the disease "], ["340.93", "they're immune to the disease "], ["342.53", "the edges would indicate interactions between those people "], ["345.86", "they know each other "], ["346.79", "they know each other well "], ["348.27", "and the weights  in fact  would capture exactly that  the level of"], ["351.85", "interaction "], ["353.02", "and using that  i could track the spread of a disease to try and"], ["356.49", "identify the sources  to try and identify populations that are isolated"], ["360.61", "from other populations "], ["362.18", "we'll see lots of examples of using graphs  and especially solving"], ["365.98", "optimization problems  over those graphs "]], "8iQAhz7rzVs": [["1.16", "professor  as scientists and engineers  the way we understand the"], ["3.62", "world around us is design experiments and take measurements "], ["7.93", "the world's a complex place  however  and those complexities often conspire"], ["13.27", "to make the measurement process somewhat problematic "], ["16.6", "vibration  temperature  electrical interference can all have subtle"], ["20.83", "influences on the measurements that we're taking "], ["24.16", "our goal in this lecture is to study how computation can help us understand"], ["28.76", "our experimental data and process it to help reveal the underlying truths "], ["35.63", "as a first step in understanding experimental data  let's remind"], ["39.28", "ourselves what we're about "], ["41.77", "so usually one of the first things we do is to develop an hypothesis of how"], ["47.16", "things work "], ["48.57", "so this is a simple statement that says if i do x  y will happen or"], ["53.16", "something equivalent to that "], ["54.58", "if we have a hypothesis  we'll quickly want to design an experiment and then"], ["60.89", "take some measurements "], ["62.21", "and it's really these measurements that will tell us what the results of"], ["66.38", "the experiment were "], ["68.07", "and in fact  we often will interchange the order of these two things "], ["71.62", "sometimes  we've measured  done some experiments  and we're interested in"], ["75.38", "making a hypothesis that explains the results "], ["78.13", "other times  we have a theory about how something works  and we're trying"], ["82.06", "to design an experiment to prove the theory "], ["85", "in either case  once we have the measurements  then we're going to use"], ["88.73", "computation to do several things "], ["91.18", "the first thing we're going to do is probably evaluate the hypothesis "], ["95.42", "what we'd like to do is determine if the measurements we made give us some"], ["99.33", "evidence that  in fact  our hypothesis is true "], ["102.91", "the hypothesis may involve a certain unknown  some constant to"], ["106.46", "proportionality  and one of the things we'd like to do with the measurements"], ["110.35", "if we decided that  in fact  the hypothesis is true is determine the"], ["115.38", "values of these unknowns in the hypothesis "], ["121.66", "and finally  and this is maybe one of the most important things that we're"], ["124.36", "going to use computation for  is if we have a validated hypothesis  we would"], ["129.639", "like to use it to predict consequences "], ["132.65", "and in fact  these may be consequences that would be very hard to do"], ["136.05", "experimentally or very costly "], ["138.15", "so  for example  if we've understood orbital mechanics  we may wish to use"], ["142.43", "the computer to use the mathematical model of orbital mechanics to predict"], ["146.62", "the trajectory we should take in order to successfully have a"], ["151.41", "rover arrive at mars "], ["154.52", "let's see how this might work in practice "], ["157.56", "in 1676  the english scientist robert hooke proposed the following"], ["163.11", "hypothesis about how springs work "], ["165.8", " the power of any springy body is in the same proportion with the"], ["169.88", "extension  "], ["170.87", "so let's see what he's talking about here "], ["172.62", "so  if we take this common piece of gym equipment  a bunch of springs"], ["175.99", "with handles on it  and we bolt one handle to the wall  and then we start"], ["180.51", "pulling on the other end of the spring  we apply"], ["182.84", "some force this way "], ["184.17", "the spring will stretch "], ["185.36", "and  in fact  we can measure the amount of stretch  and we'll call that"], ["190.21", "the extension "], ["192.64", "and as anybody who's tried this knows from experience  the farther you"], ["196.84", "stretch it  the harder the spring is pulling in the opposite direction "], ["200.25", "so the spring will busily be exerting some force to counteract the"], ["204.48", "extension  and that force will be proportional to the amount of stretch"], ["208.315", "that you're putting into it "], ["209.91", "and that constant of proportionality is called the spring constant "], ["214.69", "if k is small  it's a very weak spring  and in fact  it doesn't take"], ["219.13", "much force to either compress or extend it "], ["221.83", "for example  a ballpoint pen can easily be controlled "], ["224.385", "the little spring inside can be compressed with a single"], ["228.36", "push of your finger "], ["229.95", "on the other hand  if the spring constant is large  that means it's a"], ["233.44", "very stiff spring "], ["234.91", "so  example of a very stiff the spring is like a car spring  where it takes a"], ["239.34", "tremendous amount of force to compress it even a little bit "], ["243.97", "let's design an experiment to test hooke's law "], ["247.48", "to do that  what we're going to need to do is to figure out how to apply"], ["250.45", "unknown force to the end of the spring "], ["253.41", "and we're going to do that by hanging a weight on the end of the spring  and"], ["258.089", "the force  the downward force  applied by that weight is going to equal to"], ["262.49", "the mass of the weight times the gravitational constant "], ["265.2", "that's the acceleration due to gravity  which is  i'll say  9 81"], ["269.72", "meters per second squared "], ["272.58", "and so  when we hang a weight  we get a downward force "], ["277.24", "that will cause the spring to stretch "], ["279.715", "so the spring stretches out  and the more it stretches  the greater the"], ["285.03", "extension  obviously "], ["286.22", "so  here's the measured extension of the spring here "], ["289.1", "we can measure how far the spring stretches when we add the weight  and"], ["293.17", "we're going to get an upward force by the spring resisting the extension "], ["298.38", "and in fact  that upward force  according to hooke's law  is equal to"], ["302.27", "the spring constant times the amount of extension "], ["305.69", "eventually  the system will reach equilibrium "], ["309.41", "and equilibrium happens when everything stops moving  which must"], ["313.03", "mean that the downward force exerted by the weight is equal"], ["317.53", "to the upward force "], ["318.586", "in other words  everything's exactly balanced and there's no more forces"], ["321.73", "acting on the weight  so the weight isn't moving and the spring isn't"], ["324.49", "stretching any farther "], ["326.45", "and what that will tell us is that at that point  the downward force  mg  is"], ["331.39", "equal to the upward force  kx "], ["335.31", "we went off and performed that experiment "], ["337.26", "we took many different weights and hung them on the end of the spring "], ["341.08", "and here's a listing of all the different masses that we use from 0 1"], ["344.45", "kilograms up to 1 0 kilogram "], ["346.7", "and we measured the extension in meters that each weight produced "], ["352.91", "so  let's figure out  can we compute k from this "], ["356.15", "well  if hooke's law is true  then we know that mg = kx "], ["361.46", "we decided that on the previous page "], ["363.81", "that implies we should be able to compute k by taking the force that was"], ["368.28", "applied by the weight and dividing it by the extension "], ["372.36", "let's try it "], ["373.64", "so  our first weight was 0 1 kilograms "], ["377.3", "the gravitational constant is 9 81 meters per second squared "], ["382.91", "and we'll just divide that by the measured extension  which is about"], ["387.49", "8/100 of a meter  8 centimeters "], ["390.65", "and if we do the arithmetic  you know  we can type that little formula"], ["393.65", "into python or use a old-fashioned calculator or even more old-fashioned"], ["398.14", "instead of working it all out by hand "], ["400.39", "we end up computing that k is equal to 11 341 newtons per meter "], ["407.04", "so  are we done "], ["408.55", "was it really that simple "], ["410.51", "seems like we didn't really need to take all of these measurements "], ["412.91", "we used the first one to do the calculation  and if everything is"], ["416.52", "perfect  all the rest of the computations should come up with the"], ["420.62", "same result "], ["421.47", "so  why not as a finger exercise do the same computation that i just did "], ["425.5", "except use the second measurement "]], "fgrbzv_HQeE": [["0.58", "ok  we've now seen graph search "], ["3.73", "depth first search  breadth first search "], ["6.27", "and we've seen  in fact  searches where both depth first search and"], ["9.82", "breadth first search will find solutions  find paths"], ["12.87", "with the fewest edges "], ["14.45", "that may be what we want "], ["16.05", "but there are also times where we might want more information "], ["18.92", "let's go back to our original example of finding flights"], ["21.14", "from one city to another "], ["22.7", "we could find the sequence of flights that involves the fewest stops "], ["26.89", "that would be the minimum number of edges "], ["28.88", "but we might be more interested in minimizing time or minimizing cost "], ["32.7", "and that's information that's on the weight on an edge "], ["35.79", "so if our edges are weighted  we need to find other solutions  solutions"], ["39.28", "that minimize that total cost "], ["41.66", "turns out that for depth first search  the algorithm we've shown you is quite"], ["45.1", "easy to modify "], ["46.51", "rather than just counting the number of edges  we"], ["49.21", "simply sum up the weights "], ["50.95", "and we keep searching to find the solution "], ["53.11", "the path that minimizes that sum "], ["56.13", "structure of the algorithm  other than that change  is basically the same "], ["59.52", "for breadth first search  in fact the first found solution"], ["62.88", "may not be the best "], ["64.15", "because it's minimizing by the structure of the algorithm  the number"], ["67.96", "of steps  the number of edges "], ["69.77", "and so one needs more sophisticated methods to actually try and solve it "], ["73.47", "just to give you a difference  or a sense of the difference between them "], ["76.21", "let's look at a couple of simple little examples "], ["79.49", "here's that graph abstraction we had at the beginning of our lecture about"], ["83.79", "different flights "], ["85.2", "if we're just minimizing the number of edges  for example  going from here"], ["88.89", "to there  either algorithm will find it "], ["91.53", "and in fact  there are a number of different solutions "], ["93.93", "so here's one "], ["96.19", "it's got four legs "], ["98.69", "here's another "], ["100.94", "it's got four legs "], ["102.34", "and in fact  there are a bunch of them with four legs "], ["104.06", "here's another one with four legs "], ["108.08", "we're minimizing the total number of edges along a path "], ["111.75", "when we take weights into account  for example the cost of the flight  then"], ["115.61", "things are little bit different "], ["117.18", "and in fact in this graph  one could actually run an algorithm to show that"], ["120.88", "the best solution is this one  which has a cost of $300 plus $200 plus $150"], ["130.139", "plus $130  which is 5  6  $780 "], ["134.77", "and you can explore this for yourself to discover that any other path"], ["137.7", "through this graph  in fact  has a higher cost "], ["141.22", "so sometimes we want to solve minimal problems or optimization problems with"], ["145.1", "weighted edges "], ["145.84", "sometimes it's just the total number of edges "], ["148.56", "all right  with that in mind  why are we doing graph optimization "], ["153.3", "well  as we said  we have lots of problems that are naturally expressed"], ["156.95", "as a set of transitions between a state of a system "], ["160.06", "and those often can be easily solved as a graph search "], ["164.22", "simple examples would be ones where the actual structure the problem is"], ["167.3", "itself a graph "], ["168.32", "travel through a physical network  whether it's a flight network or"], ["171.61", "whether it's actually something like using your gps to find driving routes"], ["175.95", "from one location to another "], ["177.99", "in those cases  the nodes naturally correspond to physical locations  like"], ["182.1", "hubs or intersections "], ["183.96", "and the edges naturally correspond to physical structures "], ["187.17", "flight paths  roads "], ["189.31", "but there are other problems are also well described as graphs "], ["192.69", "imagine you're trying to program a robot to accomplish some task "], ["195.84", "here  the nodes may be the state of the system "], ["198.9", "the locations of pieces or the location of the robot "], ["201.87", "and the edges are actions that that robot should take to change the state"], ["206.165", "of the system "], ["207.06", "again  well solved as a graph problem "], ["209.53", "and indeed  that leads to a more general sequence  or"], ["212.23", "collection of problems "], ["213.88", "those are problems where a physical system is being handled or"], ["218.23", "manipulated "], ["218.95", "and here  the nodes are descriptions of the state of the system "], ["223.13", "parameters that describe the position or state of the system "], ["226.14", "and the edges are actions that will move  or transitions if you like  that"], ["229.99", "will move the physical system from one state to another "], ["233.64", "and again those are well solved by graph optimization problems "], ["238.57", "and that says  basically  what we've shown you are two very handy tools for"], ["242.43", "doing depth first and breadth first search  to find a sequence of"], ["245.96", "transitions that transforms a system to a desired goal state "], ["250.35", "these methods can find optimal solutions to a wide range of problems"], ["254.37", "that are described in this matter  and they're going to be really valuable as"], ["257.6", "you use these tools to solve problems of interest to you "]], "-gLoe0n1CEQ": [["0.24", "let's visualize what this idea of checking if something is"], ["2.68", "a palindrome does "], ["4.035", "the basic idea is to check the first and last letter to see"], ["7.11", "if they're the same "], ["8.26", "and then if they are  to check the remaining middle portion to see if"], ["11.59", "it's a palindrome "], ["13.01", "so here's ablewasiereisawelba  all reduced down just"], ["16.05", "to lowercase letters "], ["17.1", "and so at the first step  we check to see are the two end cases the same "], ["20.96", "they are  and that reduces to checking a smaller thing "], ["24.36", "again  we check to see if the first and last character are the same  they"], ["27.27", "are  and that reduces to checking a smaller thing "], ["30.14", "and at each stage  we keep checking the end characters "], ["33.17", "in this case they are all the same  and we keep reducing to smaller and"], ["36.19", "smaller versions of the same problem "]], "iw4BEqvvgiw": [["0.94", "eric grimson  we started this lecture by arguing that finding efficient"], ["5.13", "algorithms on our own can be hard and we want  if we can  reduce problems to"], ["8.97", "things that somebody else has developed that are efficient "], ["12.16", "and we've just seen a nice example of that  because what we've just seen is"], ["15.33", "that if we combine the idea of binary search with the idea of a divide and"], ["19.61", "conquer for doing merge sort  that that actually gives us a very"], ["23.66", "efficient searching algorithm "], ["26.09", "in this case in particular  if we want to search a list k times then the"], ["29.68", "efficiency is n*log n) in order to do the sorting  plus k*log n) in order to"], ["37.02", "do the search k times "], ["38.45", "and that  remember  we're comparing against something that is k * n "], ["44.86", "and so that says boy  we're likely to be doing much better "], ["49.73", "and if n is of any reasonable size  then the n*log n) times k*log n) is"], ["54.93", "likely to be much smaller than just k * n "], ["58.49", "this still leaves the question of can we do better "], ["60.89", "this is cool  but can we actually do better "], ["63.93", "and the answer is yes  and here we're just going to briefly highlight it "], ["66.87", "we're not going to talk a lot about this  but we want to point it out "], ["69.58", "because  in fact  python comes with a data structure that supports very"], ["74.57", "efficient searching  and that's the dictionary "], ["77.27", "you may have wondered about this  because dictionaries are arbitrary"], ["79.72", "collections of objects  and yet we can get things out very quickly from them "], ["82.98", "and the reason we can is that dictionaries use"], ["84.81", "something called hashing "], ["86.335", "and a hash function is something that says that we can do a look-up in an"], ["90.22", "amount of time that's almost independent of the size of the"], ["93.24", "dictionary "], ["94.23", "almost "], ["95.36", "but for most purposes  we can really think of it as saying we can do"], ["99.14", "something that is really efficient  independent of the size of the"], ["102.917", "dictionary "], ["104.17", "so let's just briefly talk then about what's hashing "], ["106.8", "the idea of hashing is the following "], ["109.44", "given a key  that key into an element of a dictionary  for example "], ["114.05", "a hash function converts that key into an integer and it then uses this"], ["118.65", "integer to index into a list "], ["121.33", "that can  of course  be done in constant time "], ["123.992", "all right  so it says basically when i've got a dictionary i'm using that "], ["128.37", "if you like  sort of notion of indirection in a more complicated way "], ["131.49", "the elements are stored in a list "], ["133.63", "but to figure out where in the list to put them  i'm going to use this hash"], ["137.01", "function to say given the key  here's the location to go to "], ["140.472", "now conversion's done with this thing we call the hash function "], ["143.46", "and the idea of a hash function is it's going to map a large space of"], ["146.87", "inputs to a much smaller space of outputs "], ["150.97", "because it's doing this  it could in principle be a many-to-one mapping "], ["154.24", "what that means is it says ideally we'd like each input  each key  to go"], ["158.35", "to a unique place in the output space into the list "], ["161.88", "but it's possible that two different keys could go to the same"], ["166", "location in the list "], ["167.34", "when we do  we've got what we call a collision there "], ["169.49", "and there we're going to have to store  in fact  a little smaller"], ["172.11", "sub-list with each of those elements there together with their key "], ["175.69", "so that when i do the hashing  i will go to that location in the list  pull"], ["179.41", "out that sub-list  and do the search "], ["182.1", "now again  if i make the size of the hash table huge i can reduce the"], ["187.12", "number of collisions  but of course  that chews up a lot of space "], ["190.49", "if i'm not clever about the hash function  i could have everything go"], ["193.65", "to one space in the hash table "], ["196.14", "in which case i'll have the entire set of things there in the list and i've"], ["199.69", "lost because i still have linear search "], ["201.75", "so what it comes down to is  and this is sometimes hard to do  we'd like to"], ["204.98", "have a really good hash function "], ["207.07", "and a really good hash function has a uniform distribution  it minimizes"], ["210.85", "the probability of a collision "], ["214.04", "with that idea that i'm going to hash by computing some function on the key"], ["218.91", "that's going to tell me where on the list to go to "], ["220.73", "and i've got to make the list large enough that i can store most of the"], ["224.62", "elements in there  but not too large "], ["226.52", "one of the questions is  just sort of intuitively  how good is hashing "], ["231.25", "well  if there are no collisions  then this is o 1) "], ["234.64", "now  that also assumes that the computation of the hash function can"], ["237.76", "be done very efficiently  but let's assume that "], ["240.08", "it basically says given an element  a key  i do the computation  i go"], ["244.09", "straight to that point in the list  i pull it out "], ["246.28", "and if there are no collisions  only that element's at that location in the"], ["249.61", "list  i'm in great shape "], ["252.16", "flip it  of course  is if everything is hashed to the same"], ["254.17", "bucket  then i'm stuck "], ["255.62", "because now i've got o n) because i've got to then search through that list"], ["259.11", "linearly to find the element i'm looking for "], ["261.95", "but in general  i could get something you could see could be very efficient "], ["266.2", "i can trade off space "], ["267.29", "how much memory do i use to make the hash table large "], ["270.73", "and then if i've got a good function  i can get close to uniform"], ["274", "distribution which reduces the complexity to something close to o 1) "], ["279.006", "if in fact my hash table's big enough that it's likely that only one element"], ["284", "gets hashed in a location  i'm at o 1) "], ["286.82", "even if it's not quite that  it's still pretty close because i'm not"], ["289.87", "searching through a huge list there  i'm looking at one or two"], ["292.52", "elements to find them "], ["293.565", "and so in fact what this says is there are even more efficient"], ["296.88", "ways of doing search "], ["299.41", "it relies on finding really good hash functions "], ["301.79", "python does that for dictionaries "], ["303.99", "and what we'll see as we move through the term is that there are other"], ["307.43", "places in which we can use this idea of hashing to give us even better"], ["310.87", "complexity "], ["312.15", "but nonetheless  the point of this was to say if i can take key ideas  binary"], ["317.18", "search  divide and conquer  i can use those ideas to create very efficient"], ["322.34", "algorithms  and in this case we did it for searching "], ["325.17", "and the second thing we've seen is that while the complexity of a single"], ["329.03", "use of a procedure may be more than we'd like  we can sometimes"], ["332.94", "amortize the cost "], ["334.09", "say  if we're going to search multiple times through something  the cost to"], ["337.54", "do the sort is actually worthwhile because it gets made up by the"], ["341.43", "improvement in efficiency of actually doing a search "], ["344.59", "and we'll see those ideas as we move through the term "]], "jJqP3ZUSy5E": [["1.86", "now that we've introduced the idea of a function definition  i want to spend"], ["5.04", "a little bit of time giving you a mechanical way of thinking about how"], ["8.77", "function implications work and in particular how the right kinds of"], ["12.25", "values get stored in the right places "], ["14.67", "so we're going to use the idea of what's often called an environment to"], ["17.23", "understand how bindings of variables take place "], ["20.6", "and here's the basic idea behind an environment "], ["23.88", "it's going to be a formalism for tracking the bindings of"], ["26.47", "variables and values "], ["27.81", "and it will in fact apply to general bindings of assignment statements as"], ["31.2", "well as more broadly to when we do function calls "], ["33.85", "so indeed  whenever we do an assignment statement  that simply"], ["38.09", "pairs a name and the value of the other expression together in a table "], ["43.18", "if you want to think of it that way  that we call an environment "], ["46.95", "if we want to get the value of a name  invoking that value or that name"], ["50.82", "rather  just asking for the value of that name simply goes to the table "], ["53.72", "and looks up the value  and returns it "], ["58.41", "generally when we're talking to a python shell  there is an environment "], ["62.22", "it's often called the default or global environment "], ["64.629", "and it contains the bindings of all the expressions that we put in as we"], ["68.29", "deal with it "], ["69.69", "and then  the key piece of this is when we evaluate a definition  it"], ["75.69", "pairs the name of the function with the details of the function without"], ["80.19", "actually evaluating those details "], ["81.91", "it creates a pairing up the name to what we call a procedure object "], ["86.65", "let me show you a graphical way of thinking about this "], ["90.52", "here's a little bit of a description that we're using "], ["94.69", "i have evaluated two expressions "], ["97.66", "i've evaluated an expression that binds x to 5 and that binds p to 3 "], ["102.4", "and over here  i have my global environment "], ["107.59", "this is the environment to which the python shell is talking "], ["111.22", "and in fact  when i evaluate these assignment statements  they create"], ["114.1", "bindings of names to values "], ["116.39", "x is bound to 5 "], ["118.13", "p is bound to 3 "], ["119.47", "i've also bound result down here "], ["121.29", "bound to 1 over in that environment "], ["125.36", "that gives me variable names and values as associations "], ["130.834", "and now imagine i want to run a little piece of code  this"], ["133.59", "little for loop here "], ["134.87", "i'm not going to worry too much about the details "], ["136.43", "we'll come back to it "], ["137.07", "but basically  this four-loop is going to run using an iterating variable"], ["141.74", "turn over the range from 0 up to p minus 1  which we know is going to be"], ["145.93", "0  1  and 2 "], ["147.39", "it's got a print statement in there "], ["148.93", "but it's also got an expression down here "], ["151.75", "and here's what will happen if i evaluate that "], ["154.35", "we know what should happen "], ["155.28", "but in terms of the environment  when i want to evaluate this expression  it"], ["158.93", "says get the value of result by looking it up over here in the"], ["163.33", "environment "], ["164.3", "get the value of x by looking it up here in the environment "], ["167.58", "multiplying them together  and then rebind result to that value "], ["173.43", "that was when term was equal to 0 "], ["175.31", "having done that  we go back and we say turn equal to 1 "], ["178.7", "and we do the same thing "], ["179.54", "we get the value of result "], ["180.81", "we get the value of x by looking them up in this environment here  doing the"], ["185.17", "computation  and rebinding result to 25 "], ["190", "turn goes up one more "], ["191.555", "that's equal to 2 "], ["193.02", "it's going to be the last one "], ["194.62", "and we again  do the same kind of computation  getting result  x"], ["198.07", "multiplying together and rebinding result "], ["202.08", "so my rules  now  are just amplified a little bit "], ["204.2", "i'm actually just keeping track in this environment of the bindings of"], ["208.04", "variables  looking them up when i need them  and re-changing them with"], ["211.31", "assignment statements when i have to "], ["213.69", "so after i've executed all of this  my environment would look like this "], ["217.39", "so that if in fact i said to python  what's the value of result  it would"], ["221.65", "look it up in that environment and return the value "], ["227.09", "so this computation does what i expected it would do "], ["229.76", "but we can see how this idea of an environment gives us a little bit more"], ["232.54", "formalism for thinking about what happens as we do those evaluations "], ["236.55", "now  let's see what happens when we create a procedure object "], ["242.97", "i'm going to bind  in this case  x to 5 and y to 3 "], ["246.58", "and there are my bindings right there for it "], ["248.82", "and when i give the python shell a definition  whether i load it in from"], ["253.19", "a file or i type it in  it is going to associate with the name in the"], ["257.79", "environment  what we call a procedure object "], ["261.05", "so it's got an identifier that says this is a procedure "], ["263.99", "and inside of it  it has the parameter list "], ["267.16", "and it has the body of the procedure "], ["270.46", "and notice the form which is important "], ["272.79", "it doesn't have substitutions for x and y here "], ["275.53", "it has them as variable names "], ["278.22", "that means that this procedure here can be used multiple times "], ["283.26", "and that's great "], ["285.88", "i've now captured that computation "], ["288.3", "i can refer to it by name because that name's available in that environment "], ["292.41", "and i ought to be able to use it "], ["294.71", "great "], ["295.18", "so that procedure object is something that sits available to me  but again"], ["300.39", "has not been evaluated "], ["301.52", "we don't have substitutions for x and y there "], ["304.42", "there is variable names "], ["305.68", "and the last piece is this little thing here we call"], ["308.42", "an environment pointer "], ["311.68", "and it  from the procedure object  points back to the environment in"], ["315.76", "which that procedure was defined "], ["318.37", "and we're going to see why we want that "], ["319.94", "but it basically tells us the context relative to which i want to evaluate"], ["326.82", "my procedure objects "], ["328.39", "so this arrow points to the binding "], ["331.4", "this arrow is an environment pointer that comes back "], ["335.71", "here's what happens when i actually call a function "], ["340.21", "if i want to evaluate some expression followed with  in parentheses  some"], ["345.92", "other number of expressions  which would be what a function call would"], ["349.1", "look like  i first evaluate this expression  which is a name "], ["353.71", "and that says i'm going to just look it up in the environment "], ["357.48", "and i will get back the value which is that procedure object "], ["360.84", "i then evaluate all of these other expressions to get the values of the"], ["365.22", "parameters "], ["366.83", "then i bind those parameter names in the procedure object to the values of"], ["373.16", "the arguments that has passed in "], ["375.85", "and i do that in a new frame  which has  as a parent  the environment in"], ["380.96", "which the procedure was defined "], ["383.51", "that's going to create a new context "], ["385.87", "it's going to look just like an environment "], ["386.97", "it's going to have names  in this case the parameters  with values"], ["390.51", "associated with them "], ["391.84", "and relative to that environment  i'm going to evaluate"], ["394.73", "the body of the function "], ["397.47", "and that's going to do just exactly the same rules "], ["399.9", "so i evaluate the body of the procedure relative to this new frame "], ["404.85", "so for example  if i were to now call max of 3 and 4  right there i'm going"], ["410.38", "to bind the value of that to z when i'm done "], ["413.94", "what do i do "], ["414.82", "i first get the value of max "], ["416.94", "it's right there "], ["417.74", "and it is pointing to that object "], ["420.7", "i get the values of 3 and 4 "], ["422.81", "those are easy "], ["423.42", "they're just numbers "], ["424.59", "and then i bind the parameters of the procedure in a new frame "], ["430.32", "i'm calling this one e2 for environment two "], ["432.74", "i bind them to the values that i just got "], ["437.05", "and then relative to e2  i'm going to evaluate this body "], ["442.73", "that's great "], ["443.87", "because now what do i have "], ["445.25", "i have a way of saying if x is greater than y  and where do i get the x "], ["449.13", "it's right there "], ["450.085", "it's relative to this frame "], ["451.31", "so i only see that value of x "], ["453.13", "i only see that value of y "], ["455.14", "i don't get confused by things up here in the global frame "], ["458.18", "because i've created a new environment right there "], ["462.04", "and relative to that environment  i evaluate the body of the procedure "], ["465.68", "now you can see  this encapsulation is going to protect the interior details"], ["471.23", "so that it doesn't matter  in fact  what names i use for the parameters"], ["475.25", "here  or whether they have bindings elsewhere  because they're not going"], ["478.9", "to get seen by python "], ["480", "it's going to use the local context  and  in this case  return the max of"], ["483.765", "these  which is the value 4 "], ["486.6", "mechanistic "], ["487.25", "yes "], ["488.52", "a little bit boring "], ["489.42", "yes "], ["490.25", "but really valuable for understanding exactly how the computation keeps"], ["494.68", "track of what values to use  what variable names to use  and how to use"], ["499.07", "the steps to do the computation we just captured inside"], ["501.86", "that procedure object "]], "jL4wZ8-RjTs": [["0.41", "in this ninth lecture  we're going to look at search algorithms "], ["4.93", "many computational problems involve searching to find items in collections"], ["9.03", "of data objects "], ["11.27", "we will generalize the idea of bisection search to more generic"], ["15.43", "binary search  where we use information to reduce the search space"], ["19.5", "in half at each step "], ["21.79", "we'll show that if the data is sorted  this is a very"], ["24.88", "efficient way to find objects "], ["27.69", "but if the data is not sorted then we have to find ways to"], ["31.13", "transform the data set "], ["32.77", "and we'll look at two different sorting algorithms "], ["36.58", "finally  we'll show that if we're going to execute multiple searches of"], ["40.49", "a data set then the combination of sorting and binary search is a very"], ["45.56", "powerful method "]], "Zoy7t4LbAPY": [["0.04", "professor  we've been looking at the idea of exhaustive search "], ["3.06", "and we just saw  when we want to do this on things that don't have a"], ["5.66", "finite number of choices  real value to floating point numbers  for"], ["8.9", "example  we've got a problem "], ["11.41", "we need to make the step size small in terms of how many"], ["14.12", "different things we sample "], ["15.19", "but as we keep making it smaller  it's going to make the search take longer"], ["18.15", "and longer "], ["18.945", "because if we're going to do it  we're going to put a lot of effort into"], ["20.72", "trying to find the right answer "], ["21.88", "so we'd really like to have a way of having things still be very efficient "], ["27.2", "yet  find the answer we want "], ["29.09", "and it turns out  for a lot of problems  we can do that using a"], ["31.47", "wonderful idea called bisection search "], ["34.63", "so what do we know "], ["35.31", "let's go back to the idea of trying to find the square root "], ["37.33", "we know that the square root of x lies somewhere between 0 and x "], ["40.87", "we're assuming x is positive just to make life a little easier for us "], ["44.82", "that's a mathematical fact "], ["46.85", "now  what we did was we said let's start with 0 "], ["49.94", "then  0 plus a little bit "], ["51.04", "then  0 plus 2 times a little bit  and then 0 times 3 times a little bit "], ["55.04", "trying all of those examples  until we got to something that was close enough"], ["58.46", "to the answer we wanted "], ["60.42", "that's exhaustive "], ["61.84", "rather than doing that  suppose instead we say  look  we know that the"], ["65.47", "square root of x is somewhere between 0 and x "], ["67.66", "so let's just pick a guess right here in the middle "], ["71.22", "let's call that g "], ["72.46", "let's just pick the midpoint between 0 and x and try it "], ["76.415", "now  if we're lucky  the answer is close enough and then we're done "], ["80.82", "that's unlikely "], ["82.21", "but even if that is not the case  we have a good situation "], ["85.96", "even if we're not close enough  we can now ask was that guess g"], ["89.91", "too big or too small "], ["92.51", "well  if g^2 is bigger than x  then we know that it's too big "], ["98.62", "we know that the square root has to lie somewhere between 0 and g "], ["104.11", "and that says we can now instantly just focus on this portion "], ["110.44", "doing that  we can  again  take the midpoint of that "], ["112.945", "let's call it another version of g "], ["114.48", "a new g "], ["115.38", "and again  we can say  is that close enough "], ["118.23", "if not  is it too big or too small "], ["121.15", "for example  in this case let's assume that g^2 is less than x "], ["125.09", "that says g is too small  and what does that say "], ["128.22", "it says  we know that the actual value has to lie somewhere between my new g"], ["134.655", "and the previous g that i guessed "], ["136.61", "and again  we can pick the midpoint and guess again "], ["140.87", "if this works  and it does  this is really cool "], ["144.2", "because it says  at each stage of this bisection search i'm cutting in half"], ["150.99", "the size of the range of values i have to look at "], ["153.48", "we're bisecting them  which is why it's called that "], ["155.58", "at each stage we reduce the range of values that we have to search by half "], ["159.66", "and that is going to be really powerful "], ["161.25", "rather than just at each stage throwing away a little bit  we're"], ["164.02", "cutting down the problem  a big portion  each time through "], ["168.26", "so can we capture that idea "], ["170.835", "the answer is  sure  and it's not that hard to do "], ["174.81", "again  there's some code "], ["176.31", "it looks a little bit daunting  but it's really not as bad as you think "], ["180.01", "what does it say "], ["181.41", "it says  i'm going to have some value of x i'm going to start with "], ["183.95", "ok  i'm going to pick an epsilon which is going to tell me how close i am "], ["186.69", "and i'm going to keep track of how many guesses i did as well "], ["189.92", "i'm going to set up  initially  a low and high value  which are to start"], ["194.18", "with 0 and the value of x "], ["196.02", "that's my range where which i want to be trying to do the computation "], ["201", "my answer is initially going to be the midpoint halfway between low and high "], ["207.09", "and then  what do i do "], ["208.07", "i run through one of these little loops where  again  i basically say "], ["212.67", "am i close enough "], ["215.72", "if this is true  then i'm too far apart "], ["221.44", "i'm not close enough "], ["223.33", "and in that case  well  i'll print out some information that tells me where i"], ["226.64", "currently am "], ["227.3", "i'll change the number of guesses and i'm about to make a new guess "], ["230.1", "and if i'm not close enough  what does it say to do "], ["232.11", "it says  if my current answer squared is less than x  i'm too small  and i'm"], ["237.63", "going to change the lower end to be that guess "], ["241.33", "i'm moving up the lower end "], ["243.53", "on the other hand  if answered squared is bigger than x  then i'm too high"], ["247.92", "and i'm going to reduce the high down to the answer "], ["255.2", "and i'm just going to keep doing that "], ["256.64", "if i keep doing that i'm going to keep chunking this thing in half  and"], ["260.67", "having done either of those two pieces i then change my"], ["263.88", "answer to gain the midpoint "], ["266.33", "and i do this one more time "], ["268.39", "so i'll just keep cycling through this  cutting in half each time  the"], ["272.07", "size of the problem until i get to something that's close enough "], ["275.42", "we hope "], ["276.93", "ok  let's see what happens if we do it "], ["279.79", "here's some code in my idle system that has it "], ["284.04", "it has exactly that "], ["285.49", "let's do this  basically  let's start with something simple which we said"], ["290.26", "was going to be 25 "], ["292.33", "and let's see what happens if we evaluate that "], ["296.87", "oh  look what happens "], ["298.14", "i start off  and let's look at that  i start off with a range"], ["301.13", "between 0 and 25 "], ["302.87", "and the answers is the midpoint "], ["305.16", "i then  cut down the high end "], ["307.76", "i then  cut down the high end again "], ["310.07", "i then  cut down the low end "], ["312.05", "i then  cut down the low end "], ["313.4", "and you can see at each stage it's reducing the range "], ["316.2", "and after only 13 guesses i get a pretty good guess for what the square"], ["320.78", "root of 25 is "], ["322.12", "it's not exact "], ["322.725", "i happen to know it's 5  but in only 13 guesses i got it "], ["325.81", "remember  last time we did 50 000 guesses to get to something that"], ["328.63", "wasn't  in fact  much better "], ["330.11", "in fact  it wasn't even as good as this guess "], ["332.83", "so notice how it's cutting down the problem at each stage "], ["336.33", "all right  let's go try this other version of this  right "], ["339.67", "12345 "], ["341.44", "let's see what happens if we find  using by section first  the square"], ["345.885", "root of that "], ["348.02", "we see it cranking along "], ["349.54", "wow  in 26 steps  it got to something that took a million steps the last"], ["356.07", "time around "], ["356.715", "in 26 steps it gets to a pretty good approximation "], ["359.956", "let's try something even bigger "], ["363.11", "let's see what happens if we do that one "], ["366.42", "all right "], ["369.6", "again  you can see if you look at these numbers how quickly"], ["371.88", "it's zeroing in "], ["372.93", "in only 36 steps  it got to the square root of a pretty big number "], ["378.02", "so in fact  this does it really well "], ["380.6", "what can we observe out of this "], ["383.19", "well  here are some things that we see "], ["384.56", "first of all  bisection search radically reduces"], ["387.25", "the computation time "], ["388.69", "and this is part of that original message that it's not just having a"], ["391.69", "fast computer "], ["392.45", "it's being smart about how we think about solving the problem "], ["395.68", "and in this case  being smart about how we generate the guess is going to"], ["398.47", "be really important "], ["400.25", "so when does this idea of bisection search work "], ["402.82", "well  it should work well on problems where there's a"], ["405.07", "sort of ordering property "], ["406.87", "meaning  that the value of the function being solved varies"], ["410.14", "monotonically with the input value "], ["412.51", "another way of saying it is here the value i'm looking for is g**2 "], ["415.89", "then  it grows as g grows "], ["417.83", "and that says that there's this nice ordering of the solutions or the"], ["421.55", "potential solutions  and so picking a midpoint gives me a good way of"], ["425.19", "cutting the problem in half at each stage "], ["428.03", "we're going to come back to this idea of bisection search"], ["430.26", "throughout the term "], ["431.16", "it's a really powerful tool  but you can already see how dramatically it"], ["434.95", "reduces the computational cost "]], "zhKN60gDjk8": [["0.41", "so far we've been building up our repertoire of python"], ["3.56", "expressions "], ["4.32", "we've seen numbers and strings as primitive data objects "], ["7.29", "we've seen assignment  the ability to"], ["8.88", "give a name to a value "], ["10.1", "we've seen input and output characteristics "], ["12.4", "we've seen the ability to make comparisons  and we've added"], ["14.93", "in looping constructs "], ["16.149", "things like for and while loops "], ["17.96", "with that set of tools  they turn out to be sufficient to"], ["20.98", "give us what we call a turing complete language "], ["24.51", "and what does that mean "], ["25.5", "it says just with that set of tools  anything that's"], ["28.11", "computable  we can compute "], ["29.87", "so we can compute anything "], ["32.05", "that's actually amazing "], ["33.81", "with just that set of tools  anything that's computable  we"], ["36.75", "can capture with a description using those sets of tools "], ["40.28", "sounds like we're done "], ["41.87", "and of course we're not  and part of the reason we're not"], ["44.11", "is the code we're able to write so far  those scripts"], ["47.23", "that we've done lack what we call abstraction "], ["50.61", "and let me give you some reasons of what i mean by"], ["52.09", "that  and then what the definition of abstraction is "], ["54.59", "for example  as you saw before  every time i want to"], ["57.25", "use a script  i've got to reload the file "], ["60.23", "and if i want to do it with some different parameters "], ["62.32", "i've got to change the values of variables"], ["64.319", "before i run that file "], ["66.16", "moreover  or more importantly  i can't use the same variable"], ["69.74", "names other places in the code "], ["71.37", "if i've got a piece of code this using x  y  and z  i've"], ["74.1", "got to make sure that they're not accidentally getting"], ["76.72", "changed somewhere else "], ["77.83", "so i'm stuck with having to be very careful"], ["80.36", "about the use of names "], ["82.03", "and finally  imagine i've got a piece of code that's"], ["84.49", "computing the maximum of two numbers "], ["86.56", "i might want to use that many places "], ["88.6", "i'm going to have to copy it throughout the code "], ["91.18", "doesn't sound too bad  except it gets very quickly"], ["93.84", "cumbersome to be able to maintain that code "], ["96.26", "suppose i change my mind about the actual details of how i do"], ["99.44", "that computation "], ["100.72", "i've got to then search through the code and find all"], ["102.96", "the places where i was doing that  and make that change "], ["106.46", "otherwise i'm going to mess up "], ["108.22", "so i lack abstraction  and what we're going to do is add"], ["111.19", "the idea of a function "], ["112.36", "a function is going to give us a way to capture a"], ["115.05", "computation  to wrap it up in a package and then treat that"], ["118.78", "function as if it were a primitive "], ["120.71", "something provided to us by python that we can just use "], ["124.73", "let's look at that "], ["126", "here's a very simple example  just to get us started "], ["128.139", "suppose that we want to take two numbers whose names  or"], ["131.56", "variable names are x and y  and we want to compute the"], ["134.27", "maximum and bind that to the name z "], ["136.96", "here's a very simple script that would do it "], ["138.72", "assuming i've got values for x and y  i just do the"], ["141.05", "comparison "], ["142", "if x is greater than y  i bind z to x "], ["144.89", "so there's a binding there  and if not i bind z to y "], ["148.22", "but as i already said  notice the problem here "], ["150.42", "i'm going to have to copy this everywhere that"], ["153.28", "i want to use it "], ["154.35", "that's going to be a real pain "], ["156.04", "and i can't reuse x and y  because if i did  i might"], ["160.4", "actually change the values here  and that's"], ["161.92", "going to be a problem "], ["162.96", "so i want to capture this "], ["164.1", "i keep using that word capture  let's"], ["165.59", "see what that means "], ["166.8", "the idea is that we want to wrap up that computation  that"], ["170.13", "set of mechanical steps  that recipe within a particular"], ["174.02", "scope so that we can treat that function  that"], ["177.16", "computation as if it were a primitive "], ["179.11", "then i could just use it by simply calling its name  using"], ["182.41", "the name  and i'll get back that procedure object  and"], ["185.13", "giving some input into that function "], ["187.68", "we'll see how to do that in a second "], ["189.54", "but a key thing by doing this is that the internal details "], ["192.53", "the steps inside of the computation are going to be"], ["195.15", "hidden from the users "], ["196.54", "they won't know what they actually are  they're going to"], ["198.2", "just treat this like what we call a black box "], ["201.14", "something that we can use that satisfies a particular"], ["203.91", "contract  but we don't need to know the details inside "], ["206.4", "and more importantly  what happens inside won't have any"], ["209.37", "effect on computations outside the scope of this function "], ["213.67", "what does it look like "], ["214.96", "well  here's the syntax for a definition of a function "], ["218.57", "it's got  let me in fact give you the next"], ["220.73", "pieces of it here "], ["221.46", "it's got a keyword  def  that tells python i'm about to"], ["224.85", "create a definition of the procedure "], ["227.45", "it has a name for a function "], ["229.44", "and i've put that here in angle braces just to say it'll"], ["231.93", "be some particular instance "], ["233.66", "and the name can be any legal python name "], ["236.35", "and then within parentheses  we're going to have a sequence"], ["239.78", "of 0  1  or more formal"], ["241.9", "parameters  names for variables "], ["244.42", "and those names are going to be used in the function body "], ["246.935", "and then we have a colon here "], ["249.23", "that is followed by the body of the function  which is any"], ["252.56", "sequence of legal python expressions that's going to do"], ["255.75", "the actual computation "], ["257.16", "and what we'll see is that within that body  we're going"], ["259.55", "to use the names of the formal parameters to identify the"], ["263.51", "places where we want to use the values associated with"], ["266.39", "those parameters "], ["267.33", "so those very lanes are going to be used inside"], ["269.41", "the function body "], ["270.47", "and of course there's an indentation here just to help"], ["272.39", "us determine the scope  or the length of the function"], ["274.79", "procedure itself "], ["275.88", "that's the syntax "], ["277.5", "let's look at an example "], ["279.06", "well  let me go back to my idea of taking"], ["280.54", "the max of two numbers "], ["281.87", "here's a nice function definition "], ["284.12", "i say define  and there's the name  max "], ["287.53", "inside of the parens here i've got two formal parameters  x"], ["290.69", "and y  and then the body is simply a description of the"], ["294.67", "computations i want to do "], ["296.19", "and i'm going to compare x to y  and depending on the value "], ["299.03", "whether x is greater than y or not  i'm either going to"], ["301.56", "return the value of x  or return the value of y "], ["304.05", "we'll come back to return in a second  but let's just think"], ["306.05", "about how would we use this "], ["307.35", "so we invoke this  or we call it  as we say  by simply using"], ["312.02", "this sort of an expression "], ["313.09", "we say i want to bind z to  and there's the assignment"], ["316.7", "statement  the value that this function max gives me on these"], ["320.09", "arguments 3 and 4 "], ["321.63", "when we do that function call  when we invoke max of 3 and 4 "], ["326", "we literally get the values of these expressions "], ["328.76", "and those are easy "], ["329.28", "in this case they're just numbers "], ["330.6", "and given those values  we are going to locally bind x to the"], ["334.59", "value of 3  y to the value of 4  just as if they were like"], ["338.44", "assignment statements in a very particular scope "], ["340.85", "and then relative to those bindings  the body expressions"], ["344.9", "are going to be evaluated "], ["346.1", "and you can see  then  this is going to do exactly what i did"], ["348.1", "with my little script "], ["349.23", "so that's cool "], ["350.66", "now  what about the body "], ["352.99", "well  i said the body can be any legal python expressions "], ["356.31", "and in the process  if you like  when i invoke or call a"], ["359.25", "procedure definition  it's having bound the variable"], ["361.91", "names to the values "], ["363.23", "i will simply execute or evaluate each of the"], ["366.53", "expressions of the body in turn until one"], ["369.2", "of two things happens "], ["370.65", "either i run out of expressions  i get to the end"], ["372.76", "of the body  in which case a very special value called none"], ["376.59", "is returned  and that is the value of the computation "], ["379.21", "and if you think about my invocation  i said i was going"], ["381.4", "to bind z to some value "], ["383.64", "if i get to the end of the expression and there's nothing"], ["385.47", "returned  i'm going to just bind it to none "], ["388.59", "alternatively  i will keep executing instructions until i"], ["391.5", "hit that special keyword return that we saw earlier "], ["394.94", "and in that case  the expression immediately"], ["397.6", "following that keyword return is evaluated  and that value"], ["402", "is returned as the value of the function call "], ["404.19", "that value becomes  if you like  the semantic value of"], ["408.04", "calling that function "], ["409.31", "and that suggests if you look back at my code  i'm going to"], ["411.48", "be able to then in fact do the computation  and i'm going to"], ["414.63", "be able to reuse it multiple times to get"], ["416.54", "the max of two numbers "], ["418.57", "so  to summarize this then  the sequence of events are"], ["421.99", "when we call a function  the expressions for each parameter"], ["425.04", "are evaluated the normal way they would be in python "], ["427.62", "and they are bound to the formal parameter"], ["429.58", "names of the function "], ["430.7", "should be 1 expression for each parameter name "], ["432.94", "we then transfer control to the first expression in the"], ["435.84", "body of the procedure  in the body of the function  and we"], ["439.16", "start evaluating "], ["440.19", "and those expressions are evaluated or executed until"], ["443.6", "either that return keyword is reached  in which case we get"], ["446.9", "the value of the following expression and return it back "], ["449.75", "or we run out of expressions  thereby returning none "], ["452.86", "and after that  the implication is bound to the"], ["455.77", "return value  and as that return value is what is passed"], ["458.35", "out to whatever asks for it  and control transfers to the"], ["461.37", "next piece of code "], ["462.36", "in the next segment  we're going to look at some details"], ["464.2", "of understanding mechanically how this happens  but there's"], ["466.93", "the idea of a function definition "]], "e7IErqC25nU": [["0.435", "eric grimson  so we've now starting to see some"], ["2.78", "interesting examples of recursion "], ["5.03", "in the case of towers of hanoi we saw an example of where the"], ["7.43", "recursive call might involve multiple subproblems "], ["10.91", "in that case too "], ["12.7", "we also will see examples of recursion where it may have"], ["15.31", "multiple base cases "], ["16.8", "and let's look at another classic"], ["18.1", "example  fibonacci numbers "], ["20.48", "the history of this is several centuries ago leonardo of"], ["23.77", "pisa  also known as fibonacci  wanted to model how quickly"], ["27.39", "rabbits breed "], ["29.69", "and he built a model that's not completely realistic  but"], ["32.04", "still gives you an interesting process "], ["34.5", "and he described it as follows "], ["36.64", "he took a newborn  or he wanted to take  rather  a"], ["38.5", "newborn pair of rabbits  1 male  1 female  and"], ["40.75", "put them in a pen "], ["42.37", "he assumed that rabbits mate at age of 1 month  and that"], ["46.39", "the gestation period for a rabbit is also a month "], ["49.23", "so after 1 month rabbits can mate  a month later  the"], ["52.91", "female will produce offspring "], ["55.64", "and in particular  he assumed that the females will always"], ["59.59", "produce a new pair  1 male  1 female  every month from the"], ["63.91", "second month on "], ["65.209", "and finally he assumed that rabbits don't die "], ["67.05", "which is not true  but it's an interesting way to try and"], ["69.85", "deal with it "], ["70.84", "and the question was  how many female rabbits are there at"], ["73.99", "the end of 1 year  2 years  however many years "], ["77.51", "so  that was the model "], ["80.84", "here's how we can actually think about it"], ["83.23", "computationally "], ["84.73", "we want to know the number of females "], ["85.97", "so at the end of 1 month  let's call it"], ["87.82", "0  we've got 1 female "], ["89.64", "that's what we started with "], ["91.62", "after the second month  there's still 1 female  but"], ["94.74", "she's now pregnant "], ["96.46", "and at the third month  she's going to deliver "], ["99.91", "so  in fact  not only is there now that female  but there's a"], ["102.56", "second female "], ["103.73", "1 pregnant "], ["104.77", "1 not "], ["106.14", "and in general  we can figure out the formulation of the"], ["111.19", "recursive expression  if you like "], ["113.34", "because in general  every female alive at month n - 2 is"], ["118.03", "going to produce a female at month n "], ["120.69", "it takes 2 months for that to happen "], ["123.23", "those new females that are generated at month n  can be"], ["126.52", "added to those that were alive the previous month  because"], ["128.919", "those are the new females "], ["129.81", "so the total number of females at month n is the number that"], ["133.91", "were alive at month n - 2  because each one of them has"], ["136.24", "produced a new offspring  plus all the ones that were alive"], ["140.01", "at month n - 1 "], ["141.69", "and so you can see at month 0 there will be 1 "], ["143.715", "at month 1 there will be 1 "], ["146.01", "at month 2 "], ["147.1", "there will be 2 "], ["148.37", "at month 3 there will be 3 "], ["150.08", "and now you can see we're just adding to create the next one "], ["152.55", "at month 4 there will be 5 "], ["153.99", "at month 5 there will be 8 "], ["156.58", "and 13  and so on "], ["159.61", "ok "], ["160.04", "we don't really care whether this is a good model for"], ["162.24", "rabbits  although you can see why australia may be suffering"], ["164.67", "the problems it does when 24 rabbits were introduced into"], ["167.26", "their ecosystem "], ["168.91", "but let's think about just writing code to capture it "], ["172.96", "description is nice and easy "], ["174.75", "and notice here  fibonacci has 2 base cases "], ["178.29", "base case for the zeroth month "], ["180.2", "base case for the first month "], ["181.79", "that base case in both instances is 1 "], ["184.53", "and then the recursive case is what we just described "], ["188.69", "ok "], ["189.73", "and the code  nice and simple "], ["192.81", "i'm going to add 1 new thing here  which is this assert"], ["194.79", "statement right here "], ["196.1", "so let me spend a second on that "], ["198.07", "here's my definition for fibonacci "], ["200.14", "i've got a specification "], ["200.955", "it says assume that x is an integer and it's greater than"], ["203.95", "or equal to 0 "], ["205.04", "if that's the case  i'm going to return the"], ["207.6", "fibonacci number of x "], ["209.68", "assert is something that basically takes an expression "], ["213.57", "which is a boolean  and in this case  it's an expression"], ["216.53", "that has 2 subexpressions  both of which are booleans "], ["219.47", "and what assert does is it a checks to see is that"], ["222.14", "statement true "], ["223.3", "so here what you see we've been doing is we're saying "], ["225.26", "given x  let's make sure that it is  in fact  an int by"], ["227.96", "checking its type "], ["229.21", "and let's make sure that it satisfies the condition of"], ["231.94", "being greater than or equal to 0 "], ["233.64", "and if both of those are true  then the body of the procedure"], ["237.32", "will be evaluated "], ["239.04", "but if either of them is not  if the overall expression for"], ["241.4", "the assert is false  it's going to stop"], ["243.75", "and return an error "], ["246.25", "inside of fib  it's exactly what we'd expect "], ["248.5", "i've got two base cases "], ["249.69", "i happen to be checking them with just one boolean"], ["251.78", "combination "], ["253.09", "two base cases and a value to return and otherwise i'm"], ["255.75", "returning  just like in towers  a recursive call done"], ["260.079", "twice  i'm returning the sum of fib x) - 1  "], ["263.27", "and fib x) - 2 "], ["265.76", "ok  let's try running it "], ["268.38", "so i'm going to go over to idle "], ["270.3", "i have my version of fib "], ["272.58", "and let's check "], ["273.58", "let's check the base cases  fib 0) should be 1 "], ["277.06", "it is "], ["278.45", "fib 1) should be 1 "], ["281.18", "and then what did we also know "], ["282.6", "well  we said that fib 2) ought to be the"], ["284.51", "sum of those two "], ["285.53", "and it is "], ["286.69", "fib 3) ought to be the sum of the previous two "], ["289.21", "and it is "], ["290.28", "fib 4) ought to be the sum of the previous two "], ["292.51", "and it is "], ["292.95", "and you can see it's doing pretty well "], ["295.15", "and so  how many at month 12 "], ["298.06", "233 "], ["300.25", "gets bad fairly quickly "], ["302.28", "just to give an example of that  at 13 it jumps up "], ["305.82", "and if i go to something like say fib 15)   or fib 16)  "], ["311.92", "it's climbing pretty quickly "], ["314.01", "but there we are "], ["314.93", "we've got a way of computing fibonacci "], ["317.18", "great "]], "QgDq9EieZTg": [["1.19", "eric grimson  now  you may still be a little concerned "], ["4.22", "i've tried to show you that  using this environment model "], ["6.64", "we can see how the computation of a recursive function should"], ["9.64", "do the right thing  but you may still be"], ["11.54", "saying  wait a minute "], ["12.96", "does this really work "], ["13.99", "how do we know that our recursive code will work "], ["16.64", "and when i say will work  how do we know both that it's"], ["18.98", "actually going to stop  and how do we know that it"], ["21.2", "computes the value that we want it to "], ["23.79", "so i'd like to walk you through that a little bit just"], ["26.3", "to give you a sense of how we can reason about it "], ["28.95", "let's start with the iterative version "], ["31.98", "itermul we know terminates because b starts out initially"], ["36.43", "positive  and each time through the loop  it"], ["39.2", "decreases by 1 "], ["40.91", "and just by simple logic  if it starts out as a positive or"], ["43.7", "non-zero  non-negative value as an integer  and we keep"], ["47.07", "decreasing by one  at some point  it's going to get down"], ["49.67", "to 0  which was our test case  and it's going to stop "], ["52.84", "great "], ["54.12", "now  what about recursive mul "], ["57.82", "we can actually reason about it in a similar way "], ["60.37", "we know that recursive mul  if it's called with b as the"], ["63.66", "value of 1  stops  because there's no"], ["66.26", "additional work to do "], ["67.39", "the code simply said return a value "], ["69.34", "so we know it stops  and we also know it gives us back the"], ["71.7", "right value "], ["74.07", "what else do we know "], ["75.79", "well  we know from our code that if we call recursive mul"], ["78.6", "with an integer bigger than 1 as a value of b  it makes a"], ["83.39", "recursive call with a slightly smaller version "], ["85.75", "in fact  b - 1 "], ["87.61", "but by exactly the reasoning that we just used here  we can"], ["91", "apply the same argument to that call "], ["92.97", "it's going to make a recursive call with a"], ["94.56", "smaller version of b "], ["95.64", "and because b is reducing by 1 each time  it started a bigger"], ["99.63", "than 0  eventually we have to get to a place where it has a"], ["103.58", "recursive call with b = 1  which says we're going to get"], ["106.36", "back down to that case and we're going to stop "], ["109.3", "great "], ["110.15", "so we know it stops "], ["111.65", "how do we know it does the right thing "], ["113.6", "well  we're going to come to that "], ["115.15", "and to do that  i'm going to burrow with a little bit of a"], ["117.6", "side tour a tool for mathematics "], ["121.05", "because in fact  what we can do is we can use the idea of"], ["123.66", "mathematical induction to reason about code "], ["128.139", "what's mathematical induction  say "], ["129.8", "well  if you haven't seen it before  here's a simple"], ["131.85", "definition "], ["132.28", "if we want to prove a statement  a mathematical"], ["135.06", "statement that is indexed on the integers  that is  it's a"], ["138.36", "statement where one of the parameters is an integer  if"], ["141.47", "we want to show that that statement is true for all"], ["143.78", "values of n  here's how mathematical induction works "], ["147.95", "we're first going to prove that it's true for n's"], ["151.27", "smallest value  which will typically be when"], ["153.62", "n = 0 or n = 1 "], ["156.57", "and then we're going to prove that if that statement is true"], ["161.4", "for an arbitrary value of n  you can show that it must be"], ["164.71", "true when n is 1 bigger "], ["167.59", "if we can prove these things  we can prove it's correct for"], ["171.23", "small values  and we can prove that  given any value  it's"], ["175.99", "true for the next larger value "], ["178.26", "then induction says we can assume it is true for all"], ["181.11", "values of n "], ["182.48", "that's powerful  because it's a way of helping us deduce"], ["185.12", "that our code  if we can use it there  works all the time "], ["189.21", "this may sound a little funny  so let's look at a very simple"], ["191.17", "example from math "], ["192.96", "and here's the simple example "], ["194.49", "if i add up all the integers from 0  1  all the way up to"], ["197.84", "n  the claim is that that is equal to n * n + 1  all"], ["202.54", "divided by 2 "], ["204.11", "that's a little statement of fact from mathematics "], ["205.91", "but let's see how induction would actually"], ["207.79", "let us prove that "], ["209.42", "so if we wanted to prove it  what do we have to do "], ["211.9", "well  we've got to look at the base case  the simple case "], ["214.58", "if n = 0  what do we know "], ["216.85", "well  this left hand side of that equation is just 0  so"], ["221.13", "that's done "], ["222.12", "in the right hand side  i'll substitute n "], ["224.72", "if n = 0  that says 0 * 1 / 2  well that's 0  so"], ["229.42", "we know it's true "], ["230.9", "ok "], ["232.31", "the inductive step says that we need to now assume that"], ["239.62", "this statement is true for some value  let's call it k "], ["242.86", "and what we need to then show is that  as a consequence  we"], ["246.37", "can also established that it's true for k + 1 "], ["249.32", "so we're assuming it's true for smaller versions of the"], ["251.38", "problem  and we want to show it's for"], ["252.75", "the next larger version "], ["254.02", "if we can do that  then can prove it's"], ["257.019", "true for all values "], ["258.5", "so what do we need to do "], ["259.44", "we need to show that this is equal to that "], ["264.33", "ok  but this left hand side  that is just the same as"], ["267.63", "taking this part + k + 1 "], ["271.23", "and that part  we've assumed is true "], ["273.86", "that was part of our assumption "], ["274.85", "we said it's true for smaller versions "], ["276.24", "so we know why that one is given by this definition "], ["279.97", "so that is simply this plus that "], ["285.486", "ok "], ["286.29", "that's nice "], ["287.54", "and then  i can just do a little bit of algebra "], ["289.87", "i'm not going to do it here  but if i just do the additions"], ["291.83", "together  by a little bit of algebra  i can show that this"], ["295.56", "piece here becomes that piece "], ["297.95", "ah  and that's exactly what i wanted to prove  because this"], ["301.47", "is just that definition where n = k + 1 "], ["306.37", "what have i done "], ["307.74", "all right  so  i show it's true in the simple case  and"], ["310.24", "then i said  let's assume it's true for all"], ["312.55", "cases up to some size "], ["314.32", "given that i can prove it's true for the next larger case "], ["317.6", "by induction  i can assume that it is true for all sizes "], ["321.7", "great "], ["323.27", "what does that have to do with code "], ["327.41", "well  the same logic applies to code "], ["330.77", "there's my recursive mul  and let's look what we have "], ["334.96", "in the base case  we can show that recursive mul stops  if b"], ["339.6", "= 1  it just returns a value  and more importantly  it gives"], ["341.962", "us the right answer "], ["343.32", "it gives us back a "], ["343.96", "ok  a * 1 is just a "], ["346.7", "and then what do we know "], ["347.51", "in the recursive case  we can assume that recursive mul"], ["351.83", "correctly returns an answer for problems of size"], ["354.46", "smaller than b "], ["356.05", "and then what do we know "], ["357.31", "well  by this step right here  we know that this is not only"], ["361.42", "going to give us an answer  it's going to give us back the"], ["363.53", "correct answer for a * b - 1  and therefore  we can deduce"], ["368.85", "that this will return an answer because it's just doing"], ["371.48", "an addition  and giving us back the right answer "], ["374.46", "so it must give us back the correct answer for"], ["376.7", "problem size b "], ["377.86", "and therefore  by induction  we've just shown that this"], ["381.7", "code always stops and returns the correct answer "], ["384.44", "and when we say always stops  stops if we give it an"], ["386.43", "appropriate value for a and b "], ["388.67", "we're not going to do a lot of proofs throughout this course "], ["390.94", "but this is one nice way of seeing how thinking"], ["394.06", "recursively actually works very well "], ["396.28", "and we're guaranteed  if we do it properly  that it will give"], ["399.13", "us correct answers  and it will terminate "]], "J1zJNuEFw2U": [["2.73", "so we're going to do one last example in this sequence "], ["6.57", "we've been looking at approximation algorithms "], ["8.58", "we've been looking at guess and check  exhaustive"], ["11.14", "enumeration "], ["12.28", "we saw when we wanted to move to floating point  we needed"], ["14.5", "to be a little more clever  and that led us to the idea of"], ["16.95", "bisection as a smart way of reducing the computation at"], ["20.3", "each stage  especially when we have functions or problems"], ["23.72", "where there's a monotonic relationship between the value"], ["26.92", "we're looking for and the guesses we're making "], ["29.19", "there's one other  very powerful  algorithm for doing"], ["31.42", "approximations  due to sir isaac newton  often called the"], ["34.65", "newton-raphson algorithm because it was found at the"], ["37.99", "same time by newton and by raphson "], ["40.35", "here's the basic idea behind it "], ["42.75", "we want to find the root of a polynomial "], ["44.67", "i'll remind you a polynomial  p x)  is some sequence of"], ["48.54", "coefficients and powers  so it's a_n * x to the n-th power"], ["53.31", "+ a_n - 1 * x to the n minus first power and so on "], ["57.81", "it's just a sequence of numbers times powers of x  and"], ["61.8", "what we often want to do is find a value r such that p r)"], ["65.3", "is equal to 0 "], ["66.02", "we want to find the root  the place where  on that x-axis "], ["70.29", "that graph crosses 0 "], ["72.87", "now  that sounds like a lot of math "], ["73.92", "let's make it a little simpler "], ["74.93", "a simple way to think about this is if we want to define "], ["77.24", "for example  the square root of 24  we just need to find"], ["80.7", "the root of the polynomial x^2 - 24 "], ["84.24", "makes sense  if we combine the value of x such that x^2 - 24"], ["87.24", "is equal to 0  we're done because that's"], ["89.83", "the thing we want "], ["91.43", "now  what newton showed was that for things like"], ["95.04", "polynomials  if g is an approximation to the root  the"], ["99.18", "place where it's equal to 0  then g - p g) / p' g) is a"], ["108.58", "better approximation  where p' is just the derivative of p "], ["112.36", "and if you haven't done calculus "], ["113.82", "don't worry about it "], ["114.42", "we'll show you in a second what that means  but this is a"], ["116.82", "powerful tool "], ["117.6", "newton proved this  that given an approximation  g - p g) /"], ["123.64", "p' g) is a much better approximation "], ["127.2", "ok  so what does this have to do with things "], ["128.88", "well  let's look at an example  a really simple case "], ["131.86", "suppose our polynomial is just some coefficient c times x^2 +"], ["136.45", "k  then its first derivative is just 2cx "], ["140.93", "and in particular  if the polynomial is just something"], ["143.22", "simple  like x^2 + k  then the derivative is just 2x "], ["147.72", "why is that nice "], ["148.51", "well  newton-raphson says that given a guess g for the root "], ["151.82", "a better guess is just shown right here  is g - g^2 - k "], ["157.69", "all divided by 2g "], ["159.45", "and remember  we were using this form to find square"], ["162.68", "roots  because it says if k is the value of the square root i"], ["168.27", "want to find  then that's the polynomial i want to use "], ["171.01", "so this little formula says here's a better way of finding"], ["173.87", "a guess for the square root of k "], ["178.3", "all right  let's put that together "], ["181.27", "we can now have another way of generating guesses  which we"], ["184.23", "can check  which turns out to be very efficient  so here's"], ["187.4", "some code that would do it "], ["188.49", "again  i've got a little epsilon that tells me how"], ["190.96", "close i want to get "], ["192.2", "let's assume i'm looking for the square root of 24 "], ["194.37", "we'll try some other examples in a second "], ["196.63", "i'm going to give an initial guess  which"], ["198.19", "will just be y / 2 "], ["199.95", "it's not a very good guess  but it's"], ["201.14", "reasonable place to go "], ["202.71", "and look at the code "], ["204.11", "very crisp  very clean  very efficient "], ["207.38", "it basically says check to see am i close enough "], ["213.39", "is the difference between the guess^2 and y less than or"], ["216.866", "equal to the epsilon "], ["217.55", "if it's bigger than that  i'm not close enough "], ["220.11", "and then newton says get a new guess by taking the old value"], ["223.58", "of guess  taking guess^2 - 1  divide it by 2 * guess  which"], ["228.36", "is the derivative  and use that to create a"], ["230.82", "new binding for guess "], ["232.41", "you just keep updating "], ["233.62", "do that until i get close enough  and when i'm done "], ["236.05", "just print out the result "], ["238.36", "nice and crisp "], ["239.54", "what's this doing "], ["240.59", "it's generating guesses "], ["242.55", "there's the generation "], ["245.18", "but it's not doing it exhaustively "], ["246.72", "it's using this property of mathematics together  and then"], ["249.48", "it's testing  right here  to see if i'm done "], ["252.74", "so it's another example of a generate and test kind of"], ["255.06", "algorithm  and let's look at what happens if we run it "], ["258.31", "so in my idle  i've got just a version of that "], ["260.42", "i'm going to do it with 24 to start with "], ["262.28", "and if i evaluate this  it prints out its guesses  starts"], ["267.53", "with a value of 14  and then goes to 7  5 "], ["272.11", "and you see  in just 4 guesses  it gets"], ["275.18", "a pretty good answer "], ["276.69", "let's try a different example "], ["277.75", "let's try our good old example of 25 "], ["281.692", "again  if i evaluate that one  you'll see again  in basically"], ["287.28", "five steps because the first one was using 12 and a half "], ["290.55", "it gets to a quite good approximation of it "], ["293.6", "let's try something even bigger "], ["294.99", "i'll go back over here "], ["296.92", "let's do my example of 12345 and let's evaluate that "], ["302.67", "and if we do that "], ["304.43", "huh "], ["305.2", "what did it take me "], ["305.87", "1  2  3  4  5  6  7  8  9  in 10 steps  it got to a really"], ["311.08", "good solution "], ["312.49", "so this is what "], ["313.52", "this is another way of simply figuring out how to generate"], ["317.34", "good guesses and then testing them "], ["320.27", "so we've now seen several examples "], ["323.05", "we've got this idea of iterative algorithms "], ["324.83", "we're using the same piece of code over and over again "], ["327.57", "we're using that to build up this idea of a guess and check"], ["330.51", "method where we guess solutions and then check them "], ["333.96", "we use a looping construct to generate the guesses  and then"], ["336.82", "we just check and keep going "], ["338.77", "and what have we seen "], ["339.93", "we've seen we could do exhaustive enumeration  where"], ["342.24", "we just do a whole bunch of trials "], ["344.26", "we could cut down on the search in a clever way by"], ["346.9", "simply using bisection  bisecting the range of places"], ["350.21", "where we're looking for guesses until we get to"], ["352.2", "something close enough "], ["353.49", "or for the group finding case  which it turns out to be a"], ["355.93", "very general case  we can be really efficient by taking"], ["358.9", "advantage of a mathematical property to very quickly cut"], ["361.98", "down on where the solution lies "], ["364.24", "those are examples of iterative algorithms  and"], ["367.03", "they're examples  in particular  of guess and check"], ["369.25", "methods that turned out to be really powerful "], ["371.85", "and we're going to give you a chance to explore those as we"], ["374", "move through the class "]], "bckOwpozezo": [["1.04", "chris terman  our next example comes from the world of text formatting "], ["3.66", "where we're trying to position the words on a page to produce an"], ["7.4", "attractive and readable layout "], ["9.96", "two challenges here "], ["11.36", "first  we have to come up with a good metric for measuring the"], ["13.98", "goodness of a layout "], ["15.81", "and secondly  we want to structure the problem in such a way that there's a"], ["20.07", "good possibility of overlapping subproblems as we do our search "], ["25.45", "compare how we choose to structure the subproblems for the layout problem"], ["31.53", "versus how we did it for the 0/ 1 knapsack problem "], ["35.21", "i think you'll find there's a lot of similarities "], ["38.8", "our goal in this problem is to find the optimal layout of words in a"], ["42.77", "paragraph so as to make the result look the most pleasing "], ["47.21", "this over here is simply the operation of a greedy algorithm  where we take"], ["52.47", "the words as they come along  and we keep adding them to the line until we"], ["56.62", "run out of space and the next word would cause us to go beyond the"], ["59.93", "margin  so what we have to do is to start a new line "], ["62.96", "so this is the result of a simple greedy layout algorithm "], ["67.28", "people don't like this because of the large indentation here "], ["71.03", "and in fact  there are four spaces here at the end of this line "], ["74.79", "and that's considered to look ugly "], ["76.81", "they would much prefer a layout that looks like this  where the right"], ["80.47", "margin is kept as even as possible "], ["83.66", "in this case  that's achieved by having two spaces at"], ["86.13", "the end of each line "], ["88.45", "so this is what we would like to achieve if possible "], ["92.52", "and the way that was reduced to an algorithm "], ["94.65", "and this is following the example of don knuth and his tech layout language"], ["100.42", "is we simply compute the number of spaces at the end of each line "], ["104.41", "we're going to actually omit the last line from this calculation  because we"], ["108.28", "don't mind if the paragraph has extra spaces on its last line "], ["111.755", "so we're going to omit the last line "], ["113.61", "but otherwise  what we're going to do is to compute the number of spaces in"], ["118.63", "each line  take the cube of that result  and sum it up to compute the"], ["122.97", "badness of a particular layout "], ["125.62", "and we're trying to find the layout that has the"], ["128.05", "minimum amount of badness "], ["129.759", "so in this case  with the four spaces at the end of the second line  we end"], ["134.5", "up with a badness of 4 cubed  or 64 "], ["137.77", "in the better example  over here we see we have basically two spaces at"], ["142.69", "the end of two lines "], ["144.14", "so the total badness is 16 "], ["147.74", "and so  according to the badness measure  this layout is to be much"], ["151.81", "preferred to the original greedy layout "], ["155.61", "so how do we divide the line breaks problem into subproblems "], ["159.98", "well  here's our formulation "], ["161.27", "we're going to define formula called linebreaks  which  given a list of"], ["165.22", "words  a starting column  so initially that will be zero  because"], ["168.93", "we're starting on the first column of the first line "], ["172.36", "and a maximum width  which is the total width in the previous example "], ["176.33", "that was 13 columns "], ["178.23", "that we want the paragraph to be laid out with  is going to return the"], ["183.23", "actual paragraph "], ["184.17", "so this is a string  which represents the optimal laid out paragraph "], ["188.56", "and this is the cost of the badness "], ["193.23", "so this is what we're trying to minimize here "], ["196.49", "so how do we break an initial problem into subproblems "], ["201.06", "it goes as follows "], ["202.22", "what we do is we consider taking the first word from the list and basically"], ["207.86", "saying  look  there's no line break after this word "], ["210.31", "so what we're going to do is to lay out the rest of the list  but we're"], ["213.5", "going to start after the first word "], ["216.28", "so the remaining words will start on the same line as the current word "], ["223.5", "except the starting column will be moved over by the width"], ["228.67", "of the first word "], ["230.18", "plus a 1 that corresponds to the spaces between the first word and the"], ["235.6", "rest of the words "], ["236.97", "so the subproblem is  please lay out all the rest of the word list  but"], ["242.56", "leave room in the current line for the current word "], ["246.57", "and when we get back  we'll simply modify the string that represents the"], ["252.49", "paragraph that's been laid out to include us at the beginning of the"], ["256.529", "first line of that paragraph "], ["258.11", "and then  as we return up  more words will accumulate on each line "], ["262.81", "so that's the first alternative "], ["264.79", "the second alternative is to say  look  maybe what we'll do is to put a"], ["269.87", "new line after the first word in the list "], ["273.33", "in other words  the first word in the list will actually be the end of the"], ["275.65", "current line "], ["276.72", "so laying out the remaining words will basically start on a new line "], ["282.4", "so the column that we're going to ask for all the rest of the words to be"], ["287.85", "laid out on  the starting column  will be starting at zero "], ["292.86", "ok "], ["293.34", "and so again  we have the subproblem "], ["296.49", "and then  when we get back the answer for the subproblem  we'll go off and"], ["300.33", "add our word at the beginning of that list  but instead of separating it"], ["306.14", "from the remaining words by a space  we're going to make sure that the"], ["310.27", "remaining words start on a new line "], ["312.06", "so we'll put in this new line character here "], ["314.79", "and since our current word is at the end of a line in the paragraph  we'll"], ["321.37", "go off and compute the cost  now  and add that to the"], ["325", "total cost of the paragraph "], ["327.54", "so what we do is we go through the entire word list until we get to the"], ["331.85", "end  and then we're slowly building the paragraph back up  computing the"], ["336.4", "cost every time we run across the end of a new line "], ["341.03", "the lecture code includes an implementation of the line breaks"], ["344.18", "algorithm along the lines we just discussed "], ["347.49", "there are two cases where we terminate the recursion "], ["351.36", "one is when we reach the end of the paragraph  there's no more"], ["355.18", "words to lay out "], ["356.53", "and the other is if the word that we've just placed on the line actually"], ["360.91", "go goes past the end "], ["362.8", "in that case  we want to return an infinite cost for this alternative "], ["366.88", "because it's illegal for a word to go past the margin "], ["371.2", "otherwise  we've implemented the two alternatives just"], ["375.9", "as described before "], ["377.19", "one where the remaining words are laid out on the same line as the current"], ["381.18", "word  and the other in which the remaining words are laid"], ["384.18", "out on a new line "], ["386.14", "we simply choose the least costly of the alternatives to return as the desk"], ["392.24", "layout for the word list  including the first word "], ["398.54", "just for comparison  we've included a definition of a greedy layout"], ["404.54", "algorithm  so we can see what sort of badness it computes  and hopefully our"], ["408.47", "layout algorithm will do better "], ["410.4", "and we've included a couple test cases "], ["413.45", "one is the short word list that we used at the beginning of this segment "], ["418.65", "and the other is a longer statement involving a piece of"], ["422.46", "the gettysburg address "], ["424.46", "notice we're doing an exhaustive search of where to place the new"], ["427.18", "lines  and we would anticipate that with this long a list  that the"], ["432.38", "recursive search  the exhaustive search  will in fact run for a very "], ["437.1", "very long time "], ["438.53", "let's give it a whirl "], ["440.83", "let's start by testing this on our short list "], ["443.39", "so we're going to test breaks  and we're going to use the original little"], ["449.46", "five or six word paragraph  and we're going to lay that out in"], ["452.97", "a width of 13 columns "], ["455.24", "and you can see that our optimal layout did achieve a cost of 16 "], ["460.61", "and the greedy layout had the cost of 64  just as we computed"], ["464.14", "on the first slide "], ["465.57", "now  let's try our longer example "], ["468.84", "so this is with the second word list  the gettysburg address "], ["471.76", "or the first couple paragraphs of the gettysburg address "], ["474.9", "let's try it with a width of 40 "], ["479.55", "and in fact  you can see that it's not going to return  because it's off"], ["482.78", "trying that optimal layout "], ["484.43", "and it's going to have to work for a very long time  because the exhaustive"], ["488.47", "search  or trying every possible combination of line breaks  is"], ["491.77", "essentially computationally intractable "], ["494.32", "so i'm going to stop that "], ["496.14", "and you can see  i was really deep in the recursion "], ["499.19", "and then  what i'm going to do now  is go off and memoize line breaks "], ["504.17", "so  memoize   so this is the advantage of having that"], ["507.77", "general purpose function "], ["508.77", "we don't have to rewrite any of our code "], ["511.14", "we're just going to apply our general purpose technique for dealing with"], ["515.6", "overlapping subproblems  was to use our little cache of previously"], ["519.539", "computed answers "], ["521.01", "so now  if we do that  and we test it now "], ["524.64", "again  using the long list with the 40  we can see that we get our answer"], ["531.18", "right away "], ["532.37", "the line breaks had a total cost of 1068 "], ["536.46", "and you can see the margin here is as smooth as it felt it could make it "], ["542.14", "the greedy breaks had a cost of 2124 "], ["545.23", "and the real difference here occurs on this line  where we can see that after"], ["549.68", "the word great  there's a large indent because of  battlefield "], ["553.76", "being such a long word "], ["555.3", "and that's what caused this cost to go through the roof "], ["559.14", "so this is yet another example of a implementation where there must be a"], ["565.43", "large number of overlapping subproblems "], ["567.71", "and it's interesting to think about why that is "]], "2Y5CrREsJ-4": [["2.98", "computer to do things for us "], ["4.89", "as we've said  we want to take that idea of computational"], ["7.45", "thinking  taking a problem and breaking it down into a"], ["10.9", "sequence of mechanical steps that will let us deduce"], ["13.62", "solutions to that problem "], ["15.062", "and we want to be able to take that description and somehow"], ["18", "convert it into a form that the computer can do"], ["19.98", "the work for us "], ["21.41", "that says we need a way of describing those sequences of"], ["24.95", "steps  and that's where the programming language comes in "], ["27.86", "programming language is going to define both the syntax and"], ["30.8", "semantics that we need to translate our computational"], ["33.88", "ideas into mechanical steps "], ["36.3", "syntax  i'll remind you  says how we put together legal"], ["39.01", "expressions "], ["40.01", "semantics says  how do we deduce the meanings associated"], ["43.12", "with those expressions  which is going to let us solve the"], ["45.39", "problems that we want "], ["46.79", "we're almost ready to start talking about a programming"], ["48.78", "language  but we need to make one more choice "], ["50.77", "and that choice comes down to the kind"], ["53.03", "of programming language "], ["54.46", "one way to think about this is  no matter which language"], ["56.68", "we use  the interaction with the computer will all be"], ["58.67", "roughly the same "], ["60.01", "we're going to take an input and"], ["62.34", "provide it to the computer "], ["63.37", "that's what we call the source code "], ["65.3", "that input is then going to go through some kind of"], ["68.25", "computational process "], ["69.34", "and when we're done  we'd like to get a result printed out or"], ["73.01", "returned by the computer "], ["75.06", "and right here is where that computational process is going"], ["78.47", "to take place "], ["79.94", "and we have some choices here in terms of how the computer"], ["82.97", "actually deals with taking our input and"], ["85.54", "reducing it to an output "], ["86.866", "and let's look at what those choices might say "], ["89.26", "one choice is that we can use what's called a low level"], ["92.56", "programming language "], ["93.8", "low level says that the instructions we type in or"], ["96.5", "that we enter into the computer are very similar to"], ["99.62", "the internal control unit we saw last time "], ["102.33", "those instructions might be at the level of saying  move data"], ["105", "from one location of memory to another  or execute a simple"], ["108.66", "alu  or arithmetic logic unit operation  like"], ["111.62", "add  subtract  compare "], ["114.16", "it might also involve jumping to a new point in the sequence"], ["116.56", "of instructions based on that comparison "], ["118.57", "but the programming would be done in a very low level "], ["121.87", "once you make that decision to use this kind of a programming"], ["124.94", "language  then the stages within the computer are pretty"], ["127.25", "straightforward "], ["128.16", "there is a process called a checker  which takes that low"], ["130.84", "level code and just confirms that the syntax is correct and"], ["134.09", "that the static semantics are correct "], ["136.22", "and then  it passes the sequence of instructions on"], ["139.26", "through a process called the interpreter that simply"], ["141.69", "follows that sequence  much as we saw last time  ending up"], ["144.79", "with some output that gets printed back out to us "], ["146.845", "so on a low level language  we're programming  basically "], ["149.81", "at the level of the machine "], ["151.71", "that's one option "], ["153.01", "there's a second option  though  which is to use what's"], ["155.13", "called a high level language "], ["157.54", "and a high level language uses more abstract kinds of terms "], ["162", "we might want to talk about having the computer think"], ["164.91", "about  invert a matrix  compute a function  compare"], ["167.96", "two complex data structures "], ["169.78", "we'd like to be able to program  if you'd like  at the"], ["172.21", "level of thinking about higher kinds of abstractions "], ["175.64", "now here  again  we've got a choice "], ["178.63", "in a compiled language  those abstractions are then first"], ["183.53", "checked  as they did before  but then converted back into"], ["187.75", "low level code "], ["189.11", "so there is a special thing  or special process  inside the"], ["192.9", "computer called a compiler that takes the checked"], ["195.9", "sequence of instructions and reduces or converts them back"], ["199.76", "down to those basic computer instructions that we know we"], ["202.646", "need and those are then run through the interpreter in"], ["205.68", "order to execute the actual process "], ["207.68", "so this is certainly one way to do it  a compiled language "], ["210.74", "there's an alternative "], ["211.44", "and the alternative is  again  to have a high level language "], ["216.2", "run it through the checker as before "], ["218.24", "but in an interpreted language  there's a special"], ["221.15", "program that converts that source code to an internal"], ["223.69", "data structure and then sequentially converts each"], ["226.61", "step into a low machine instructions and executions "], ["230.44", "that says we're going to  one instruction at a time  do the"], ["233.88", "conversion and execution "], ["235.93", "and in this case  this is the kind of like"], ["238.3", "you're going to use "], ["238.83", "in this course  we're going to use python  which belongs to"], ["242.2", "this class of interpreted programming languages "], ["244.94", "now  you might say  so what are the choices "], ["247.01", "what are the tradeoffs here "], ["247.99", "and there are a couple of tradeoffs "], ["249.77", "in a compiled language  the code typically is faster"], ["253.76", "because we do all the work ahead of time  through the"], ["255.83", "compiler  to convert our instructions into the low"], ["258.729", "level machine instructions "], ["260.269", "so we can make them very efficient  which means they'll"], ["262.4", "run faster "], ["263.39", "but one of the challenges is if we have a bug or an error"], ["266.58", "in our code  when the compiled code hits that error  it can"], ["270.47", "often be difficult to figure out what caused it "], ["272.74", "because we're way down in the weeds of those compiled"], ["275.98", "instructions and figuring out what corresponding point in"], ["279.05", "our actual instructions led to that error can be a challenge "], ["282.49", "in an interpreted language  it can be a little slower  not"], ["285.427", "badly  but a little slower  because we're doing the"], ["288.19", "conversion on the fly  one instruction at a time "], ["291.66", "on the other hand  when we do hit an error or a bug  it is"], ["295.1", "usually easier to determine what caused that error because"], ["298.46", "we know exactly at what point in our code we were at when"], ["302.115", "that error occurred "], ["304.46", "again  there are tradeoffs here "], ["306.22", "different people like"], ["306.86", "different versions of languages "], ["308.3", "for us  we're going to use python  which has this"], ["310.77", "property of being an interpretive language "]], "AU66NP1kQm0": [["1.84", "eric grimson  all right  we want to measure complexity "], ["3.69", "we're going to use this random access machine model  which says we're going"], ["6.87", "to count basic steps "], ["8.57", "and we want to measure this in the worst case "], ["10.66", "and we want to measure it basically as a function of the size of the problem "], ["14.37", "so what we need is a formal way to talk about the relationship between"], ["18.1", "the running time and the size of the input "], ["21.05", "and as we suggested  what we're mostly interested in is what happens as the"], ["24.23", "size of the inputs gets very large  as it approaches infinity "], ["28.06", "so let's look at an example of how we might capture that"], ["31.3", "a little more formally "], ["32.95", "and in particular  let's look at a little example "], ["35.86", "i've written a function that's got 3 loops in it "], ["39.5", "i'm first going to loop for i from 0 up to 999 "], ["44.15", "and i'm going to set answer equal to i "], ["45.77", "it's a boring thing to do  but because i want to do something like that  i'm"], ["48.71", "going to do it "], ["49.73", "then i'm going to loop for i from 0 up to x - 1 for whatever the input x is "], ["55.18", "and i'm going to just increase the answer by one "], ["57.93", "and then  finally  i'm going to have a nested loop "], ["60.46", "i'm going to loop for i from 0 up to x - 1 "], ["64.269", "and for each version of i  i'm going to loop for j from 0 up to x - 1 "], ["68.45", "and i'm going to set answer to increase by 1 "], ["72", "not a big deal "], ["73.6", "what i want to know  though  is what amount of time does this take "], ["77.87", "and ignoring the issues of the overhead  if you like  of running the"], ["81.04", "for loops  you can see that in this first loop here  there are going to be"], ["84.44", "1 000 steps  no matter what x is  because i'm doing it 1 000 times "], ["88.8", "for this second loop  there are going to be x steps  depending on what the"], ["93.71", "input x is "], ["95.28", "and for this final loop  well  i'm going to do this inner loop x times "], ["99.07", "and i'm going to do that another x times "], ["101.94", "so i'm going to do x squared things "], ["104.22", "so i've got an expression that basically says  i've got"], ["107.01", "1 000 plus x plus "], ["108.95", "and i've got a 2x squared there "], ["110.73", "the 2 is  i guess  if i really think about it  i'm doing 2 steps here "], ["113.94", "and i should actually have a 2 there  because i'm really doing 2 steps"], ["117.35", "there  as well "], ["118.03", "all right  so i've got 1 000 + 2x + 2x^2 if each of these things is a"], ["123.02", "basic operation "], ["124.92", "ok  with that  let's think about this "], ["128", "again  i'm going to change this slightly "], ["129.37", "that should really be 2x "], ["130.33", "i've got 1 000 + 2x + 2x^2 "], ["133.59", "so let's think about x "], ["135.72", "if x is small  the constant term dominates "], ["138.95", "this term is really the big one "], ["141.96", "it's going to be  if x is 10  then 1 000 out of the  basically  1 200 "], ["146.45", "and actually  it should be 1 220 "], ["148.19", "steps are in the first loop "], ["150.19", "but still  almost all of it's done in the first loop "], ["152.83", "on the other hand  if x is large  then this term dominates "], ["157.32", "so for example  if x is a million  then the first loop takes a tiny  tiny"], ["162.27", "fraction of the time "], ["163.32", "the second loop takes only a tiny fraction of the time  because we've"], ["166.67", "got a billion in summed operations that we're doing here "], ["169.28", "and you can see that  in fact  in this case  all of this is"], ["172.69", "dominated by this term "], ["175.31", "we really only need to consider  when we look at code then  that nested"], ["179.49", "loop  the quadratic component "], ["181.48", "and does it really matter if this part takes 2x^2 steps as opposed"], ["185.35", "to  say  x^2 steps "], ["187.24", "a little bit  but not really "], ["189.03", "in our example  if our computer executes 100 million steps per second "], ["193.66", "then the difference might go from five and a half hours down to two and a"], ["196.615", "quarter hours "], ["197.43", "so the 2 does matter in terms of practical time "], ["200.54", "but on the other hand  if we could find a linear algorithm here "], ["203.34", "something that varied with x  not with x^2  then this thing would run in a"], ["207.23", "fraction of a second "], ["208.58", "and so again  it goes back to saying those multiplicative factors probably"], ["212.55", "are not crucial "], ["213.59", "it's really this order of growth that is the most important thing that we"], ["216.96", "want to deal with "], ["218.42", "so what we're saying is we want to use asymptotic complexity "], ["223.84", "and what does it mean "], ["224.7", "we're going to describe the running time in terms of the"], ["227.94", "number of basic steps "], ["229.34", "if the running time is a sum of multiple terms because of multiple"], ["232.53", "components to the code  we're going to keep the one with the"], ["234.88", "largest growth rate "], ["236.46", "and if that remaining term is a product  we're going to drop any"], ["239.83", "multiplicative constants "], ["241.545", "and so here's where the asymptotic portion comes in "], ["244.63", "we're worrying about it as the problem size goes to infinity "], ["249.77", "that's really what we're concerned about here "], ["252.33", "the notation we'll use "], ["253.82", "we borrow from theoretical computer science  it's called big o notation "], ["257.974", "it comes from the greek letter omicron  which donald knuth picked"], ["261.51", "when he was measuring these kinds of things "], ["263.44", "and we'll use big o as a way to give an upper bound on the asymptotic"], ["266.88", "growth of a function "], ["268.75", "what we're going to do next is look at some examples of the different kinds"], ["272", "of asymptotic growths that we have "], ["274.03", "and these capture  if you like  different classes of"], ["277.1", "complexity of functions "]], "CIld2wLmjXI": [["0.78", "eric grimson  we've now seen a bunch of examples of recursive functions "], ["4.36", "seen some of the power of them "], ["5.77", "we keep coming back to this idea of break a problem down into smaller"], ["8.72", "versions of the same problem "], ["10.39", "really great way of trying to tackle a problem "], ["12.9", "we're going to do one last thing "], ["14.545", "and that goes back to when we ran fib "], ["17.51", "when we ran fibonacci  we might have noticed that as we made the arguments"], ["22.26", "larger and larger  it slowed down "], ["23.78", "which is not surprising "], ["24.56", "it's calling itself multiple times "], ["27.3", "but suppose we wanted to actually count the number of times that fib"], ["29.98", "called itself recursively "], ["32.22", "multiple ways of doing it  but one of the ways in which we can do this is to"], ["35.29", "use what's called a global variable "], ["38.325", "what does that mean "], ["38.87", "well  so far  all the functions have communicated with their environment"], ["43.41", "strictly through their parameters and their return values "], ["46.21", "if it's when we call a new function  it creates an environment with some"], ["49.06", "parameters passed in "], ["50.25", "it does some work internally  and it returns a value as the"], ["53.01", "value of its response "], ["55.02", "we can make a variable or declare a variable to be global "], ["59.75", "and what this means is that the name is defined at the outermost scope of"], ["64.12", "the program  rather than the scope of the function within which it appears "], ["68.94", "it's global because it's going to appear up at the top level "], ["71.17", "it's going to be part of what we want to deal with when we're interacting"], ["74.42", "with  for example  the python shell "], ["78.62", "as it notes here  this can be a bit dangerous "], ["80.98", "and we'll talk about that in a second "], ["82.25", "but let's just look at how we might do this "], ["84.77", "so  here's the idea "], ["86.78", "we're going to call this a metered version of fibonacci "], ["89.68", "it has much the same form as before "], ["91.62", "there is the recursive call  just as we had before  using a"], ["95.03", "different name  of course "], ["96.19", "but we do two things "], ["98.01", "right here  we make a declaration that says the variable numcalls is global "], ["104.24", "that means it's going to be bound way up at the top  at the highest-level"], ["108.44", "environment "], ["109.76", "inside of fibmetered  we're going to actually change numcalls "], ["113.97", "this says every time we call fibmetered  we're going to increase"], ["118.39", "that global variable by one "], ["120.29", "great "], ["121.08", "so that's going to count how many times it's called "], ["123.56", "we can test this with a little test script here "], ["126.46", "i'm going to run fib for some number "], ["128.18", "i'm going to have i roll over from 0 up to n "], ["131.84", "and notice what i'm going to do "], ["132.99", "each time i go through the loop  i'm going to again say numcalls is a"], ["137.48", "global variable "], ["138.51", "it's defined up in that top-level place "], ["140.92", "and i'm going to set it to zero "], ["143.82", "that is going to have the effect of in the global environment changing"], ["147.27", "numcalls to zero "], ["148.27", "and then i'm going to actually do some work and print up some results "], ["152.69", "i'm going to do the work of figuring out what fibonacci is "], ["155.31", "the call to fibmeter will  every time it calls it  change numcalls by one "], ["160.65", "and when i'm done and when it returns  i can print out how many times was"], ["164.51", "that actually called "], ["166.51", "ok "], ["167.07", "let's see what happens if we do this "], ["168.45", "i'm going to go over and start up over here inside of my idle environment "], ["173.37", "and if i load that in  let's actually do a test on fib "], ["178.984", "and this put means we're going to do up to five "], ["182.82", "and it now tells us  oh cool "], ["185.16", "when i call a fib on zero  the answer is one "], ["188.14", "it was called one time "], ["189.09", "makes sense "], ["189.73", "when i call fib on one  the answer is one "], ["192.03", "it was also called one time "], ["193.11", "we knew those were the base cases "], ["194.68", "and then you can see the responses as we move up "], ["196.83", "so let's make this a little bit bigger "], ["198.64", "let's do testfib "], ["202.36", "oh  let's make it up to 20 "], ["206.55", "then we'll see what it does here "], ["209.54", "you see it's moving pretty quickly "], ["210.87", "it's starting to slow down a little bit "], ["212.44", "but we're actually now calling testfib in that metered form "], ["216.73", "and it's showing us how many times it's called "], ["219.34", "also notice  if you look at the numbers  it's clear that we're"], ["221.76", "resetting numcalls each time around "], ["223.69", "and that  if we go back to our slides  came from right here "], ["226.87", "each time through the loop and testfib  we reset numcalls to zero up"], ["230.59", "in that top environment "], ["232.04", "so that when we go ahead and call fibmetered  it is starting from zero"], ["237.17", "and doing a count for each time it calls recursively within itself "], ["241.58", "a nice tool "], ["242.4", "a tool that's really kind of handy  and something that we'll come back to "], ["244.83", "because it is a way of being able to keep track of some things "], ["247.865", "but i want to finish with a couple of comments "], ["251.66", "first one is use it with care "], ["254.53", "putting a variable as a global variable is destroying the"], ["257.54", "locality of the code "], ["258.519", "one of the beautiful pieces about recursive code is all of the function"], ["263.12", "call contains within it all the information it needs "], ["266.55", "the parameter's passed in  it does all the work internally  locally  and it"], ["269.79", "simply returns a value back out "], ["272.05", "that is an elegant way of being able to not only think about what's going"], ["275.36", "on  but to be able to deal with the code "], ["277.73", "once we have global variables  they can be modified or read in a wide"], ["282.56", "range of places "], ["283.48", "and that's going to make it really easy to break the locality  especially"], ["287.58", "if someplace outside of the function we're dealing with makes a change for"], ["291.8", "global variable and that affects the computation inside that local call to"], ["296.21", "a procedure "], ["297.42", "this is going to allow the potential for introducing bugs "], ["301.23", "and most computer scientists will be very strong about arguing that one"], ["304.81", "should not use global variables if at all possible "], ["307.83", "it is much better to encapsulate the computation locally "], ["311.14", "but here's an example where we're metering things  where having a global"], ["314.48", "variable can be really handy "]], "7m8pab1MfYY": [["0.49", "congratulations "], ["1.92", "now you know how to use one of the basic building blocks of"], ["4.3", "the course "], ["5.61", "if you look to your left  you will see a table of contents"], ["8.41", "for all of the aspects of the course "], ["10.66", "right now  since you are playing this video  you're in"], ["13.51", "the overview section  which contains various aspects of"], ["16.48", "administrivia including these tutorials "], ["19.66", "continuing to look to your left  if you click on the"], ["21.96", "various chapter labels  you will see the course content"], ["25.55", "that it's associated with each chapter "], ["28.28", "you will not change content or interrupt a video until you"], ["31.85", "actually click on a new course element to navigate to "], ["35.83", "each chapter contains activities that you are"], ["37.8", "expected to complete  including presentation"], ["40.28", "sequences  which you should watch and participate in in"], ["44.22", "order to learn new material concepts "], ["47.11", "you should also complete the homeworks and activities in"], ["49.88", "order to get more practice and solidify your understanding of"], ["52.68", "the material "], ["54.36", "many courses will grade you based off of your performance"], ["56.93", "on homework questions "], ["58.67", "the next section will describe how to enter"], ["61.26", "and check your answers "], ["63.13", "note that in this sequence  even though the next section"], ["66.43", "will give you feedback it will not affect your grade on any"], ["70.23", "aspect of your interactions with that x so you should feel"], ["73.52", "free to experiment "]], "BvooIjkNJ24": [["2.98", "computer to do things for us "], ["4.89", "as we've said  we want to take that idea of computational"], ["7.45", "thinking  taking a problem and breaking it down into a"], ["10.9", "sequence of mechanical steps that will let us deduce"], ["13.62", "solutions to that problem "], ["15.062", "and we want to be able to take that description and somehow"], ["18", "convert it into a form that the computer can do"], ["19.98", "the work for us "], ["21.41", "that says we need a way of describing those sequences of"], ["24.95", "steps  and that's where the programming language comes in "], ["27.86", "programming language is going to define both the syntax and"], ["30.8", "semantics that we need to translate our computational"], ["33.88", "ideas into mechanical steps "], ["36.3", "syntax  i'll remind you  says how we put together legal"], ["39.01", "expressions "], ["40.01", "semantics says  how do we deduce the meanings associated"], ["43.12", "with those expressions  which is going to let us solve the"], ["45.39", "problems that we want "], ["46.79", "we're almost ready to start talking about a programming"], ["48.78", "language  but we need to make one more choice "], ["50.77", "and that choice comes down to the kind"], ["53.03", "of programming language "], ["54.46", "one way to think about this is  no matter which language"], ["56.68", "we use  the interaction with the computer will all be"], ["58.67", "roughly the same "], ["60.01", "we're going to take an input and"], ["62.34", "provide it to the computer "], ["63.37", "that's what we call the source code "], ["65.3", "that input is then going to go through some kind of"], ["68.25", "computational process "], ["69.34", "and when we're done  we'd like to get a result printed out or"], ["73.01", "returned by the computer "], ["75.06", "and right here is where that computational process is going"], ["78.47", "to take place "], ["79.94", "and we have some choices here in terms of how the computer"], ["82.97", "actually deals with taking our input and"], ["85.54", "reducing it to an output "], ["86.866", "and let's look at what those choices might say "], ["89.26", "one choice is that we can use what's called a low level"], ["92.56", "programming language "], ["93.8", "low level says that the instructions we type in or"], ["96.5", "that we enter into the computer are very similar to"], ["99.62", "the internal control unit we saw last time "], ["102.33", "those instructions might be at the level of saying  move data"], ["105", "from one location of memory to another  or execute a simple"], ["108.66", "alu  or arithmetic logic unit operation  like"], ["111.62", "add  subtract  compare "], ["114.16", "it might also involve jumping to a new point in the sequence"], ["116.56", "of instructions based on that comparison "], ["118.57", "but the programming would be done in a very low level "], ["121.87", "once you make that decision to use this kind of a programming"], ["124.94", "language  then the stages within the computer are pretty"], ["127.25", "straightforward "], ["128.16", "there is a process called a checker  which takes that low"], ["130.84", "level code and just confirms that the syntax is correct and"], ["134.09", "that the static semantics are correct "], ["136.22", "and then  it passes the sequence of instructions on"], ["139.26", "through a process called the interpreter that simply"], ["141.69", "follows that sequence  much as we saw last time  ending up"], ["144.79", "with some output that gets printed back out to us "], ["146.845", "so on a low level language  we're programming  basically "], ["149.81", "at the level of the machine "], ["151.71", "that's one option "], ["153.01", "there's a second option  though  which is to use what's"], ["155.13", "called a high level language "], ["157.54", "and a high level language uses more abstract kinds of terms "], ["162", "we might want to talk about having the computer think"], ["164.91", "about  invert a matrix  compute a function  compare"], ["167.96", "two complex data structures "], ["169.78", "we'd like to be able to program  if you'd like  at the"], ["172.21", "level of thinking about higher kinds of abstractions "], ["175.64", "now here  again  we've got a choice "], ["178.63", "in a compiled language  those abstractions are then first"], ["183.53", "checked  as they did before  but then converted back into"], ["187.75", "low level code "], ["189.11", "so there is a special thing  or special process  inside the"], ["192.9", "computer called a compiler that takes the checked"], ["195.9", "sequence of instructions and reduces or converts them back"], ["199.76", "down to those basic computer instructions that we know we"], ["202.646", "need and those are then run through the interpreter in"], ["205.68", "order to execute the actual process "], ["207.68", "so this is certainly one way to do it  a compiled language "], ["210.74", "there's an alternative "], ["211.44", "and the alternative is  again  to have a high level language "], ["216.2", "run it through the checker as before "], ["218.24", "but in an interpreted language  there's a special"], ["221.15", "program that converts that source code to an internal"], ["223.69", "data structure and then sequentially converts each"], ["226.61", "step into a low machine instructions and executions "], ["230.44", "that says we're going to  one instruction at a time  do the"], ["233.88", "conversion and execution "], ["235.93", "and in this case  this is the kind of like"], ["238.3", "you're going to use "], ["238.83", "in this course  we're going to use python  which belongs to"], ["242.2", "this class of interpreted programming languages "], ["244.94", "now  you might say  so what are the choices "], ["247.01", "what are the tradeoffs here "], ["247.99", "and there are a couple of tradeoffs "], ["249.77", "in a compiled language  the code typically is faster"], ["253.76", "because we do all the work ahead of time  through the"], ["255.83", "compiler  to convert our instructions into the low"], ["258.729", "level machine instructions "], ["260.269", "so we can make them very efficient  which means they'll"], ["262.4", "run faster "], ["263.39", "but one of the challenges is if we have a bug or an error"], ["266.58", "in our code  when the compiled code hits that error  it can"], ["270.47", "often be difficult to figure out what caused it "], ["272.74", "because we're way down in the weeds of those compiled"], ["275.98", "instructions and figuring out what corresponding point in"], ["279.05", "our actual instructions led to that error can be a challenge "], ["282.49", "in an interpreted language  it can be a little slower  not"], ["285.427", "badly  but a little slower  because we're doing the"], ["288.19", "conversion on the fly  one instruction at a time "], ["291.66", "on the other hand  when we do hit an error or a bug  it is"], ["295.1", "usually easier to determine what caused that error because"], ["298.46", "we know exactly at what point in our code we were at when"], ["302.115", "that error occurred "], ["304.46", "again  there are tradeoffs here "], ["306.22", "different people like"], ["306.86", "different versions of languages "], ["308.3", "for us  we're going to use python  which has this"], ["310.77", "property of being an interpretive language "]], "qA24CgJ1Zc8": [["1.62", "eric grimson  ok "], ["2.85", "so we've now seen how to create simple expressions "], ["5.19", "we can take objects that are numbers"], ["7.64", "like integers or floats "], ["8.83", "we can combine them together with operators  so we say 3"], ["11.88", "plus 4 or 3 plus 4 all in parentheses times 5 "], ["16.07", "that gives us a way of doing some simple computations  but"], ["18.73", "it's pretty boring "], ["19.94", "it basically says we got a calculator "], ["22.09", "so we can type in expressions and get out values "], ["24.71", "but we like to obviously do more"], ["26.26", "complicated kinds of things "], ["28.47", "one thing we need in order to make that happen is what we"], ["30.78", "call a means of abstraction "], ["32.359", "while we can certainly write arbitrary expressions  it"], ["34.5", "would be valuable having written it down and gotten the"], ["37.02", "value of an expression to be able to remember  to save it"], ["40.01", "away by giving it a name  and then using the name to get the"], ["43.23", "value back whenever we needed it "], ["45.95", "fortunately  we have that ability "], ["47.38", "it's called assignment "], ["48.75", "and in python  the format of that is shown here "], ["52.22", "we type in word or a sequence of characters followed by an"], ["56.83", "equal sign followed by some expression whose value will"], ["61.24", "then be associated with that word "], ["64.42", "so if i go over to my python shell  i can do things like"], ["69.4", "i'm going to say  give the name pi 3 14159 "], ["78.33", "and notice when it print it out  it doesn't mean anything "], ["80.58", "it simply has done that assignment "], ["82.12", "that is it basically "], ["83.14", "as we're going to see later on  created a binding of the"], ["85.79", "name pi to that value "], ["87.705", "if i want to see the value of pi  i can simply ask the"], ["91.23", "python interpreter to give it to me  and it"], ["93.72", "prints it back out "], ["95.06", "so i could do another binding "], ["96.5", "i can say  i've got a radius of 11 2 "], ["100.55", "again  notice that it doesn't print anything out "], ["102.58", "if i want to get the value of radius  i can ask for it "], ["106.01", "but i can also now do things like create expressions "], ["109.08", "so i'm going to assign the name area to "], ["111.35", "and i can now write an expression as i would have"], ["113.67", "before with now not just numbers but names whose values"], ["122.24", "are also numbers "], ["123.03", "so the area is pi r squared  where r is my radius "], ["127.08", "and i can say  ok  what is the value of area "], ["130.86", "and it did that computation "], ["132.97", "so i have an assignment statement "], ["134.4", "and notice here i'm using a single equal sign  which is"], ["137.16", "why we use the double equal sign for comparison "], ["140.3", "a word or a name  an equal sign  and expression says  get"], ["144.16", "the value of that expression and bind to it or bind it to"], ["147.97", "if you like the value of the name associated on the left"], ["150.57", "hand side of that expression "], ["154.46", "so let's look at that in a little more detail "], ["156.72", "we say that we're binding a variable or a name to a value "], ["161.12", "and what does that mean "], ["162.2", "that statement pi equals 3 14159 literally assigns the"], ["166.36", "name pi to the value of the expression to the right hand"], ["169.36", "side of the equal "], ["170.862", "and you can think of this as literally creating a binding"], ["174.05", "between a name and a value stored"], ["176.36", "somewhere in the computer "], ["177.54", "so over here are all the values that are stored away in"], ["179.97", "the computer "], ["180.84", "and i have somewhere within the computer a listing of all"], ["183.84", "the names whose bindings i have done "], ["186.32", "as we just saw  we can retrieve the value associated"], ["188.79", "with the name by simply invoking the name  just asking"], ["191.44", "for what is the value pi or pi "], ["195.85", "now i can change the bindings "], ["198.71", "so having the bound a variable name  i can do another"], ["201.94", "assignment statement "], ["203.28", "so  for example  if i go back over to my python shell  i"], ["206.09", "could change the value of radius "], ["208.2", "remember  initially we had radius of 11 2 "], ["214.49", "let's change it to something different "], ["216.3", "let's changes it to in fact "], ["218.1", "i'm going to make this 14 3 "], ["222.05", "so how do i do that "], ["223.42", "i say let's have radius be 14 3 "], ["227.04", "now what's my value of radius "], ["229.48", "there it is "], ["231.28", "what that's done in my diagram over here is it's change the"], ["234.32", "binding for radius "], ["235.39", "remember before it was 11 2 "], ["236.61", "it has now changed into something else "], ["239.54", "but notice that area hasn't changed "], ["242.77", "and in fact i can confirm that "], ["244.84", "the area is still 3 94 point a whole bunch of stuff "], ["249.52", "and that's because my evaluation of the binding for"], ["252.44", "area having been done earlier has simply"], ["254.57", "stored away that value "], ["256.05", "as you can see right here  it doesn't have an"], ["258.779", "expression of value "], ["259.604", "and it is the particular value "], ["261.329", "so rebinding radius does not change the binding"], ["264.63", "associated with area "], ["266.38", "an easy place to make a bug or have a mistake and something"], ["269.66", "that you want to keep an eye out on as you move forward in"], ["272", "terms of using these ideas "]], "qic9_yRWj5U": [["4.51", "take place when functions are called "], ["6.92", "let's do a couple of other examples to just really"], ["9.13", "reinforce this point "], ["10.17", "because it's really important for you to understand bindings"], ["13.14", "of variables and how they take place "], ["15.45", "for this one  i'm actually going to just go over to"], ["16.95", "python and idle  and type in a little example "], ["19.58", "imagine i say i'm going to create f x) to have the"], ["23.76", "following property "], ["24.71", "i'm going to bind y to 1 "], ["27.145", "i'm going to bind x to be x + y "], ["34.59", "i'm going to then print out the current value of x  that x"], ["40.59", "is equal to "], ["45.97", "sorry "], ["46.15", "i'm printing out the string x is equal to and then the"], ["48.026", "actual value of x "], ["49.48", "and then i'm going to return the value of x "], ["53.35", "and now inside of python  i set x to 3 "], ["58.52", "i set y to 2 "], ["61.29", "and i'm sorry "], ["61.89", "i mistyped that "], ["62.63", "so let's do that properly "], ["63.76", "there's y is equal to 2 "], ["65.61", "and i bind z to be f x)  "], ["70.928", "and i run it "], ["71.81", "and it says x is equal to 4 "], ["74.22", "and if i now ask  what's the value of z "], ["76.84", "it's 4  x is 3 "], ["79.952", "and y is 2 "], ["82.98", "hm "], ["84.8", "i want to see  so why does that happen "], ["87.11", "why is it that x is now returning an"], ["91.7", "internal value of 4 here "], ["93.51", "but externally is 3 "], ["95.3", "and z is 4 "], ["96.2", "and y is equal to 2 "], ["98.17", "so why does this happen "], ["100.91", "this is going to give us a chance  again  to look at what"], ["102.97", "happens inside of the binding "], ["104.27", "so let's look in detail at what happens here "], ["107.88", "i create a definition of f "], ["111.3", "and in my global environment for python  that says i've got"], ["115.49", "a binding of f to that procedure "], ["117.67", "and to remind you  inside there  there's the formal"], ["120.03", "parameter for x "], ["121.41", "and there is the interior "], ["124.18", "and i didn't repeat all of it "], ["125.28", "it's got that print statement to it "], ["126.6", "but basically there is that interior that deals with all"], ["130.585", "of those pieces "], ["131.52", "and notice that it's just there as text "], ["134.005", "it hasn't actually been evaluated yet "], ["137.26", "i then go ahead and do the bindings of x is 3 and y is"], ["140.25", "equal to 2 "], ["140.9", "and at this stage in the computation  i've got bindings"], ["143.45", "for them inside the environment "], ["146.26", "key thing to notice "], ["147.31", "in the global environment x is 3  y is 2  and f is bound to a"], ["152.87", "procedure object whose body has references to x and y but"], ["157.53", "nothing more "], ["159.84", "let's move on in the computation "], ["162.25", "i now say i want to invoke f "], ["164.73", "i'm going to eventually bind z to the value returned by"], ["167.53", "calling f on x "], ["169.81", "but i'm invoking f of x right there "], ["172.82", "what does that do "], ["173.84", "well i get the binding for f  which is this procedure "], ["177.97", "and that says i'm going to copy this environment pointer "], ["180.76", "so i'm going to create a new frame whose parent is that"], ["183.71", "global environment "], ["185.08", "and inside there  i'm going to bind a parameter x "], ["189.22", "and that is coming from there "], ["190.89", "to the value passed in by the value of the call to f "], ["195.86", "and that x refers to this one "], ["199.6", "ok  a little funky "], ["201.32", "but it's important to see that the rules actually tell me how"], ["203.71", "to do that "], ["204.14", "my invocation of f says create a frame in which the formal"], ["207.52", "parameter x is going to have a binding "], ["209.355", "and what's the binding for that value "], ["211.14", "it's the value of this expression "], ["213.37", "and that expression is a variable name "], ["215.16", "so i'm doing that evaluation here in the global"], ["217.7", "environment "], ["218.47", "i get that value of x  which is 3 "], ["221.82", "so i've now created a local binding for x to be 3 "], ["226.11", "and now i'm ready to move on "], ["227.86", "so relative to this environment  i am now going to"], ["230.83", "evaluate the body of f "], ["233.18", "so let's step on "], ["235.01", "the body of f says  first expression is to create a"], ["238.61", "binding for y "], ["240.23", "remember that's happening here "], ["243.32", "that's happening in the frame associated with the function"], ["246.06", "invocation "], ["247.15", "so i'm going to bind y  have the value 1 there "], ["254.17", "that's interesting because it's not"], ["255.63", "changing things up here "], ["256.97", "it is making that binding there "], ["259.24", "so that step of the computation"], ["262.13", "creates that change "], ["263.385", "and if i now move on  the next expression in f says get the"], ["269.04", "value of x "], ["270.76", "remember  i'm doing that relative to this frame "], ["273.57", "get the value of y  which i'm doing relative to this frame "], ["276.97", "and then do that computation and change the binding  which"], ["279.84", "is why it goes from 3 + 1  and i'm changing"], ["283.34", "that binding to 4 "], ["285.48", "from the perspective of f  it never sees that version of y "], ["289.53", "it only sees this version of y "], ["292.08", "from the perspective of f  it only saw that version of x "], ["294.84", "which was originally 3 "], ["296.52", "and then the binding  this  happens in this frame "], ["300.91", "and that's why that version of x changes "], ["304.49", "having done that  we can move on "], ["307.32", "and it says return the value of x  which is 4  and that is"], ["312.26", "what z is going to be bound to "], ["314.38", "and that binding  remember  takes place up in this frame"], ["317.79", "because that expression is being evaluated relative to"], ["321.47", "the global environment "], ["323.43", "it's a long-winded way of saying notice that this"], ["326.2", "particular expression here  the body of f  got a value for"], ["333.41", "y that it had bound locally  got a value for x which was"], ["336.22", "the local parameter  and did the change locally inside of"], ["340.14", "that environment "], ["341.43", "but the return value was a binding that took place up in"], ["344", "the global environment "], ["345.57", "and that's why if i were now to go ahead and print out "], ["348.79", "control reverts to the global environment "], ["351.44", "and that's where the values of x  y and z are visible  which"], ["354.16", "is why i am going to  in fact  now do the values that i saw"], ["357.92", "printed when i did that in my environment "], ["360.6", "so the point of this is that those bindings actually take"], ["364.31", "place in frames that make sense "], ["366.96", "here are some observations "], ["368.92", "each function call creates a new environment  a new scope "], ["373.29", "where the bindings of the formal parameters and the"], ["375.58", "values passed in take place "], ["378.24", "and where  as we saw  local variables  things created as"], ["381.71", "assignments within the body  take place  that"], ["383.84", "local binding of y "], ["385.75", "and that creates an environment in which we"], ["389.03", "actually do the computation "], ["391.16", "this scoping is often called either static or lexical "], ["395.45", "because the scope within which a variable has a value is"], ["399.1", "defined by the extent of the code boundaries "], ["402.13", "that definition of f had  lexically  a scope around that"], ["406.38", "said i'm locally binding y "], ["408.75", "i'm locally using the formal parameter of x "], ["410.99", "all computations take place within that scope "], ["414.71", "so that gives us a sense of why we see the particular"]], "PauHW4ObHDo": [["0.32", "in this sixth lecture we're going to introduce compound data types "], ["4.43", "these are ways to combine simpler data objects into collections  for which we"], ["8.75", "can then write algorithms to infer new information "], ["12.31", "in particular  we will introduce tuples and lists "], ["16.17", "and we'll talk about fundamental operations on these common compound"], ["19.5", "data types "], ["21.19", "finally  we will show you a more general collection of objects called"], ["24.82", "dictionaries  and methods for creating and manipulating them "], ["29.53", "at the end of this lecture  you should be able to write functions that"], ["32.74", "manipulate compound data objects  as well as those that deal with scalar"], ["36.96", "objects  like numbers and strings "]], "EeGAH_Es_7s": [["0.89", "eric grimson  now we've seen black-box testing  designing a test suite based"], ["4.75", "on just pass through the specification "], ["7.3", "a nice complement to that is glass-box testing "], ["10.44", "that's where we're going to use the code itself  the implementation  to"], ["14.54", "guide the design of test cases "], ["17.5", "obviously looking at the code should give us a more complete handle  if you"], ["21.79", "like  on trying to figure out where there might be possible bugs "], ["24.86", "so let's think a little bit about what it means "], ["26.63", "and again  the name sort of suggests it "], ["28.38", "glass-box says i can see inside to figure out what's going on "], ["32.619", "a glass-box test suite  a good one  is called path-complete  if every"], ["39.21", "possible path through the code is tested at least once "], ["43.8", "now if you think about it  that's not always going to be possible "], ["47.03", "if we've got a loop  we might be able to say what happens if the loop is"], ["50.71", "executed once  executed more than once "], ["53.37", "but to do one  two  three  four  five  up to a billion times  again we may"], ["57.19", "not be able to test all of them "], ["58.68", "but we can certainly talk about different samplings of"], ["62.48", "test through a loop "], ["63.95", "same thing with a recursive function "], ["65.85", "there maybe arbitrarily deep levels of recursions  where we may not be able"], ["68.84", "to test all of it "], ["69.57", "but the idea of testing multiple paths through the code "], ["73.43", "and if possible all paths through the code  is really nice "], ["77.27", "notice by the way  even a path-complete test suite can still"], ["80.58", "miss a bug "], ["81.58", "it will depend on the choice of examples "], ["83.79", "but if it is path-complete  if we're exercising every path through the"], ["86.91", "code  at least we're more likely to find a bug if it's there "], ["92.02", "now let's look at a little example "], ["95.23", "here's a simple little piece of code for finding absolute value "], ["98.47", "assumes x is an int "], ["99.63", "it's going to return x  if x is greater than or equal to 0  it'll"], ["103", "return minus x otherwise "], ["104.86", "and since i know that x is an int  i can do some good sampling here "], ["108.63", "and you can see the code inside "], ["110.9", "now  what would a good test suite here be "], ["113.62", "well  one sample of a test suite would be to pick the values"], ["116.17", "of minus 2 and 2 "], ["118.43", "it's certainly path-complete  right "], ["121.01", "if it's minus 2  it's going to take this path "], ["125.6", "if it's positive 2  it's going to take this path "], ["128.949", "so it's looking at both paths through the if clause "], ["133.05", "on the other hand  it's going to miss a case "], ["135.81", "and it will miss in fact  this case here  of looking at absolute minus 1 "], ["139.76", "which in this case gives me a bug "], ["141.97", "because in fact i should have had x less than or equal to here"], ["146.933", "to catch that case "], ["149.63", "what does that say "], ["150.36", "it says it's not just being path-complete  but we want to think"], ["153.61", "about boundary cases "], ["155.53", "and here the code itself gives us a boundary case "], ["158.42", "since that's the test  i ought to pick that up as one of the boundary cases "], ["163.45", "when it's at that boundary  when it's below that boundary  when it's above"], ["166.41", "that boundary "], ["168.01", "but here's a case where i do explore all the possible paths "], ["170.6", "i've got a path-complete set of tests "], ["174.57", "ok  so what can we do with this "], ["176.6", "well  here's some simple rules of thumb  in a second we're going to get"], ["179.8", "to an example  but here's some rules of thumb for how you do"], ["182.62", "good glass-box testing "], ["184.62", "first  make sure that both branches of all if statements are checked "], ["188.68", "i just did that  in that particular case "], ["191.1", "similarly  insure that every except clause is executed "], ["194.42", "we're going to return to this "], ["195.37", "we haven't talked a lot about except so far  or exceptions "], ["198.53", "but it's the same idea "], ["199.61", "every time i've got an exception  make sure i actually test that "], ["202.94", "if i have a loop  a for loop  i want to have tests where the loop's not"], ["208.07", "entered  where the body of the loop is executed exactly once  or the body of"], ["212.6", "the loop is executed more than once "], ["215.47", "as i said earlier  i can't do all possible versions of"], ["217.93", "them more than once "], ["218.59", "but i can sample those three because they tend to expose places"], ["221.64", "where there are bugs "], ["222.98", "same thing for a while loop "], ["224.67", "do the same thing i did for for "], ["226.55", "the loop's not done  done once  done multiple times "], ["230.14", "but also i want to catch all the cases here where there are different ways to"], ["233.79", "exit the loop "], ["234.96", "if there are different parts of my loop or i can break out of it  i want"], ["238.36", "to catch all of those "], ["239.95", "if i've got a recursive function  i want to test what happens if there's"], ["243.43", "no recursive call  it's just the base case "], ["245.85", "what happens if there's exactly one recursive call "], ["248.64", "and again  if there's more than one recursive call "], ["250.68", "and you can see this pattern of none  one  and more  there and here "], ["255.99", "and that's a common thing that i'm going to want to try and use  as i"], ["258.589", "build different test suites for doing glass-box testing "]], "vmz9pVWI2S4": [["0.4", "eric grimson  in this fourth lecture  we are going to take our ideas of"], ["3.3", "looping computations and abstract them "], ["6.39", "that means we'll capture the idea of a computational method inside a"], ["9.84", "function  allowing us to separate the details of how we do the computation"], ["14.58", "from the use of the computation "], ["16.55", "something we call a black box abstraction "], ["19.72", "this is a very powerful idea that will let us build complex collections of"], ["23.46", "functions that compute very interesting things without getting"], ["27.01", "bogged down in the details "], ["28.625", "and in a way  that makes it easier to reuse methods  or to"], ["32.439", "debug or correct them "], ["34.5", "we'll also introduce a formalism called environments to help us"], ["38.1", "visualize how using functions within a python interpreter controls the"], ["42.36", "assignment of names to values  how those values are retrieved  and how we"], ["47.07", "can use those ideas to conceptualize new algorithms "], ["51.22", "at the end of this lecture you will have the ability to write arbitrary"], ["55.22", "computations as functions  and to use those functions as building blocks for"], ["59.81", "other computations  a key element of computational thinking "]], "_FbKIp-6YzY": [["1.03", "chris terman  in this lecture  we're going to revisit optimization"], ["3.36", "problems  particularly those that involved having to do an exhaustive"], ["7.46", "search to find the optimal solution "], ["10.44", "before  we were forced to adopt a simple heuristic  like the greedy"], ["14.66", "algorithm  in order to come up with run-times that are reasonable "], ["19.2", "now  we're going to try using a technique called dynamic programming"], ["22.91", "that will let us achieve optimal results  but with much"], ["26.03", "more reasonable run-times "], ["28.11", "let's get started "], ["29.93", "some optimization problems exhibit properties which  if they were true "], ["35.18", "allow us to come up with a much more computationally efficient way to solve"], ["38.73", "the problem "], ["40.09", "the first property is called optimal substructure "], ["43.44", "so suppose we have some optimization problem expressed as the function f "], ["48.61", "where we pass in an argument that has some structure "], ["51.42", "for example  the argument may be a list of items  and the shaded area"], ["55.77", "might represent the first half of the list  and the unshaded area the second"], ["59.41", "half of the list "], ["60.85", "in some problems  we might discover that  to come up with the optimal"], ["64.12", "solution for the original problem  we'll discover ourselves computing the"], ["69.26", "same optimization problem  but on a smaller argument as part of the"], ["73.94", "original arguments that have been whittled down somehow "], ["76.87", "so in this case  we're computing the optimization function on the first"], ["81.02", "half  and then the second half "], ["82.72", "so we decompose the problem  the original problem  into two"], ["87.13", "sub-problems "], ["88.76", "now  if it's the case that i'll be able to take the answer to these two"], ["91.66", "sub-problems and combine them some way  i may be able to come up with the"], ["96.48", "answer for the original problem "], ["99.14", "and if that's true  if our computation exhibits this behavior  we say that it"], ["105.54", "has optimal substructure "], ["107.73", "another property is that in doing this sort of decomposition of the"], ["113.26", "optimization problem into sub-problems  we may discover that the"], ["117.26", "same sub-problem keeps reoccurring "], ["120.85", "and when that happens  so for example  we may discover that we keep computing"], ["126.25", "this particular function many times "], ["128.57", "and when that happens  when we say that the sub-problems are overlapping "], ["132.79", "in other words  if we find ourselves computing the answer for the same"], ["137.1", "sub-problem again and again and again "], ["140.79", "although if not an optimization problem  this definition for fibonacci"], ["145.34", "and its execution display the properties that we talked about on the"], ["150.17", "previous slide "], ["151.55", "we can see that  to compute fib n)   we end up computing fib n-1)   and"], ["158.01", "fib n-2) of   and this is the sort of substructure we were talking about "], ["163.7", "and then  of course  the computation involves adding"], ["167.9", "the two results together "], ["168.96", "so we "], ["169.54", "processing the answers from fib n-1) and fib n-2) to come up with the"], ["174.71", "answer for fib n)  "], ["176.87", "if we actually consider the execution of this  say  on fibonacci of five "], ["181.53", "let's sort of show the call tree  all the sub-problems that have to be"], ["184.74", "solved  and see what we see "], ["187.83", "so  fib 5) we have to compute fib 4) and fib 3) and fib 4) we'll compute"], ["195.16", "fib 3) and fib 2) and for fib 3) we'll compute fib 2) and fib 1)"], ["201.65", "fib 1)   when the argument is 1  you can see we don't make any more calls "], ["206.26", "so that's a leaf of the call tree "], ["208.62", "but fib 2) involves a call of fib 1) and fib 0) same up here  call to a"], ["214.49", "fib 1)   and a call to fib 0)  "], ["218.02", "and then fib 3) involves a call of fib 2) and fib 1) and finally  this"], ["223.61", "fib 2) involves a call to fib 1) and fib 0)"], ["227.94", "so that's the entire call tree that we will execute when we initially start"], ["232.96", "off by calling fib 5) "], ["235.24", "we can see there's a lot of common sub-problems here "], ["237.96", "for example  we compute f 2) here  and here  and here "], ["245.4", "and in fact  there's higher levels of sub-problems "], ["247.75", "for example  fib 3) shows up twice "], ["250.92", "so as we look at the call tree  we see that there is a lot of overlap in the"], ["255.87", "various sub-problems "], ["258.85", "and we'll be able to take advantage of that as we think of a more"], ["261.51", "computationally efficient way to compute fib "], ["266.51", "so how many calls does it take to compute fibonacci n)  "], ["270.04", "let's let t n) equal the number of calls that we need "], ["273.31", "so we can sort of say  well  t n)   and now we can look at the structure"], ["277.19", "of the problem "], ["277.9", "and we can see that to compute fibonacci n)   we have to compute"], ["281.94", "fibonacci n-1)   which will take t n-1) calls  plus fibonacci n-2)  "], ["290.33", "which takes t n-2) calls"], ["293.11", "well  looking at the form of this equation  we can see that this"], ["296.95", "quantity basically approximately doubles with each increment to n  and"], ["302.75", "that suggests that the answer "], ["304.52", "we expect the answer to grow exponentially "], ["307.57", "now  it's not quite doubling  so the exponential won't involve the constant"], ["312.95", "2  but let's assume that it involves some constant alpha  so it"], ["316.84", "goes alpha^n  "], ["318.86", "so let's see if we can figure out what alpha is "], ["321.08", "so this equation here  if we assume that the form of t n) of n is alpha n)"], ["327.69", "  that suggests that alpha^n = alpha^ n-1) + alpha^ n-2) we'd like to"], ["336.86", "solve this for alpha  so let's divide both sides by alpha^ n-2) so i'm just"], ["344.55", "dividing both sides by the same constant  which is fine "], ["349.2", "ok  so now i'm going to simplify this into "], ["354.36", "that's alpha^2   and alpha^ n-1) over alpha^ n-2) is alpha  and then that"], ["360.84", "reduces to 1 "], ["362.75", "and i can go ahead and solve that  so i'm going to have to solve this for"], ["366.4", "alpha  and when i do so using the quadratic formula  i discover that"], ["371.42", "alpha = 1 + sqrt 5/2)   and that's a very magic number "], ["378.79", "it occurs in many interesting places  particularly in nature  it's called"], ["382.57", "the golden ratio "], ["383.535", "a good thing to remember as sort of part of your education is what the"], ["387.99", "golden ratio is  it's 1 plus the square root of 5/2 "], ["392.55", "and so what that suggests is that the number of calls that we have to make"], ["399.12", "in order to compute fibonacci n) is order of this golden ratio  which is"], ["405.97", "about 1 6^n  "], ["410.29", "in the code accompanying this lecture  we provided a definition of fibonacci "], ["415.89", "which we'll use to do some performance evaluations "], ["419.26", "one little detail we have to take care of before we start  though  is that"], ["423.21", "python really thinks that functions that keep calling themselves too many"], ["427.87", "times  too many levels of recursion "], ["429.96", "are probably in error "], ["431.62", "in order for our experiments to succeed  we're going to have to"], ["434.6", "convince python to let us do a large number of recursive calls  and we can"], ["440.95", "specify that using the set recursion limit function that is"], ["445.67", "inside the sys module "], ["447.14", "so we set it very high so that we can run our experiments without complaints"], ["451.15", "from the python system "], ["453.17", "ok  so let's go give this a try "], ["454.83", "we're going to save this out  and then do some functions "], ["459.38", "so for instance  we can ask for what fib 10) is "], ["463.23", "89 "], ["463.96", "and we can ask maybe what fib 20) is  "], ["467.04", "ok  that's a bigger number "], ["468.51", "you can see that the fibonacci sequence actually gets large quickly "], ["472.9", "how about fib 30)  "], ["476.61", "did you see there was a little bit more of a pause there "], ["478.53", "remember that the number of function calls is growing exponentially with"], ["482.05", "the size of the argument  so we had to make many  many more function calls in"], ["485.89", "order to compute fib 30) with the definition of fib that we have "], ["490.02", "how about fib 35)  "], ["494.01", "well  it's going to be somewhat larger  and you can see that i was"], ["498.23", "taking a considerable length of time to compute  and as we're going  the"], ["503.17", "run-time is sort of growing exponentially "], ["506.44", "how about fib 40)  "], ["509.64", "well  it's running away  and in fact  it will run away for"], ["513.33", "quite a long time "], ["514.26", "we'd have to sit on our hands  go out for a cup of coffee  maybe even lunch "], ["517.73", "and come back to get the answer here "], ["520.23", "if i interrupt this execution  you can see that we were many  many levels"], ["524.73", "deep in the recursive calls to the fibonacci "]], "Y0lczs-_w-I": [["0.25", "eric grimson  in this third lecture we are going to start building on our"], ["3.19", "ability to write simple programs "], ["5.74", "in particular  we're going to introduce the concept of iteration  or"], ["9.49", "how to repeat a method multiple times in order to reuse the computation to"], ["14.4", "execute something an arbitrary number of times "], ["18.1", "once we have iteration  we can start doing some interesting classes of"], ["21.82", "algorithms "], ["22.96", "starting with guess and check methods  the guess and answer  check it  and"], ["28.15", "then use the results to improve the guess "], ["31.72", "this will lead naturally to the idea of loop constructs  or mechanisms in"], ["35.97", "our language that let us generalize the idea of repeating a computation"], ["39.97", "until a particular condition is reached "], ["43.39", "this will let us generalize our guess and check methods to a broader group"], ["46.98", "of algorithms called successive approximation  and especially to a"], ["51.33", "very common and very powerful method called bisection search "], ["55.92", "at the end of this lecture you will be able to write simple algorithms that"], ["59.43", "solve numerical problems by improving approximate estimates of the answer to"], ["64.03", "get successively better guesses "]], "GometKBrL7E": [["1.19", "chris terman  by now  i hope you're getting the idea that we can tackle"], ["3.85", "the exponential cost of exhaustive search by structuring the problem so"], ["8.51", "as to generate recurring subproblems "], ["11.47", "then we can use memoization to look up the answer instead of recomputing it "], ["16.68", "our next example comes from the field of genomics research  where one of the"], ["20.38", "interesting computational problems is to figure out the alignment of two"], ["24.4", "genetic sequences "], ["27.63", "in this example  we're trying to find the minimum cost alignment between two"], ["31.19", "sequences  so here are two example four element sequences "], ["35.68", "if we consider an alignment where we basically start by lining up their"], ["40.04", "first characters  and going from there  we can see that  in this"], ["45.91", "particular case  there are three mismatches "], ["49.51", "in this column  this column  and this column the individual symbols don't"], ["53.27", "match  and so i would say the cost of this alignment is three times the cost"], ["58.48", "of a mismatch "], ["59.52", "so that will be a parameter that we can set  a cost of a mismatch "], ["64.069", "let's consider a different sort of alignment "], ["66.22", "suppose we start off by aligning the two first characters but assume that"], ["71.32", "the second character  in the first sequence  lines up with a gap in the"], ["75.34", "second sequence  and then we can continue the matching process like so "], ["81.76", "and then there's a final character in the second sequence  which we would"], ["85.08", "assume would line up with a gap in the first sequence "], ["87.98", "so here what we're considering is what happens if we start introducing gaps"], ["91.38", "into the process where some characters disappeared "], ["95.51", "this particular alignment  where we've made some assumption of the gaps in"], ["99.5", "each of the two sequences  would have a total cost of two times"], ["104.17", "the cost of a gap "], ["106.08", "what we'd like to do is to consider all possible combinations of matching"], ["111.24", "the symbol at any particular column or introducing a gap in one sequence or"], ["115.66", "the other  and once we've run through all possible combinations of"], ["119.89", "mismatches and gaps  we would like to choose the alignment"], ["123.23", "with the minimum cost "], ["126.26", "let's see how we can break the alignment process into subproblems "], ["130.72", "originally  we're given two sequences "], ["133.25", "let's say this one starts with a and some number of symbols afterwards  and"], ["137.64", "sequence two starts with a b and some number of symbols afterwards "], ["142.08", "there's actually three different alternatives we want to be"], ["145.46", "able to test out "], ["147.06", "in the first alternative  we assume that the two sequences match at their"], ["151.9", "starting symbol  and so the subproblem that we need to solve is basically to"], ["157.27", "align the rest of the sequences "], ["159.12", "we want the optimal alignment for the rest of the sequences "], ["162.28", "so all but the first character in the first sequence and all but the first"], ["167.07", "character in the second sequence "], ["169.27", "so we want to align those two  and then we'll simply account for the cost"], ["174.35", "of the alignment of the first symbol "], ["175.72", "so the cost is  well  if the first character in s1 isn't equal to the"], ["181.52", "first character in s2  then we have to increment the cost of the subproblem"], ["188.14", "here  increment the cost by the cost of a mismatch "], ["192.18", "however  if they were the same  if it turned out that was a and that was a "], ["195.65", "then we'd use the optimal alignment for the rest of the sequence and there"], ["201.18", "would be no additional cost "], ["203.91", "the second alternative is that the first character in a actually of the"], ["209.03", "first sequence  actually aligns with a gap in the second sequence "], ["212.29", "so this is sort of the problem we're looking at here "], ["214.88", "and so that means that the subproblem now  this is after we consider the"], ["218.79", "first character was the subproblem  the subproblem is that we need to"], ["223.28", "align the rest of this characters in the first sequence "], ["226.87", "so that's when we take off the first character because it's aligning with a"], ["229.73", "gap  with all the characters of the second sequence "], ["233.4", "and then when we get back the optimal alignment there  the first string will"], ["237.52", "have an a on it  and the second string  we'll put a gap "], ["240.85", "a dash to indicate a gap at the front "], ["243.5", "and the additional cost is going to be now the cost of a gap  so gcost "], ["249.99", "and finally  as a third alternative  we have the second"], ["253.52", "situation only reversed "], ["255.67", "in this case  we assume that the first character of the second sequence"], ["259.57", "aligns with a gap in the first sequence "], ["262.84", "so that's the situation we have  and now the subproblem is to align the"], ["268.14", "first sequence with the remaining characters in the second"], ["272.22", "sequence like so "], ["275.26", "and the cost  once we get back that optimal alignment  we can put these"], ["280.09", "two characters at the front  and we'll have the optimal alignment including"], ["283.55", "the first characters and the increment and the cost will be again  the cost"], ["288.23", "of another gap "], ["290.7", "so if we pursue this recursively  where we slowly consume the first"], ["294.3", "character of the sequence and then consider the three alternatives  we'll"], ["298.72", "eventually exhaust all possible combination of matches and gaps in the"], ["303.23", "two sequences "], ["304.88", "here's the implementation of the recursive alignment"], ["307.45", "procedure we just discussed "], ["309.47", "we start by dealing with termination of the recursion "], ["312.57", "so  for example  if the first sequences run out  we assume that it's"], ["317.5", "padded with gaps that match any remaining characters"], ["321.15", "in the second sequence "], ["322.67", "and similarly  for the second sequence  if it runs out "], ["325.76", "then we go off and consider the same three alternatives"], ["329.66", "we discussed earlier "], ["331", "the first symbols of the two sequences aligning or the first symbol of one"], ["335.77", "sequence aligning with a gap in the other "], ["337.95", "in each case  we go off and do a recursive call to compute the best"], ["344.33", "alignment of the remaining symbols  and then  add any cost penalties that"], ["349.63", "are incurred by the situation that we're dealing with "], ["353.75", "we've also included code that constructs the align sequences so we"], ["359.12", "can see what the optimal alignment has turned out to be "], ["363.39", "finally  at the end  of course  we choose to return the alternative that"], ["367.76", "has the cheapest cost among the three "], ["371.14", "we have a couple test cases down here at the bottom "], ["374.18", "one is a very simple alignment where we're aligning the sequence cat with"], ["378.73", "the sequence at  and then a longer challenge  which  and we'll see how"], ["384.39", "that turns out "], ["385.38", "and  as usual  we have our little test case "], ["387.99", "so let's start that up and see how it works "], ["391.23", "so first  let's test the alignment "], ["393.73", "of the simple sequence "], ["395.64", "so s1a and s1b  and as expected  we discover that the minimum cost"], ["401.22", "alignment involves a gap at the beginning of the second sequence "], ["406.22", "what about the longer of the two problems "], ["409.74", "now  as you might expect given that this is a lecture on dynamic"], ["413.51", "programming  we'll discover that  in this particular case  we don't get an"], ["418.46", "answer right away  and  in fact  we'd have to wait for a very long time"], ["421.44", "because exploring all the possible alternatives of where to put the gaps"], ["426.1", "is actually quite time consuming as the sequence gets longer and longer"], ["429.7", "and longer "], ["430.18", "the cost grows exponentially "], ["432.9", "so i'm going to terminate this  and now  we're going to see if there's any"], ["436.99", "overlapping subproblems "], ["438.46", "if there are overlapping subproblems  then i would assume that if we go off"], ["443.87", "and memoize the alignment procedure  now we would hope that trying to align"], ["452.88", "the longer sequences  so s2a with s2b  will actually result in an answer"], ["459.9", "quickly if there are overlapping subproblems that the memoization is"], ["464.47", "taking care or for us "], ["466.18", "and  in fact  you see we get the answer almost instantaneously "], ["468.58", "so that means there was a large number of overlapping subproblems  and you"], ["473.28", "can see that it suggests that the optimal alignment comes with the"], ["478.42", "insertion of two gaps leaving just one mismatch "], ["483.03", "so this c and that a  so one mismatch and two gaps was the optimal guess for"], ["488.5", "the alignment of those two sequences "], ["492.16", "well  there you have it "], ["493.36", "we've looked at three examples where dynamic programming could reduce the"], ["496.77", "exponential costs of our exhaustive search so that we can get the optimal"], ["502.14", "solution in reasonable time "], ["504.23", "we needed two properties to be able to do this "], ["506.67", "one was optimal substructure  where we had to be able to reduce the original"], ["511.96", "problem into a sequence of smaller but identical subproblems  and then we"], ["517.6", "could combine the answers from the subproblems into the answer for the"], ["521.429", "overall problem "], ["523.23", "and secondly  we wanted to have overlapping subproblems so we could"], ["527.28", "use memoization to look up the answers instead of having to recompute them "], ["533.24", "dynamic programming is not something we can apply to every optimization"], ["537.41", "problem  but it's always worth giving it a try to see if you can cast a"], ["540.35", "problem in a way that exhibits these two properties "], ["543.61", "if so  you're in luck and you should be able to get a computationally"], ["547.27", "efficient answer "]], "9i-VL98AuEY": [["0.78", "professor  in the last lecture we started talking about graphs  and we"], ["4.08", "saw the basic idea of a graph "], ["5.71", "we could represent objects as nodes  and connections and interactions"], ["9.75", "between those objects as edges "], ["12.01", "and then what we often wanted to do was to find a solution "], ["14.71", "an optimization "], ["15.63", "over that graph "], ["17.19", "and that was straightforward to understand when we were thinking about"], ["20.31", "graphs that represented physical networks "], ["22.83", "a transportation network  an electrical network  some other network"], ["26.62", "that moves things around "], ["28.01", "where in case of the transportation network  the nodes could be cities and"], ["32.119", "the edges would be flights between those cities "], ["35.35", "we saw as an example  we could find solutions like the cheapest flight or"], ["39.47", "set of flights from one place to another  or the one that took the"], ["42.42", "least number of legs or segments in the flight "], ["46.29", "but we can also use graphs to explore other kinds of systems "], ["49.58", "in particular  systems where we're really interested in the changes in"], ["53.88", "the state of a physical system "], ["56.61", "what does that mean "], ["57.545", "i might have a physical system like a plant  a power plant  some other kind"], ["61.29", "of plant  a manufacturing plant "], ["63.17", "and i want to have the states  or the nodes of the graph rather  represent"], ["66.95", "the states of the system "], ["68.69", "current configuration "], ["70.46", "and the edges in this case  would represent actions "], ["73.54", "things that cause a change in the state "], ["77.35", "open up a valve  close a valve  change the heat  something like that "], ["82.3", "and here  my graph search wants to find a sequence of actions that"], ["86.81", "converts the system to a desired state "], ["89.78", "now  let's look at an example "], ["92.46", "and here's what seems like a simple example  but actually a fun one "], ["96.4", "this is a little puzzle you may have had when you were a child"], ["98.67", "called the 8 puzzle "], ["100.68", "it has a set of 8 numbered tiles in a grid that has 9 spots "], ["105.31", "so there's one blank spot right here "], ["107.83", "and the idea is  i want to go from some initial state  such as the one"], ["111.35", "shown here "], ["112.68", "by sliding the tiles one at a time into the blank spot  i want to try and"], ["116.66", "figure out how do i convert the puzzle into some desired goal state "], ["121.08", "such as getting them all lined up in the proper order "], ["123.92", "so here process is slide any tile "], ["127.45", "and i want to find the sequence of slides that actually gets me to the"], ["130.34", "solution i want  the goal state "], ["132.65", "here's an example "], ["134.5", "there's my initial starting solution and here's the things i can do "], ["137.78", "i can start by doing a slide that moves 6 down into that spot  getting"], ["142.61", "it down where i want it to be "], ["143.64", "and then i could do another slide that moves 3 over "], ["146.22", "and that i'm going to do because i want to actually shift 4 up "], ["149.91", "now i'm in pretty good shape because you can see that this is going to let"], ["152.5", "me move 7 over and 8 down "], ["154.945", "now the bottom three tiles are now in the right place "], ["157.5", "and oh  i can also see now that if i bring 5 down  all i have left to do is"], ["162.25", "shift 2 over and then 1 over "], ["164.89", "and i'm done "], ["166.4", "nice and easy  right "], ["168.19", "and you can see here  i'd like to find that sequence of steps "], ["171.2", "you can also see it may not be trivial to find "], ["173.72", "so how could i turn this into a graph problem "], ["177.19", "well  a simple way would be to just think about representing it the way we"], ["181.07", "did with previous problems "], ["182.98", "i could take each state of the puzzle  each particular"], ["185.64", "arrangement of tiles "], ["187.08", "and i could represent that as a node in a graph "], ["189.39", "so every specific layout of tiles would be a different node in my graph "], ["193.28", "each edge of the graph would specify which tile i would slide to get to a"], ["197.99", "new state of the puzzle "], ["199.81", "so from one node there might be 2 or 3 possible edges that tell me different"], ["203.66", "ways i could slide a tile to get to a new state of the puzzle "], ["206.76", "and i could just then explore that space "], ["209.49", "here's the problem  how big is the space "], ["212.59", "well  i've got 9 spots in my grid "], ["215.71", "so in fact  there are 9 factorial  or 9 * 8 * 7 * 6 all the way down to 1 "], ["221.74", "different ways to arrange numbered tiles in that grid "], ["225.15", "and that says i've got almost 365 000 nodes in my graph "], ["230.01", "eh "], ["230.78", "that's big "], ["232.2", "worse  each node has either 2  3  or 4 edges because there's going to be 2 "], ["236.56", "3  or 4 tiles that i could slide into the open spot "], ["239.71", "and that says basically  that the graph has almost a million edges and"], ["245", "360 plus thousand nodes "], ["248.01", "i don't want to build a graph that big "], ["249.56", "that'd take forever "], ["250.63", "it's going to be huge "], ["252.03", "is there another way in which i could actually turn this into a graph"], ["255.3", "problem and solve it "], ["257.26", "and that's what we're going to talk about "]], "yBRf7ajFSTU": [["1.28", "professor  so let's use polyfit to find the line that best fits our data "], ["5.73", "so what we've done here is created a new python procedure called fitdata "], ["10.39", "and it's just like plotdata except that we've added a call to polyfit in"], ["15.74", "which we give it the forces and the observed extensions and ask it to find"], ["20.17", "the equations of the line so that the predictions best fit the observations "], ["26.46", "then we go off and use those parameters to make a bunch of"], ["31.75", "estimates for what the y value should be  the extension should be  based on"], ["36.56", "the forces that we're applying "], ["38.04", "and here  we're using the predictive power of our mathematical model  and"], ["42.29", "we're going to plot that line on the graph "], ["44.73", "and finally  since the slope of the line is 1 over k "], ["48.41", "this is the slope  so that means that k is equal to 1 over the slope "], ["52.96", "and we'll also put that on our plot "], ["55.75", "so let's go off and run this procedure on the data values "], ["60.58", "so i've already saved this out "], ["61.95", "so we'll start the execution  and hopefully up we'll plot "], ["65.89", "here it is "], ["67.55", "and here's the line "], ["68.98", "we can sort of see it here "], ["70.86", "and you can look at that and say  well  ok that's certainly the best fit"], ["75.07", "line  i suppose "], ["76.4", "it does the best job it can of sort of minimizing the sizes of the squares of"], ["83.57", "the errors here "], ["84.72", "but it doesn't look like the best fit "], ["86.48", "it seems something here about it we don't like "], ["88.91", "maybe hooke's law is wrong "], ["91.17", "maybe there's a different curve here that would actually fit the observed"], ["94.99", "points better "], ["96.06", "so just for grins  let's try to invent terman's law "], ["100.07", "so what terman's law is  in fact  that there's a cubic relationship between"], ["105.42", "the force that's supplied and extension  rather than a linear"], ["108.52", "relationship "], ["109.51", "so let me start off by commenting out the call to fitdata "], ["113.71", "and here i have a new procedure  fitdata1 which uses polyfit to fit a"], ["120.27", "cubic equation to the observed data "], ["124.19", "and let's plot those results "], ["125.44", "so i'm going to make it so we run this guy "], ["128.27", "and i'm going to save him out and then start execution "], ["132.4", "and here's the resulting plot "], ["134.3", "and in fact  this actually looks better "], ["136.04", "maybe terman's law has something going for it here "], ["140.53", "the curve looks much closer to all the points than the original linear fit "], ["145.92", "so maybe hooke got it wrong and modern springs are much more sophisticated "], ["150.65", "they obey this sort of cubic relationship between the force that's"], ["154.21", "applied and extension that's observed "], ["157.36", "well how do we figure this out "], ["159.27", "i mean  here we fitted some data  and we're sort of saying  gosh  it"], ["162.63", "certainly looks like that's a better fit "], ["165.04", "well  one of ways we can evaluate the power of a model is"], ["169.92", "its predictive power "], ["171.5", "so what i want to do  i'm going to start by  let's comment this guy back"], ["174.92", "out again  and look at that fitdata2 which is just like fitdata1 except"], ["179.9", "what i've done is that when i'm going to use the model for predictions  i'm"], ["185.11", "going to ask it to predict the extensions created by"], ["188.67", "applying heavier weights "], ["190.25", "we didn't make these measurements  but we sort of expect the spring to keep"], ["194.43", "stretching as we apply higher and higher weights to it "], ["198.9", "so everything is just the same "], ["200.31", "we are still doing a linear fit here and a cubic fit here "], ["205.36", "let's see what happens when we run this and plot the results "], ["209.02", "so we're trying to use our model here to determine the predictive power of"], ["214.25", "terman's law which hypothesizes a cubic relationship between the"], ["219.25", "extension and the force applied "], ["221.09", "so we're going to save this out and then run it "], ["225.6", "ok  here's the results "], ["227.86", "oops "], ["229.41", "we did a pretty good job of matching our curve to the observed data  but"], ["234.08", "when we went off and asked about some predictions  so here's what the"], ["237.15", "prediction extension is as we add additional force to"], ["240.76", "the end of the spring "], ["241.6", "and even though we're pulling on the spring harder  all of a sudden the"], ["244.77", "extension is getting smaller and smaller "], ["246.31", "the spring is no longer stretching "], ["247.74", "it's shrinking when we pull harder on it "], ["249.96", "well  gosh  that doesn't seem quite right "], ["253.3", "so even though we've managed to find a way to fit the curve to the observed"], ["259.55", "data  it turns out the predictive power of terman's law is bunk "], ["263.43", "it's simply predicting behavior in a spring that"], ["266.94", "doesn't seem very sensible "], ["268.38", "and we would certainly expect displacement of the spring to continue"], ["273.45", "to get longer as we pulled on it "], ["275.48", "so let's give up on terman's law and actually think a little bit about what"], ["279.77", "we saw in the data "], ["280.91", "so when we looked at the data  what we saw is that it"], ["284.47", "flattened out at the end "], ["286.53", "and so what i was thinking of is "], ["289.8", "well actually  let's put that plot back up while we're sitting here "], ["294.31", "if we look at this sort of flattened data here  we can see the curve"], ["297.79", "flattens out at a point "], ["299.37", "so it looks like hooke's law may  in fact  with some observational errors"], ["306.61", "in our measurements that we made  it looks like hooke's law might be ok "], ["310.34", "it's just that these last data points show that the spring has stopped"], ["314.15", "stretching "], ["315.29", "and we might hypothesize instead of terman's law with a cubic"], ["318.92", "relationship  we might just say  look  hooke's law applies to the point at"], ["323.15", "the spring reaches its elastic limit "], ["325.54", "in other words  when it stops behaving as a spring and now just behaves as"], ["329.61", "sort of like a rigid rope or a cable of some sort "], ["333.53", "in other words  it doesn't get any longer just because you hang more"], ["336", "weight on it "], ["336.96", "so maybe what we should do is try getting rid of these last points and"], ["341.75", "seeing if hooke's law does a better job of doing the projection "], ["345.64", "so we're going to come back here and go ahead and comment this guy out and"], ["350.04", "look at fitdata3  which is just like fitdata1 except that what we've done"], ["355.69", "is to eliminate the last six values  the values that we feel that"], ["359.35", "correspond to the spring having reached its elastic limit "], ["363.36", "so let's go ahead and run this "], ["365.62", "so let's comment that back in again  save that  and run it and see what the"], ["371.9", "plot produces "], ["373.31", "and voila "], ["374.95", "without that flattening out of the curve  we actually have a fairly good"], ["379.67", "fit to the data "], ["381.95", "in other words  there's still some amount of measurement error  but now"], ["388.91", "the curve seems to fit better "], ["390.71", "and in a couple minutes  we'll talk about what a measure of the goodness"], ["394.98", "of the fit  but we're pretty happy or certainly happier with this fit than"], ["399.73", "with either the cubic fit  which mispredicted  or the original fit "], ["403.26", "which just didn't seem to fit the points at all "], ["406.36", "so this raised the question  are we just allowed to eliminate points we"], ["410.33", "don't like "], ["410.9", "i mean  suppose i eliminated all but two points "], ["413.28", "i'm going to keep this point and that point "], ["415.2", "and then i would discover that i can make a perfect prediction "], ["417.72", "you can always put a line through two points "], ["420.15", "so why was it i felt comfortable eliminating those last six points and"], ["424.53", "i'm not running around eliminating some other points here that seemed"], ["427.57", "like embarrassments or making it harder for me to show that hooke's law"], ["433.43", "is the right equation "], ["435.88", "and the answer is  well  i had a theoretical justification "], ["438.32", "i hypothesized this notion that there was an elastic limit to the spring "], ["442.75", "and as soon as i saw that the length wasn't growing as i added extra"], ["447.22", "weights  i said  ok  maybe what i should do is to consider that a"], ["452.94", "different regime "], ["453.84", "hooke's law wouldn't apply there "], ["455.77", "but i am expecting hooke's law to apply for all of these measurements "], ["458.84", "so i'm not allowed to willy nilly just get rid of points i don't like "], ["462.83", "i really do need a theoretical justification "], ["465.32", "but with that justification in hand  i think we can make a fairly good"], ["469.19", "prediction that the spring constant of the spring is somewhere around 15 1/2 "]], "OEoXaMPEzfM": [["0.27", "lila fisher  hi  welcome to edx "], ["2.72", "i'm lila fisher  an edx fellow helping to put"], ["5.43", "together these courses "], ["7.16", "as you know  our courses are entirely online "], ["10.83", "so before we start learning about the subjects that"], ["12.88", "brought you here  let's learn about the tools that you will"], ["15.89", "use to navigate through the course material "], ["19", "let's start with what is on your screen right now "], ["22.07", "you are watching a video of me talking "], ["25.17", "you have several tools associated with these videos "], ["27.89", "some of them are standard video buttons  like the play"], ["30.59", "pause button on the bottom left "], ["32.92", "like most video players  you can see how far you are into"], ["36.36", "this particular video segment and how long the entire video"], ["39.63", "segment is "], ["41.17", "something that you might not be used to"], ["42.79", "is the speed option "], ["44.59", "while you are going through the videos  you can speed up"], ["47.32", "or slow down the video player with these buttons "], ["50.25", "go ahead and try that now "], ["51.88", "make me talk faster and slower "], ["54.32", "if you ever get frustrated by the pace of speech  you can"], ["57.41", "adjust it this way "], ["59.16", "another great feature is the transcript on the side "], ["62.32", "this will follow along with everything that i am saying as"], ["65.099", "i am saying it  so you can read along if you like "], ["68.43", "you can also click on any of the words  and you will notice"], ["71.36", "that the video jumps to that word "], ["73.64", "the video slider at the bottom of the video will let you"], ["76.58", "navigate through the video quickly "], ["78.66", "if you ever find the transcript distracting  you"], ["81.48", "can toggle the captioning button in order to make it go"], ["83.94", "away or reappear "], ["86.23", "now that you know about the video player  i want to point"], ["88.57", "out the sequence navigator "], ["90.52", "right now you're in a lecture sequence  which interweaves"], ["93.43", "many videos and practice exercises "], ["95.94", "you can see how far you are in a particular sequence by"], ["99.09", "observing which tab you're on "], ["100.91", "you can navigate directly to any video or exercise by"], ["103.74", "clicking on the appropriate tab "], ["105.61", "you can also progress to the next element by pressing the"], ["108.31", "arrow button  or by clicking on the next tab "], ["111.1", "try that now "], ["112.36", "the tutorial will continue in the next video "]], "nf-d1FFE-bE": [["0.59", "professor  in our first example  we're going to work on a specialization of"], ["3.7", "the bin packing problem called the knapsack problem "], ["6.6", "here we're going to have a single bin  and our goal is to find a collection"], ["9.92", "of objects that fit into the knapsack but that maximize the"], ["13.54", "value when it's full "], ["16.379", "we'll also meet the greedy algorithm  an efficient little computation that"], ["20.81", "can be used to come up with acceptable solutions for many"], ["23.9", "optimization problems "], ["25.88", "it looks like it's going to be a good night for our burglar "], ["28.83", "he's found a mansion and nobody's at home "], ["32.02", "he arrives and with him he's brought a knapsack  and the maximum weight the"], ["36.27", "knapsack can hold is 20 kilograms "], ["41.89", "when he gets inside  the burglar discovered he's facing a challenge "], ["45.16", "there are many items to choose between  each with their"], ["47.78", "own value and weight "], ["50.42", "the burglar remembers that his knapsack can only hold 20 kilograms "], ["54.66", "so expressed as an optimization problem  the burglar wants to maximize"], ["60.055", "the sum of the values of the objects that he's taking "], ["64.12", "ok "], ["64.72", "but  he also realizes that the sum of the weights of all the values that"], ["69.5", "he's taking has to be less than 20 "], ["72.88", "this type of optimization problem is called the 0/1 knapsack problem "], ["77.41", "0/1 because either you can take nothing of an object"], ["80.9", "or all of an object "], ["82.43", "so you can either take a whole clock "], ["84.66", "that would be  in a sense  represented by a 1 "], ["87.16", "or not take any part of the painting  that would be represented by a 0 "], ["91.36", "and you have that choice for each of the objects "], ["94.11", "so it's really up to the burglar to find some combination of items to take"], ["99.45", "and items to leave behind that meet his weight constraint but maximize the"], ["103.88", "total value of the goods in this knapsack "], ["106.59", "this problem gets harder as the number of items grows "], ["110.3", "that's because  as there's more and more items  there's more different"], ["113.98", "combinations to consider when trying to maximize value within the weight"], ["117.94", "constraint "], ["119.62", "our burglar's going to solve this problem by using a greedy algorithm "], ["123.07", "here's how that works "], ["124.27", "at each step  he's going to choose the best of the remaining items subject to"], ["130.09", "the constraint that it will fit in the remaining weight"], ["133.45", "allowance of his knapsack "], ["135.63", "best  how does he determine best "], ["137.4", "well  he's going to use some metric  and he can use that to evaluate the"], ["141.65", "goodness of each of the choices "], ["143.42", "and he'll choose the one that scores highest on the metric "], ["146.49", "one possible metric is to choose the remaining item that has the greatest"], ["150.94", "value  or if there's more than one with the same greatest value  just"], ["154.66", "arbitrarily choose "], ["156.53", "the reasoning here is that by maximizing the value at each step  he"], ["161.52", "hopes to maximize the total value of his knapsack "], ["165.72", "he might decide to try to use minimum weight objects "], ["169.25", "here the theory is that if he fills up on the lighter objects first  perhaps"], ["173.44", "a greater number of objects will actually result in a"], ["178.01", "greater total value "], ["179.96", "or he might sort of try to choose objects that have the best value to"], ["185.89", "weight ratio "], ["187.37", "whichever metric he uses  the burglar's basically adopting the"], ["191.76", "strategy of choosing a locally optimal item in the hopes that a series of"], ["199.99", "locally optimal choices will lead to the global optimum of coming up with"], ["204.65", "the greatest value of goods "], ["206.8", "then he simply repeats that first step until his backpack is full "], ["211.85", "the burglar likes the greedy algorithm  because it's easy to"], ["215.04", "implement and because of its straightforward nature  will actually"], ["218.8", "perform quite well even when the number of objects is large "], ["223.03", "so which of these metrics should the burglar choose "], ["226.25", "as it turns out  none of these metrics actually produces the optimal result"], ["232.03", "in all cases "], ["233.73", "by that  i mean that if the burglar always uses one of the metrics to"], ["237.51", "choose items  he may end up with a sack of items which has less total"], ["243.49", "value than would have been possible "], ["245.68", "moreover  none of these metrics is always better than the other metrics "], ["251.77", "so even if the burglar is willing to do with a less than optimal solution "], ["255.82", "it's still the case that if he chose a different metric  he might end up with"], ["260.149", "a more valuable bag of items than in certain situations "], ["264.35", "so in other words  a certain combination of items in which max"], ["266.72", "value does best  and there's other combinations in which"], ["269.9", "min weight does best "], ["271.75", "sadly  the burglar comes to the realization that the greedy algorithm"], ["275.26", "is heuristic for the 0/1 knapsack problem "], ["279.02", "in other words  the choices that are made aren't guaranteed to produce an"], ["283.15", "optimal result "], ["285.29", "there are situations where the greedy algorithm does"], ["288.26", "produce an optimal result "], ["290.35", "consider a situation where the materials that the burglar is thinking"], ["294.31", "about choosing between are  in fact  infinitely divisible "], ["297.37", "he can take as much or little of each one that he wants "], ["300.52", "that's why it's called the continuous knapsack problem "], ["303.76", "so for example  suppose there were three barrels of liquids  one"], ["308.09", "containing water  one containing oil  and one containing wine "], ["312.06", "it turns out that if the burglar pursues a greedy algorithm with a"], ["316.43", "metric of choosing the liquid that has the greatest value per weight  then"], ["320.72", "he'll find an optimal solution "], ["322.45", "and so what he'll do is choose the most valuable liquid  and either fill"], ["326.115", "up his backpack with that  or if it runs out early  he'll move to the next"], ["329.77", "valuable liquid "], ["331", "and if he pursues that strategy  he'll end up with the most valuable contents"], ["335.64", "in his backpack "]], "MJ4baVLD4uU": [["1.02", "collin m  stultz  so my name is collin stultz "], ["2.37", "i'm a faculty member at mit in the department of electrical engineering"], ["6.045", "and computer science  and also in the division of health sciences and"], ["8.96", "technology "], ["9.62", "i am also a clinical cardiologist who still sees patients "], ["13.49", "and i have an interest in combining computational methods with medicine to"], ["19.19", "make statements about patients  statements that will help to improve"], ["22.44", "the lives and quality of people who are sick "], ["25.81", "and today  i'm going to talk about some methods that we've been working"], ["28.63", "on to combine sophisticated computational algorithms to make"], ["33.27", "statements about patients with cardiovascular disease "], ["35.93", "cardiovascular disease is a big problem "], ["38.59", "in fact  everybody has atherosclerosis "], ["40.79", "it doesn't matter how young or how old you are "], ["42.87", "atherosclerosis is actually a disease of the juvenile "], ["45.58", "and the problem is that  although everyone has it  some people will die"], ["49.16", "from it and some people won't "], ["50.97", "so a huge challenge in clinical cardiology is to identify those"], ["56.08", "patients who have atherosclerotic heart disease who are"], ["58.62", "going to die from it "], ["59.88", "and this slide demonstrates that atherosclerosis is a huge problem "], ["64.769", "about every 30 seconds in the united states  somebody dies of heart attack "], ["67.99", "and about half a million people die each year "], ["71.06", "so it's about a quarter of all deaths in the us "], ["72.83", "and these are statistics from just a few years ago "], ["75.55", "and although we know that everybody has atherosclerosis "], ["78.76", "we know a lot about the disease "], ["80.18", "we're horrible in trying to identify those who will die "], ["83.64", "so if you look at the whole pie of people who die from atherosclerotic"], ["87.15", "heart disease  we only can identify a small fraction of those who will "], ["91.66", "so our goal  at least one of the goals of my research group  is to develop"], ["96.19", "predictive models that help our ability to identify patients with high"], ["100.04", "risk of death "], ["101.19", "so when you think about atherosclerosis  what really happens"], ["105.31", "when somebody has a heart attack "], ["106.59", "well  here in this picture is the classic photo of somebody having chest"], ["111.28", "pain due to heart disease "], ["114.28", "clutching his chest "], ["115.35", "it usually feels like a pressure that comes down on your chest "], ["118.21", "it's typically described as an elephant sitting on your chest "], ["121.55", "and this type of event is correlated with something that has been very well"], ["126.79", "described in the literature "], ["127.77", "a lot of studies have been done to say what causes this type of pain that"], ["131.19", "leads to adverse events "], ["132.96", "so if you were able to open this man's chest to decipher the actual things"], ["138.49", "that are going on  you'll find that here's the heart "], ["142.14", "and this is a blood vessel which supplies blood to a"], ["145.25", "region of the heart "], ["146.66", "and in a heart attack  this blood vessel becomes blocked "], ["149.52", "you have this thing which builds up within the lumen of the vessel called"], ["153.16", "an atherosclerotic plaque "], ["155.12", "so this heart muscle normally was being profused by blood  but this"], ["158.84", "blockage happens "], ["160.44", "and it grows all of a sudden "], ["162.28", "and this blood vessel can no longer supply blood to"], ["164.97", "that area of the heart "], ["165.81", "and consequently  that heart muscle dies "], ["168.87", "and if you were to take a blow up of this picture  this is an actual"], ["172.23", "specimen taken from somebody who died of a massive heart attack "], ["175.29", "here is the atherosclerotic plaque "], ["177.95", "and what happens is it this plaque ruptures "], ["180.81", "and the blood  which sits in the lumen  comes into contact with all of"], ["183.79", "this bad stuff that's in the atherosclerotic"], ["185.64", "plaque  and a clot forms "], ["188.76", "and this process of breaking open the plaque involves lots of"], ["192.4", "inflammatory cells "], ["193.77", "so these are cells which are involved in an immune response "], ["198.5", "and these cells secrete substances which break open the plaque "], ["201.99", "there's a protective covering of collagen on top of this"], ["205.55", "atherosclerotic plaque that becomes ruptured because these cells secrete"], ["208.59", "enzymes that degrade the collagen "], ["211.09", "and that's what allows the blood to come into contact with all of these"], ["213.39", "bad materials with an atherosclerotic plaque  which leads to the formation"], ["216.27", "of this clot "], ["217.74", "so here's where computation could come into play "], ["220.06", "all of this was determined by biological methods  experiments that"], ["224.52", "are typically done in a laboratory with test tubes and gels and so forth "], ["229.72", "but the events that happen at this level  the enzyme that actually breaks"], ["232.63", "down collagen  these involve very  very small things that are typically"], ["238.02", "very hard to study experimentally "], ["241.43", "but what you can do with a computer is you can model these proteins "], ["244.98", "so we know what the structure of collagen looks like "], ["247.47", "we know the structure of the enzymes that degrade collagen "], ["250.37", "and we can put this molecule in a computer "], ["253.56", "we can do sophisticated calculations to get estimates of how this molecule"], ["256.959", "moves and how it gets degraded "], ["259.04", "and we can get insights into the motions of this protein that lead to"], ["262.3", "its degradation  which leads to rupture of this plaque  which leads to"], ["265.9", "formation of the clot  which leads to a heart attack "], ["268.71", "and so our group has been involved in doing a lot of sophisticated"], ["271.61", "computations along this line "], ["273.5", "but that's really not what i'm going to talk about today "], ["275.83", "i'm going to talk about something that's a lot bigger "], ["277.78", "this is just an example to show you one avenue in which sophisticated"], ["281.15", "computational tools can be used to gain insights into the disease process"], ["285.2", "known as atherosclerosis and atherosclerotic plaque rupture "], ["289.35", "so now  what i'm going to talk about  if you go back to this mature"], ["291.97", "gentleman who's suffering from chest pain  this person  let's say  goes"], ["295.51", "into an emergency room or goes to his doctor "], ["299.7", "and the physician gets a lot of information about this patient "], ["303.44", "they can get electrocardiographic information "], ["305.91", "so that's what this is "], ["306.84", "and if you're familiar with shows like er or hospital  people come into the"], ["311.61", "emergency room "], ["312.22", "there are leads that are put on the patient's chest "], ["315.31", "and what's recorded is an electrocardiogram "], ["317.93", "so these are the same tracings that you may be familiar with from watching"], ["321.31", "popular television shows "], ["323.35", "you can get tracings that record blood pressure  how the blood pressure"], ["326.67", "changes over time  and different tracings that record pressures within"], ["330.26", "various parts of the vascular tree "], ["332.3", "so now  this electrocardiogram "], ["333.65", "maybe a lot of you have had these done before or know somebody who's had them"], ["337.46", "done before "], ["337.89", "it's very easy to obtain "], ["339.98", "and the question that we're posing is   can we use data like these that are"], ["346.71", "easy to obtain  that are obtained on a lot of people  to try to identify"], ["350.57", "whether this person is going to die or not  "], ["352.85", "he may be having a heart attack  but he can survive his heart attack and"], ["356", "live the rest of his life in a productive manner "], ["358.61", "or he could have a heart attack and die "], ["359.79", "and we want to identify those patients who have high risk of death after a"], ["363.42", "heart attack "], ["365.15", "so as i've said  lots of information can be recorded for my gentleman when"], ["368.85", "he's well and when he's sick "], ["371.82", "and this stuff is cheap  easy to obtain  and we want to see how we can"], ["376.11", "use this to improve our ability to identify patients who die "], ["380.06", "so again  we're interested in using easily obtained data that are low-"], ["383.87", "cost to improve our ability to identify patients of high risk of what"], ["388.13", "we call adverse cardiovascular events  of which the worst is death "], ["392.54", "now  one thing to note about the surface electrocardiogram "], ["394.84", "it encodes a lot of information "], ["396.24", "and this is a normal ecg strip  ecg being electrocardiogram "], ["402.74", "this  what i'm circling here  is one beat "], ["405.52", "it constitutes one beat of the heart "], ["407.86", "and what you notice is that there are three peaks associated with the"], ["410.88", "electrocardiogram "], ["411.52", "there's what we call the p wave  a qrs complex  and a t wave "], ["415.39", "and it repeats in a quasi-periodic fashion  pretty regular "], ["421.07", "now  a healthy electrocardiogram tells you a lot about the patient "], ["424.65", "it tells you that the patient's myocardium  the heart muscle  is for"], ["429.19", "the most part normal "], ["430.93", "the electrocardiogram records electrochemical impulses as they"], ["434.18", "traverse through the heart "], ["435.97", "and you need a normal myocardium  normal heart muscle  to have a normal"], ["439.33", "electrocardiogram "], ["441.38", "the heart  however  is not by itself "], ["444.24", "it's not an island by itself "], ["445.42", "it interacts with other things "], ["446.83", "and there's the nervous system  which sends nerves to the heart  which helps"], ["450.91", "to innervate the heart "], ["451.82", "so the heart responds to nervous stimulation "], ["456.65", "the classic example is the flight or fight response "], ["460.22", "if you're running away from something that you're scared of  or if you"], ["463.7", "become nervous at times  your heart starts to be faster "], ["466.47", "that's because your nervous system is telling your heart to do so "], ["470.32", "so a normal electrocardiogram tells you about the heart rate  tells you"], ["474.12", "about the interaction of the nervous system with the heart  and it tells"], ["476.84", "you about the myocardium "], ["478.23", "we call it the endogenous factors "], ["480.54", "the myocardium "], ["481.23", "because that's intrinsic to the heart itself  and exogenous factors "], ["485.17", "interactions with the nervous system "], ["487.11", "and the nervous system is a combination of two types of systems"], ["489.87", "that's not too important for this discussion  but are called the"], ["492.24", "sympathetic and the parasympathetic system "], ["494.54", "so again  when a cardiologist gets an electrocardiogram  he or she looks at"], ["498.27", "it in a gross fashion and  to assess the health of the myocardium  the"], ["503.75", "endogenous factors "], ["505.24", "and you can look at the heart rate as well from the electrocardiogram "], ["509.02", "variations in the heart rate to determine the health of exogenous"], ["512.549", "factors  and how that interacts with the heart and how those exogenous"], ["515.559", "factors affect the heart "], ["517.2", "now  there are a number of automated approaches to try to analyze an"], ["520.82", "electrocardiogram to determine who's at risk of bad events and who's not "], ["525.81", "but a lot of those automated methods only focus on looking at changes in"], ["529.38", "the heart rate  only really look at the exogenous factors "], ["533.18", "so our hypothesis is that we can use computers to evaluate the"], ["538.93", "electrocardiogram to look at both endogenous and exogenous factors to"], ["543.73", "get an overall picture of the health of the patient  and thereby improve"], ["548.44", "risk stratification for cardiovascular death  cvd for short "], ["553.49", "now  a cardiologist "], ["554.37", "even the most well-trained cardiologist "], ["557.22", "looks at an electrocardiogram  but it's very hard for he or she to"], ["560.57", "determine very subtle differences between beats  very subtle"], ["563.72", "abnormalities "], ["564.52", "we're very good at detecting big things "], ["566.83", "so if there are large changes in the qrs complex  large changes in t wave "], ["571", "or the parts of the beat "], ["573.9", "but very small change that might be there  it's very easy to miss"], ["577.75", "with the naked eye "], ["578.59", "but that's the sort of thing that computers do exceptionally well "], ["582.23", "computers can look at beats and can quantify the differences in them  even"], ["586.64", "though the differences can be quite minuscule and hard to detect by the"], ["590.58", "naked eye  even by a specialist "], ["593.63", "so we want to develop metrics to quantify subtle variability in the"], ["599.11", "morphology of signals  and how beats change over time "], ["603.09", "and the hypothesis is that beats that change a lot over time indicate an"], ["607.93", "unstable system and are associated with patients who are at high risk of"], ["614.7", "cardiovascular death "], ["616.53", "so in this work  which parenthetically is pioneered by myself  john guttag "], ["622.5", "who's a colleague of mine  in the computer science  electrical"], ["625.03", "engineering and computer science department "], ["627.02", "and professor zeeshan syed at the university of michigan "], ["630.02", "so if you take a normal electrocardiogram "], ["631.77", "and remember  the goal now is to detect subtle variations in the"], ["634.94", "electrocardiogram over time "], ["636.91", "we pre-process it to remove bad beats  beats that are really abnormal  that"], ["641.64", "maybe are caused by noise or other sorts of other things that really can"], ["647.14", "cloud our ability to make rigorous statements about the patient "], ["650.49", "then  for every pair of beats within the ecg  we can align them and compute"], ["656.68", "what we call the morphology differences between"], ["659.24", "consecutive heart beats "], ["661.36", "and from that  we get what's called a morphology difference time series "], ["666.11", "so for every pair of beats  we compute the differences  and"], ["668.5", "we get a time series "], ["669.92", "and then we summarize the variability in this time series to get what we"], ["672.85", "call the morphologic variability measure "], ["674.77", "now  the key aspect of this whole approach is this "], ["677.34", "it's a rigorous method to compute differences in the morphology between"], ["681.14", "consecutive beats "], ["682.99", "so how do you do that "], ["684.58", "well  if you have  this is one beat "], ["686.14", "remember  from one of the previous slides  a beat is composed of several"], ["690.04", "different peaks "], ["690.94", "there's a p wave  a qrs complex  and a t wave "], ["694.47", "so let's say these are two beats that occur in the patient "], ["696.56", "the beats can vary by very subtle means as a ecg strip is being"], ["701.47", "recorded  as the data are being obtained "], ["704.17", "if you want to take just two beats and line them up with one another  you can"], ["708.58", "take a look at this beat  look at all of the samples associated with this"], ["711.15", "signal  look at all the samples associated with this signal  line them"], ["714.7", "up  and just subtract them to get a difference between those beats "], ["718.72", "but there's a problem with that "], ["720.83", "if the beats vary by a lot in terms of their length  then you may end up"], ["725.43", "pairing up this portion of the t wave at the region of the beat that doesn't"], ["728.82", "correspond to the same physiologic event "], ["731.29", "the t wave corresponds to something very specific  as does the qrs and as"], ["735.23", "does the p wave "], ["736.63", "so really  when you align beats and when you compare them  you want to"], ["739.44", "make sure that you're comparing the same physiologic things "], ["743.98", "so there is an algorithm that we use called dynamic time warping to align"], ["751.57", "these beats  to ensure that they correspond to the"], ["754.17", "same physiologic event "], ["755.83", "similar algorithms are used in the area of computational biology to align"], ["759.4", "sequences  sequences of amino acids  sequences of"], ["763.8", "nucleic acids  dna  protein "], ["766.93", "and really  essentially  you just want to make sure that you're comparing"], ["770.81", "apples with apples  t waves with a t wave  qrs with a qrs  and a p wave"], ["774.74", "with a p wave "], ["776.15", "and then  once this pairing is done using this dynamic time warping"], ["779.28", "algorithm  we can subtract the differences and get"], ["781.64", "a meaningful result "], ["783.76", "so quickly  to summarize "], ["785.27", "we have our electrocardiographic strip "], ["788.37", "we take two beats  we line them up  we perform dynamic time warping akin to a"], ["794.67", "sequence alignment  what is done in computational biology "], ["797.26", "and we get a number "], ["798.94", "we look at the next pair "], ["800.06", "we do the same sort of comparison "], ["802.03", "we line them up and we get another number "], ["804.15", "similarly  we do this for the next sequence of beats "], ["806.14", "we get another number "], ["806.79", "and we get this morphologic difference time series "], ["812.34", "so this is time on the x-axis and this is the value on the y-axis that"], ["817.48", "correspond to these differences "], ["818.68", "so lots of variation here in this signal means that there's lots of"], ["822.98", "changes in the heartbeat over time "], ["824.61", "even though these changes might be subtle  they'll be captured  because"], ["827.44", "computers are very good at computing these differences"], ["829.67", "and doing the alignment "], ["831.3", "and so then from that  we can use this time series to compute measures of the"], ["834.82", "variability of the underlying signal "], ["836.76", "so again  morphologic distance time series captures both differences in"], ["840.17", "the heart rate  because different heart rates means the length of the"], ["843.28", "beats are different "], ["844.67", "and that will give you a nonzero difference when you align the beats"], ["847.44", "and when you compute the distance measure between them "], ["850.52", "and so both in the heart rate  as well as the morphology  even if the heart"], ["854.17", "rate is constant and the lengths of the beats are the same  if there are"], ["860", "morphology differences "], ["861.15", "so if the t wave looks slightly different one beat to another  the qrs"], ["864.85", "complex looks slightly different one beat to another "], ["867.09", "it'll be captured in this morphologic distance time series as well "], ["870.32", "so it encapsulates both the exogenous and endogenous factors"], ["875.09", "that affect the heart "], ["875.62", "it's something that we stated that we wanted to address at the"], ["878.17", "outset of this talk "], ["879.69", "now  myocardial ischemia "], ["881.112", "by ischemia  i'm referring to what i talked about in one of the very"], ["883.97", "earlier slides "], ["885.67", "when you have a vessel that supplies the heart  there's a blockage that"], ["888.89", "develops in that vessel  and then the heart is denied blood "], ["892.38", "that's what ischemia means  just denying blood to the myocardium  to"], ["895.25", "the heart muscle  leads to abnormal repolarization  abnormal electrical"], ["898.83", "conduction "], ["900.06", "and it can cause subtle changes in the electrocardiogram "], ["902.31", "so these are the endogenous and the exogenous factors "], ["905.43", "this is what a typical morphologic distance time series looks like "], ["908.03", "so this is time and this is the dynamic time warping morphology"], ["910.66", "difference "], ["911.08", "looks like a mess  right "], ["912.51", "it's very hard for any person to look at this and be able to say with any"], ["916.03", "certainty whether this patient is at high risk or not "], ["920.46", "now  with the computer  what we do is we take a look at this and we can"], ["923.91", "quantify this in a very straightforward manner "], ["926.89", "we can do this both in the time domain  or we can look at the power"], ["930.59", "spectrum  do a fourier transform  and look at in the frequency domain to"], ["935.14", "develop various metrics "], ["937.29", "so how do we develop this measure "], ["939.08", "so we have a list of patients from a database "], ["941.07", "we have a database of patients who all had heart attacks "], ["944.81", "and some of them died  some of them did not "], ["947.21", "and they all had holter monitors  which are devices that can record your"], ["950.26", "electrocardiogram for a long period of time "], ["952.66", "and we used this database to be able to develop our methods "], ["955.97", "so when you look at the morphologic distance time series and then you look"], ["959.88", "at it in the frequency domain  is there a particular frequency band that"], ["963.76", "carries prognostic information "], ["965.68", "so what i mean by that is you have your time series signal  you transform"], ["970.37", "that to the frequency domain  and you have a list of frequencies and you"], ["973.62", "have the power spectrum "], ["974.83", "so is there a particular range of frequencies that are more meaningful"], ["977.59", "than others "], ["978.54", "so we sub the power in a particular frequency band to determine the"], ["982.32", "patient's risk "], ["983.07", "and we have to determine what band is appropriate "], ["984.77", "so we use this disperse2 data set of these patients "], ["989.14", "some patients who died and some who did not die "], ["991.69", "but all of them have had a heart attack "], ["994.24", "and we use that to derive parameters for this model "], ["996.9", "we created a heat map where we looked at the prognostic information on all"], ["1000.42", "possible frequency bands "], ["1002.18", "so here "], ["1002.87", "this is the upper band limit "], ["1004.07", "this the lower band limit "], ["1005.03", "and the colors here is an assessment of the predictive value within that"], ["1009.69", "frequency band "], ["1010.64", "this is a plot of "], ["1012.05", "for those you who are familiar with it "], ["1014.32", "the area under the curve from the receiver operating"], ["1016.5", "curve for this predictor "], ["1019.91", "and we found a particular diagnostic frequency that was"], ["1022.26", "actually very useful "], ["1023.97", "and once we developed this on disperse  we took another set of"], ["1026.72", "thousands of patients "], ["1028.51", "the merlin timi-36 trial "], ["1030.619", "again  this was a trial that compared a drug called ranolazine to placebo "], ["1034.49", "but for the purposes of this  we were really interested in just the patients"], ["1037.119", "who didn't get a drug "], ["1039.089", "all of these patients  again  had heart attacks "], ["1040.98", "all of the them wore holter monitors to record the"], ["1042.66", "electrocardiographic signals "], ["1044.24", "some died "], ["1044.79", "some didn't "], ["1045.42", "and we wanted to see if this metric that was developed on some other data"], ["1048.349", "set could be used to predict who would die in this data set "], ["1052.99", "and sure enough  if you compute the morphologic distance time series  you"], ["1058.73", "sum the power with a particular frequency band  and you get a number"], ["1062.04", "for each patient "], ["1063.35", "those patients that have high numbers have lots of variability to the"], ["1066.01", "underlying signal "], ["1067.49", "and those are the patients that we call high risk "], ["1069.93", "those patients that have a low value for this measure  we"], ["1073.06", "say are at low risk "], ["1074.79", "and if you look here  this is called the kaplan-meier curve "], ["1078.69", "and this is the percent of people who died over time over the"], ["1082.7", "span of about a year "], ["1084.47", "the red is a death rate for patients who the algorithms"], ["1089.25", "says are at high risk "], ["1090.72", "and this is the death rate for patients that we say had low risk "], ["1094.86", "so what you see is that  sure enough  if the algorithm says that you have"], ["1100.62", "lots of variability in electrocardiographic signal  you're at"], ["1104.52", "a threefold increased risk of death "], ["1107.89", "and this is a p value which shows that these differences "], ["1110.76", "the statement here that's important is that this is statistically"], ["1114.46", "significant "], ["1115.92", "so this is really not by chance "], ["1117.72", "there's something really here "], ["1119.24", "and even if you look at different subgroups of patients  so if you look"], ["1122.35", "at patients who are mature  those are greater than 65  those that"], ["1125.42", "are less than 65 "], ["1126.85", "in all these groups  if the algorithm says that you have lots of variability"], ["1131.675", "to the underlying electrocardiographic signal  you are at an increased risk"], ["1134.36", "of death  even a fourfold risk of death if you don't have high blood"], ["1138.39", "pressure  threefold risk of death if you do  and so forth "], ["1142.08", "so it works in all patient populations that we've looked at thus far "], ["1147.49", "and if you look at this and you compare this to other sorts of"], ["1149.85", "metrics  other sorts of things that exist in the literature for predicting"], ["1153.82", "who's at high risk of death and who isn't "], ["1156.02", "measures called heart rate variability  deceleration capacity "], ["1160.84", "and so forth  as well as other metrics that are used in clinical practice "], ["1164.25", "of the electrocardiograph measures  the morphologic variability does quite"], ["1168.36", "well in terms of the hazard ratios "], ["1171.34", "so it says that you're about a twofold increased risk even after you control"], ["1176.08", "for all of these other metrics "], ["1178.22", "so it provides added value relative to these other metrics "], ["1182.98", "and you look at the ones  and we've just pointed out a few here that are"], ["1186", "used in clinical practice to show that it is on par and it provides added"], ["1189.98", "information to these other known things that are used to quantify"], ["1193.1", "patients' risk "], ["1194.52", "so in conclusion  i think the one upshot to get from here is that"], ["1199.66", "electrocardiographic information is easy to obtain and it"], ["1203.2", "has prognostic value "], ["1204.34", "it just requires sophisticated tools to do so "], ["1206.81", "so one method "], ["1208.41", "to talk about this in a broader framework "], ["1211.09", "we want to get information about a patient  evaluate the patient using"], ["1214.22", "current and past information  and choose an intervention "], ["1216.765", "in clinical cardiology  as in many areas of medicine  this is typically"], ["1220.16", "the paradigm that's followed "], ["1221.27", "and you perform an intervention that's going to affect the patient "], ["1223.95", "now  evaluation of the patient is perhaps the weakest link "], ["1227.29", "and by evaluation  i mean looking at the patient and trying to determine"], ["1230.42", "whether that patient is in trouble or not  getting sense of how sick that"], ["1233.81", "patient is "], ["1234.82", "and techniques from electrical engineering  computer science "], ["1236.88", "medicine  and physics and such can help in this endeavor "], ["1240.63", "so one other thing "], ["1242.62", "there exists a lot of information in physiologic signals that's"], ["1245.52", "unappreciated  physiologic signals that are cheap and easy to obtain  and"], ["1249.86", "can be gathered in a lot of different settings "], ["1253.92", "so we believe that by gathering all of this information  you can make better"], ["1257.92", "inferences about patients so that you can identify those patients who are at"], ["1261.36", "high risk of having adverse events and treat them accordingly "], ["1265.37", "thank you "]], "O74Bw-NcCkY": [["1.15", "eric grimson  let's visualize what merge sort does "], ["3.68", "the basic idea is we're going to keep splitting the list down into smaller"], ["6.74", "and smaller pieces until we get to basically  a list of one element each "], ["10.38", "and then we're going to start recursively merging things together "], ["13.14", "taking two sorted lists and simply looking at the first element of each"], ["16.53", "list to decide which is the next one to go into the merged list that's"], ["19.52", "going to be sorted "], ["21.02", "so if we start off with a list of elements like what's shown here  in"], ["24.22", "the first stage we're going to split it into two parts "], ["26.63", "and actually  we would do this recursively first with the front part "], ["29.69", "and then the back part "], ["30.43", "but i'm going to show it in parallel "], ["32.06", "and we'll keep splitting it until we get down to lists of just two elements"], ["36.2", "each  such as for example shown here where i've got two one element lists "], ["40.38", "at this stage  i can start merging by looking at each element  and putting"], ["43.72", "the smallest element first  followed by the next element "], ["47.03", "i then look at the next list  and again  these are two lists of one"], ["51.05", "element each "], ["51.72", "so i can once more look at each element to decide how to put the"], ["54.97", "smallest element up first  and then the next element "], ["57.8", "now we can see where the real impact comes in  because given now two sorted"], ["61.57", "lists  again the merge says looking at these two lists  check the first"], ["65.86", "element of each to decide which is smallest  and put it at the front of"], ["69.52", "the list  followed by the next smallest element  followed by the next"], ["72.31", "smallest element followed by the next smallest element "], ["75.34", "now i have a sorted list "], ["77.07", "let me move that over  and i can now go and do the same"], ["79.79", "thing with these lists "], ["81.41", "i'm going to skip some steps  but basically that will"], ["83.62", "reduce it to this stage "], ["85.14", "and then the final stage  i could then merge this one by first comparing"], ["88.31", "these two elements  moving the smallest one to the front  and so on "]], "BXfWJbn8gKQ": [["1.29", "professor  here's some python code that will let us test the greedy"], ["4.14", "algorithm on the burglar's problem "], ["7.3", "we define an item class  which will let us quickly hold all the"], ["12.6", "information for an individual item  the name its value  its weight  along"], ["17.94", "with a routine that will let us print out the contents of a knapsack in a"], ["22.89", "pretty fashion "], ["24.24", "we have a simple little helper function that creates a list of all"], ["27.76", "the items in the house  the clock  the painting  the radio  the vase  the"], ["33.51", "book  and the computer  along with their associated weights and values "], ["38.5", "the greedy algorithm itself is pretty straightforward "], ["41.7", "it starts with an empty knapsack and an empty total weight "], ["45.47", "it then sorts the items in the order of the metric that we want to supply "], ["51.93", "so we'll actually pass in a function  which will return the item's metric  a"], ["58.17", "particular item's metric  and we'll use that as the key"], ["60.8", "function here in the sort "], ["62.68", "so every time the sorted routine wants to figure out the sort order of an"], ["68.16", "item  it will call the corresponding key function "], ["71.92", "we're passing in the item is an argument "], ["74.37", "and that's the value that we'll use to sort of the items"], ["77.54", "into the correct order "], ["79.63", "and finally we ask for our sort in reverse order so we get the biggest"], ["83.52", "metric first "], ["84.96", "so it works pretty simply "], ["86.02", "once we have the sorted list of items  we go through the list one by one "], ["90.38", "we check the items  get the item's weight "], ["93.02", "we add the item's weight to the total weight that's"], ["96.54", "currently in the knapsack "], ["97.87", "and if there's still room in the knapsack  if that sum is less than the"], ["101.43", "maximum weight than that knapsack can hold  we append the item to the"], ["105.12", "knapsack and increase our accounting of total weight "], ["108.23", "and when we're all done we return the contents of the knapsack"], ["111.72", "as a list of items "], ["113.6", "here are our three metric function is that we wanted to try  the burglar"], ["116.97", "thought of "], ["117.46", "he was going to try a metric which was the item's value  a metric  which in a"], ["123.75", "sense  was the item's lightness "], ["125.57", "what we wanted to do was come up with a metric that would sort the lightest"], ["129.53", "item first "], ["130.32", "and if we do that  if we do the inverse of the weight "], ["132.83", "that's what we'll get "], ["133.92", "and finally a metric that uses the ratio of the item's value to the"], ["137.73", "item's weight "], ["138.97", "finally  we have our usual test functions "], ["141.43", "we have testgreedy  whose job it is simply to run the greedy algorithm"], ["147.41", "once using the specified metric and to print out the total number of items"], ["153.64", "and their values in the knapsack that gets built using"], ["157.68", "that particular metric "], ["159.32", "and then finally  testgreedys allows us to test all three of the metrics "], ["164.48", "so let's save that out and then give it to run and see what we get "], ["169.82", "and here we go "], ["170.62", "there's the items we want to choose from right at the top "], ["173.35", "so if we look here  we see that if we use the value metric  the total value"], ["179.43", "of the items in the bag is 200  and sort of what we expect because the"], ["183.3", "most valuable item is the computer  which is the only thing in the"], ["187.32", "knapsack  when we use the value metric because it has a weight of 20 which"], ["191.27", "fills up the entire knapsack "], ["194.12", "if we use as a metric the weight and we try to do the min weight first  we"], ["199.08", "get a total value of objects of 170 "], ["202.39", "and you can see here the items are being chosen in order"], ["205.33", "of increasing weight "], ["207.05", "and finally if we use the ratio of the item's value to the item's weight  we"]], "yeJJdf1sf7Y": [["1.22", "eric grimson  we're now going to take the ideas we just saw and look at the"], ["3.95", "different instances of different complexity classes "], ["6.69", "so what are those ideas "], ["8.189", "given an algorithm  we want to count what are the number of basic steps"], ["11.43", "it's going to need "], ["12.5", "we want to count those as a function of the size of the problem "], ["15.66", "and we're only going to worry about the case when the size of that problem"], ["18.33", "tends to get large "], ["19.5", "what is the asymptotic behavior as that happens "], ["22.48", "we're going to see  in this segment  a set of examples of different"], ["26.4", "complexity classes "], ["28.02", "we're going to see constant time algorithms  referred to as o 1) "], ["31.25", "we're going to see logarithmic "], ["32.58", "we're going to see linear "], ["34.06", "we're going to see log-linear  or n times log n "], ["36.96", "we're going to see polynomial  and we're going to see exponential"], ["39.89", "algorithms "], ["41.04", "let me say a word about those last two because they are actually different "], ["43.85", "and sometimes people get confused by them "], ["45.95", "the polynomial time algorithm is something whose number of steps"], ["49.87", "asymptotically is n  where n is the size of the problem  to some constant "], ["54.6", "so a quadratic algorithm is n^2  a cubic algorithm is n^3 "], ["58.81", "an exponential algorithm is one where the number of basic steps"], ["62.16", "asymptotically is described by some constant to n "], ["65.76", "the size of the problem "], ["67.19", "so that could be 2^n "], ["69.2", "and keep in mind that n^2 grows in a very different manner than 2^n "], ["73.04", "as we change n "], ["74.45", "and in fact  this sequence is really listed in roughly the order of"], ["79.56", "increasing complexity "], ["81.53", "each one of these classes describes a slightly more"], ["83.9", "complex kind of algorithm "], ["85.99", "and as a consequence  we tend to want to be as high up in"], ["89.07", "this chain as we can "], ["90.77", "if i have two algorithms that solve the same problem  one of them is"], ["93.69", "quadratic  the other one is linear  i want the linear one because it's"], ["97.15", "almost certainly going to be more efficient "], ["99.19", "if i've got an algorithm that is log-linear  n log n  and another one"], ["103.93", "that is just logarithmic  i want the log one because it's"], ["106.65", "always going to be better "], ["108.47", "finally  we tend to be a little sloppy in this subject in terms of how we use"], ["112.2", "these terms "], ["113.01", "really what we're talking about here are upper bounds on the complexity of"], ["118.37", "the algorithm  on the number of steps "], ["120.73", "in many cases  it's an actual tight bound  it's both an"], ["122.95", "upper and lower bound "], ["124.37", "but if we're not certain about an algorithm  we may end up saying  for"], ["126.9", "example  that it's exponential because the best analysis we can do says that"], ["132.03", "the running time may involve an exponential number of steps "], ["135.38", "it may be possible to show that it's less than that  but if we can't"], ["138.33", "actually do it  we're going to use the upper bound to capture the class "], ["141.91", "with that  let's start looking at some examples "], ["144.98", "so the first class is constant complexity "], ["147.56", "that says the complexity is independent of the size of the input "], ["150.61", "this is great  and unfortunately  there aren't very many interesting"], ["153.75", "algorithms in this class "], ["155.57", "it says  literally  that the number of steps doesn't depend on the size of"], ["158.9", "the algorithm "], ["159.81", "now while pieces of code may satisfy that  it's not common for an entire"], ["163.39", "algorithm to have that property "], ["165.71", "if you've got one  though  still great "], ["167.59", "and note  by the way  that even in this case  you can have loops or"], ["171", "recursive calls  it's just that the number of iterations  through the"], ["174.12", "loop  or the number of recursive calls  is independent of"], ["177.5", "the size of the input "], ["179.32", "all right "], ["179.55", "let's move on  though  to more interesting ones "], ["182.79", "logarithmic algorithms "], ["184.63", "here  the complexity of the algorithm  the number of steps  grows as the log"], ["189.15", "of the size of one of its inputs "], ["191.36", "and you've actually seen a great example of this  bisection search "], ["195.27", "remember when we were looking for square roots "], ["196.79", "we said start between 0 and x  take the midpoint "], ["200.1", "if that's close enough  we're done "], ["201.64", "if not  depending on the size  either we're going to look only in the bottom"], ["204.67", "range or in the top range "], ["206.57", "again  we take the input  the midpoint "], ["208.66", "and either we look at the bottom range or the top range "], ["210.99", "at each step we're cutting down the set of possibilities of which we need"], ["215.57", "to look by a factor of two "], ["217.8", "and that cutting down a problem in half  constantly  is a great"], ["222.49", "indication of  in fact  a logarithmic algorithm "], ["224.65", "so bisection search is a great example "], ["227.09", "you can do the same idea  by the way  on a list "], ["229.16", "if i have a list of elements that are in order  and i want to decide if an"], ["233.53", "element's in that list  use the same idea "], ["236.37", "look at the midpoint "], ["237.61", "if i happen to get lucky  i'm done "], ["238.93", "if not  based on the size  either i'll just look at the bottom half of the"], ["241.86", "list or the top half of the list "], ["243.69", "so that kind of property is indicative of a logarithmic search  the"], ["248.78", "logarithmic algorithm "], ["250.29", "now  let me show you an example of a piece of code doing this  just to show"], ["254.41", "you how we would reason about it to decide whether something's"], ["256.87", "logarithmic "], ["258.63", "this is a little piece of code to convert an integer into a string "], ["263.68", "don't worry about the fact that python will do this for you automatically "], ["266.41", "let's just see how the algorithm shows logarithmic complexity "], ["270.17", "i'm going to set up an internal variable called digits "], ["272.46", "it's just the string of all the digits "], ["274.84", "and then given i  if it's 0  i'm done "], ["277.68", "if not  what am i going to do "], ["279.8", "i'm going to set up a little variable result that's"], ["282.27", "initially an empty string "], ["283.97", "and then i'm going to take that integer  i  and the first thing i'm"], ["288.17", "going to do is i'm going to take the remainder  which basically pulls off"], ["291.87", "the bottom digit "], ["293.28", "i'm going to index in two digits to find the corresponding string"], ["297.34", "representation "], ["298.81", "and then i'm just going to add that to the front of result  putting it in the"], ["302.07", "right spot on the thing that i'm accumulating "], ["304.93", "and having done that  i'm going to divide i by 10  which throws away the"], ["307.62", "bottom digit  shifts everything to the left  or to the right rather "], ["311.51", "then i keep doing that "], ["313.21", "now if i were to count steps here  what really matters is that loop "], ["316.56", "and in fact  let's look at that "], ["318.22", "i only have to look at the loop because there are no"], ["320.48", "function calls here "], ["321.82", "and within the loop  how many steps do i have "], ["324.36", "well  i've got the remainder  that's 1 "], ["326.02", "i've got the add  that's 2 "], ["327.41", "i've got the look up  that's 3 "], ["329.12", "i've got the assignment  that's 4 "], ["331.075", "i've got the division  which is 5  and the assignment  which is 6 "], ["334", "so there are 6 steps within the loop "], ["337.01", "but it doesn't depend on the size of i "], ["338.51", "it's always the same thing  6 steps within the loop "], ["341.1", "so really what matters is how many times do i go through the loop "], ["344.96", "and for that  i have to think about  so what is changing "], ["347.5", "and what's changing is the iteration variable  or the loop variable i "], ["351.71", "and at each stage through the loop  it gets divided by 10 "], ["355.77", "so how many times can i divide i by 10 before i get down to a"], ["360.07", "single digit case "], ["361.52", "and the answer is a logarithmic time  so this is o log n)) "], ["366.28", "now let's be careful here "], ["367.35", "you might say  well  wait a minute "], ["368.78", "why doesn't this depend on the size of the integer that i pass in there "], ["373.78", "and it depends  not on the size  but on the number of digits "], ["377.48", "another way of saying it is  if i have some number of steps to solve a"], ["380.51", "problem with one version of i  and i take 10 times i  i'm only going to go"], ["384.6", "through the loop one more time "], ["387.01", "it's the number of digits  not the size of the problem "], ["390.1", "and that's why it's logarithmic in the size of i because that log gives me"], ["394.74", "the number of digits "], ["396.43", "how about linear algorithms "], ["398.46", "well  searching a list where i just walk through it in order is a great"], ["401.1", "example of a linear time algorithm "], ["403.1", "in the worst case  i've got to look at every element of the list "], ["405.51", "so it's linear in the size of the problem "], ["408.08", "here's another example of a linear algorithm  and i want to use this to"], ["412.43", "look at how we measure it "], ["414.18", "suppose i've got a string that's assumed to be"], ["416.12", "composed of decimal digits "], ["417.43", "i want to add up the characters of the string to get a number out "], ["420.48", "a trivial little thing to do  but let's look at what the"], ["422.51", "code might look like "], ["423.8", "i'm going to start off with some initial  internal variable called val "], ["427.97", "and for each character in the string  i'm going to convert it into an"], ["431.16", "integer and add it into what i've got in val in order to return"], ["435.02", "that overall value "], ["436.6", "i don't care about the computation  what i care about is the complexity "], ["439.75", "and the complexity is pretty straightforward "], ["441.77", "i have to go through each element in the string once "], ["445.76", "so this is linear in the length of the string "], ["449.81", "within the loop  it's a constant number of things to do "], ["452.69", "so all i care about is how many times do i go through the loop  and that is"], ["456.16", "linear in the size of the problem "], ["458.18", "so far we've seen examples where we're just looking at things that have"], ["461.11", "loops  and we're worrying about how many times does it"], ["463.03", "go through the loop "], ["464.33", "we can also have a complexity that depends on the number of recursive"], ["467.57", "calls  and our good friend factorial is a great example "], ["470.77", "there's the code for factorial  you've seen it before "], ["473.77", "if i think about the complexity of this "], ["476.54", "i could say  well  within the actual code itself  there's only a constant"], ["480.47", "number of things to do "], ["481.94", "i'm doing a test "], ["483.4", "if the test is true  i'm just returning something "], ["485.45", "otherwise  i'm doing a multiplication and a recursive call  but in the body"], ["489.71", "of the procedure itself  it's a constant number of things "], ["492.86", "so what matters here is  how many times do i call factorial "], ["497.23", "and we can see that on each recursive call  we're reducing n by 1 "], ["502.1", "so i've got to do fact n)  then fact n-1)  then fact n-2) "], ["506.01", "and you can see that i'm going to call factorial n times "], ["509.56", "within each call  complexity's constant so  therefore  this is linear"], ["513.789", "in the size of the problem because there's a linear number"], ["516.4", "of recursive calls "], ["517.76", "algorithms with this kind of template are typically linear  and that's a"], ["521.61", "handy thing to know "], ["523.24", "what about log-linear "], ["524.48", "well  a lot of practical algorithms fall into this category "], ["527.16", "they're n times the logarithm of n "], ["529.3", "in fact  an example we're going to see later on is one of the most"], ["531.6", "commonly-used log-linear algorithms  which is an algorithm called merge"], ["535.7", "sort  which is a way of sorting a list to get it into increasing or"], ["539.01", "decreasing order "], ["540.39", "i just want to highlight that we have algorithms of this sort "], ["542.78", "we're going to come back to merge sort later on to see how we can do"], ["545.54", "reasoning to find these kinds of examples "], ["548.11", "so let's move on to polynomial "], ["550.23", "polynomial complexity says i've got an algorithm that grows"], ["553.03", "as n to some power "], ["554.96", "and most common polynomial algorithms are  in fact  quadratic "], ["558.22", "they grow as n squared or some parameter  some"], ["561.24", "size parameter  squared "], ["563.01", "and these commonly occur when we have nested loops or when we have"], ["567.1", "particular kinds of recursive function calls "], ["569.8", "so let's look at an example  and this is probably a good example of a very"], ["574.83", "common kind of quadratic complexity "], ["580.03", "this is a little algorithm that's going to decide whether  given two"], ["582.95", "lists  one of them is a subset of the other "], ["584.97", "and that says  is every element of l1 in l2 "], ["588.23", "the code to do this we can describe pretty quickly "], ["590.29", "we're going to loop over every element in l1 "], ["593.07", "we're going to set up  each time through the loop  to say a variable"], ["596.01", "match is equal to false "], ["597.9", "and what am i going to do "], ["598.83", "i'm going to loop over every element in l2  or almost every element in l2 "], ["602.42", "looking to see if i find one that's equal to e1 "], ["605.33", "if i find something that's equal  i set the flag to true and i break "], ["610.42", "and what that break does is it throws us out of this loop  this interior"], ["614.85", "loop  which means i can then skip down to  basically  this step here "], ["620.85", "and if  in fact  matched is false  i return false "], ["624.5", "but if it's true  then i simply skip back around "], ["627.55", "ok "], ["627.87", "and that then says i'm going to basically run through this loop until "], ["631.6", "either i go all the way through  in which case matched is false because i"], ["634.7", "didn't find an instance of it  or i do find an instance  and i break out of"], ["639.55", "it and i set a value that returns "], ["642.412", "all right "], ["643.17", "i'm going to do that over all versions of this outer loop  e1 "], ["647.3", "so let's look at an example to see how we'd measure the complexity here "], ["651.87", "the outer loop is executed the length of l1 times  so however long l1 is "], ["656.91", "i'm going to do that outer loop that many times "], ["659.55", "each iteration is going to execute the inner loop up to the"], ["662.25", "length of l2 times "], ["664.26", "i have to go all the way through l2  the length of l2 "], ["666.54", "if i find something earlier  i break out of it "], ["668.61", "so  in the worst case  this has a complexity that's the product of"], ["672.91", "length of l1 times length of l2 "], ["676.15", "now  that depends on l1 and l2 "], ["677.54", "what is the actual worst case "], ["678.91", "well  the worst case is when they're both of the same size "], ["681.82", "l1 can't be bigger than l2 or it wouldn't be a subset "], ["684.33", "when they're of the same size  but none of the elements of l1 are in l2 "], ["688.14", "then i'm going to run through this loop the full number of times "], ["691.57", "i'm going to run through it l2 times "], ["693.88", "in that case  the complexity is quadratic "], ["697.32", "it's the length of l1 squared "], ["700.67", "it's quadratic in that size "], ["702.36", "let's look at another example "], ["704.39", "here's another example involving two lists  and i want to find the"], ["706.72", "intersection of those two lists "], ["708.29", "and here i want to show how  having multiple loops  we're going to focus"], ["711.27", "in on the one with the worst complexity "], ["713.45", "the idea here is i want to take two lists  l1 and l2 "], ["717.5", "i'm going to set up an initial temporary list  and then i'm going to"], ["719.76", "loop over everything in l1 "], ["721.95", "and for every element of l2  i'm going to look to see "], ["724.96", "is it equal to the thing i'm looking for in l1 "], ["728.64", "and if it is  i'm going to add it into tmp "], ["731.106", "now because l2 might have multiple instances of something  i"], ["734.21", "want to keep going "], ["734.99", "so even if i find an instance of e1 in l2  i'm going to go all the way"], ["738.94", "through l2 and gather each of those instances together "], ["742.76", "i'm going to do that over all possible versions of e1 "], ["745.24", "and when i'm done  i need to now strip away the duplicates "], ["748.07", "so i'm going to set up another temporary variable  res "], ["751.65", "and then i'm going to loop over that list i just built  tmp  and basically"], ["755.58", "say  if e is not in res  then i'm going to add it in "], ["759.72", "but if i've already got a version of it there  i'm simply going to ignore"], ["762.62", "it and keep going "], ["763.42", "so that  ultimately  it'll return a list of unique elements that are those"], ["767.65", "that appear in both lists "], ["769.84", "again  what's the complexity here "], ["772.48", "well to see this  we can note that this first nested loop up here is very"], ["778.36", "similar to what we saw before "], ["780.4", "it's going to take the product of the length of l1 and the length of l2"], ["784.36", "number of steps "], ["785.67", "and  in fact  it's going to do exactly that because i go through l2 in full"], ["789.77", "each time around "], ["791.38", "what about this loop "], ["793.59", "there's a second loop there  i have to think about that "], ["796.08", "well  that second loop takes  at most  the length of l1 number of steps"], ["800.12", "because i'm simply going through that list once "], ["802.91", "so i've now got two terms "], ["804.88", "i've got a quadratic term  and i've got a linear term "], ["807.54", "and  of course  we know that the quadratic term really dominates here "], ["810.87", "it's the big one "], ["811.63", "it's the one that really matters "], ["813.09", "so i can ignore the second term  and basically say that this is of order"], ["817.35", "length of l1 times length of l2 "], ["819.08", "so it's quadratic "], ["820.77", "the point of this is i need to look at the loops "], ["823.11", "if i have different loops  or multiple loops  within a piece of code  i need"], ["827.4", "to find the one that has the higher complexity "], ["829.95", "and that will tend to be the nested one  as it was right there "], ["833.6", "ok "], ["834.93", "what about exponential algorithms "], ["837.1", "what characterizes an exponential algorithm "], ["839.23", "and an exponential algorithm  by the way  is usually a"], ["841.15", "very expensive algorithm "], ["843.07", "well  it's typically a case when we've got recursive functions where there's"], ["846.28", "more than one recursive call for each step of the problem "], ["850.06", "we saw an example earlier "], ["851.45", "towers of hanoi has two recursive calls "], ["854.17", "i moved a smaller stack once  this moved the bottom case and then moves"], ["857.98", "the smallest stack again "], ["858.93", "so i had two recursive calls per each size of the problem "], ["862.37", "and that is characteristic of an exponential problem "], ["865.59", "but unfortunately  many important problems are inherently exponential "], ["869.3", "and that's really unfortunate because the costs can be very high "], ["872.64", "and one of the things we want to see is that's going to lead us to consider"], ["875.01", "finding approximate solutions in more efficient time  rather than trying to"], ["879.2", "do something that deals with finding the exact solution "], ["882.79", "nonetheless  let's do one last example here "], ["884.63", "let's look at an example of something that is exponential in complexity  and"], ["890.94", "look at how we would actually measure it "], ["893.3", "so this is an example where i've got a list of the elements  for example  it"], ["897.025", "might be a list of numbers "], ["897.84", "and i want to generate another list of all of the subsets of that list "], ["902.62", "so if the list is one and two  i'd like a new list as output that has the"], ["906.91", "empty list  the list of one  the list of two  an the list of one and two "], ["910.84", "so all of the different possible subsets or combinations of elements"], ["914.28", "out of that list "], ["915.63", "again  i'm not as worried about it  but i want to see how the complexity"], ["918.42", "goes there "], ["918.75", "so here's what the code does "], ["920.22", "i'm going to set up a place to store my answer "], ["924.52", "if there's nothing in the list  if the list is of length 0  then i want to"], ["929.2", "return a list that is just a list of the empty list "], ["933.92", "so there's this funky-looking thing right here with two square brackets "], ["938.12", "so it is a list whose only element is the empty list because that's the only"], ["942.27", "possible subset of a list of length 0 "], ["945.34", "otherwise  how am i going to solve this "], ["947.48", "well  i'm going to use that recursive idea "], ["949.47", "i'm going to first say  let's take everything in the list but the last"], ["952.21", "element  and get all the possible subsets of that "], ["955.87", "i'm going to call that smaller  right here "], ["959.31", "i'm going to get a list of just the last element right"], ["963.51", "there  which is extra "], ["964.89", "and here's what i want to do "], ["965.99", "i want to take all of the things in smaller  and add that last element to"], ["969.93", "them because those are all subsets of the longer list "], ["973.48", "and then i want to take all of the instances  all of the subsets without"], ["978.45", "the last element  and all of the subsets with the last element  and add"], ["982.87", "them together "], ["983.86", "and i'm done "], ["984.98", "so there's a little loop where i take everything in the smaller one  and i"], ["988.9", "add that last element on to it "], ["991.69", "and i create those into new "], ["993.07", "and then  finally  i create a flattened version  which is all of the"], ["995.84", "versions without the last element  all of the versions with the last element "], ["999.11", "and i'm done "], ["1000.52", "you can go code this up and try to see that it does the right thing "], ["1002.78", "what i'm really interested in is the complexity "], ["1006.41", "so to measure that  i'm going to assume that append is actually"], ["1009.41", "constant time "], ["1009.99", "in fact  it is  given the implementation inside of python  but"], ["1013.07", "since it's not a basic element  i need to make that assumption "], ["1016", "and now what do i want to look at "], ["1018.04", "what's the time "], ["1019.39", "well  the amount of time it's going to take here is basically going to be the"], ["1022.41", "amount of time it takes to solve this problem  the smaller size problem "], ["1026.839", "plus the amount of time that's needed to make a copy of all the elements of"], ["1031.31", "the smaller problem right there "], ["1034.04", "ok "], ["1034.67", "so how can i get at that "], ["1036.77", "well  it's important to think about the size of that smaller problem "], ["1040.349", "and  in particular  we know that  for a set of size k  there are 2^k cases "], ["1047.319", "there are 2^k different possible subsets inside of there "], ["1050.83", "so if i want to solve a problem of size n  i'm going to need to solve a"], ["1055.64", "problem of size n - 1  and there are 2^n possible solutions there "], ["1061.7", "and then  in the problem of size n - 2  there are going to be 2^ n-1) and"], ["1066.11", "so on  all the way down to 2^0 "], ["1069.73", "now we can actually solve this  but a little bit of math actually tells me"], ["1073.13", "that that sum  2^0 + 2^1 +    "], ["1076.58", "+ 2^ n-1)  is 2^n "], ["1079.56", "and so the math tells us that this is a problem of size 2^n "], ["1084.83", "this is important because it looks like there's just one recursive call"], ["1088.21", "at each step  and there is "], ["1090.4", "but it's on a problem whose size is growing exponentially "], ["1096.15", "and that  therefore  when i come down here  and i want to walk through that"], ["1099.37", "list  basically adding all of them in  that loop there has a size that's"], ["1104.75", "o 2^n)  for whatever the length of the list l is "], ["1108.6", "and as a consequence  this is an exponential-sized algorithm "], ["1112.04", "ok "], ["1112.51", "so what does that give us "], ["1114.06", "it says we've now seen a sequence of different instances of classes of"], ["1118.64", "algorithms "], ["1119.56", "we've seen characteristics or templates of each one of them "], ["1122.65", "and we've seen  that as we go down this list  they get worse and worse "], ["1126.6", "as we go through the rest of the course  we're going to see examples of"], ["1129.06", "this complexity "], ["1130.01", "but those templates already give you a way of getting a sense of what is the"], ["1133.44", "complexity of a particular solution "]], "lCDWElPHVa4": [["0.904", "eric grimson  now  we've seen recursive functions "], ["3.76", "we've seen this idea of inductions  a way of showing that"], ["6.56", "these functions work "], ["7.4", "and we've seen this notion of recursion as breaking a problem down"], ["10.96", "into a simpler version of the problem plus some other work "], ["14.52", "we're going to use that tool a lot "], ["15.8", "it's a powerful tool for taking complex problems and capturing them in"], ["19.5", "a way that is easy to think about "], ["21.3", "so let's look at some examples "], ["23.25", "in the classic example to start with is to compute factorial "], ["26.77", "factorial in math is written as n followed by an exclamation point  said"], ["31.22", "verbally as n bang "], ["33.04", "and factorial is basically the product of the integers from 1 times 2 times 3"], ["36.76", "all the way up to n "], ["38.59", "how would we think about solving this recursively "], ["41.82", "well that's pretty straightforward  right "], ["44.24", "i need a base case "], ["45.16", "a simple case is if n is equal to 1 "], ["47.89", "1 multiplied by itself  or just 1 is 1 "], ["50.43", "that's simple "], ["51.8", "to get the recursive case  let's use that same thinking "], ["56.47", "to get the recursive case  what do i have "], ["59.01", "i want a simpler version of the same problem "], ["60.98", "in effect  right there that is n minus 1 factorial "], ["67.47", "so recursively i would say if i can get n minus 1 factorial  then to get n"], ["72.58", "factorial i'd simply take that value and multiply it by n "], ["76.41", "and that gives me that reduction exactly like i saw before "], ["80.23", "fantastic "], ["81.44", "there's a recursive definition factorial "], ["84.47", "let's capture it in some code "], ["87.17", "and  in fact  to do it let's do both an iterative version"], ["90.06", "and a recursive version "], ["91.74", "so the iterative version of factorial has the form we'd expect "], ["95.36", "i need some state variables "], ["96.62", "one of them is going to be just the parameter n that i'm passing in "], ["99.53", "and the other one i'm going to call result "], ["101.05", "i need to keep track of the computation as i go along "], ["104.11", "i'm going to set a result initially to 1 because i'm going to do successive"], ["107.47", "multiplications "], ["108.87", "and then the iterative version basically says if you start off with n"], ["113.6", "that's bigger than my base case  or the stopping point  rather  what do i"], ["117.02", "want to do "], ["117.53", "i'm going to take my current value result  which is 1  multiply it by n "], ["121.71", "and store it away "], ["123.23", "and then i'm going to reduce n by 1 "], ["125.22", "there are those update equations that are updating the state variables "], ["128.52", "i go around again  n is now one smaller "], ["131.31", "and again  i take the current value result  which at this point was n "], ["134.68", "i multiply it by the new value of n  which is n minus 1 "], ["137.61", "and i update it "], ["138.64", "i reduce n by 1 "], ["140.47", "and i keep doing this "], ["141.4", "and you can see that i want to start by taking n  n times n minus 1  n"], ["145.43", "times n minus 2  and i'll keep doing that until i get down to a place where"], ["149.62", "n is zero  in which case i stop and i return the result "], ["154.75", "great "], ["156.18", "what about the factorial version recursively "], ["158.86", "well  factr is nice and crisp "], ["161.56", "here it is "], ["162.9", "it just says  if n is equal to 1  if you're in the base case  just return"], ["168.59", "that value "], ["169.74", "here i said return n  i could have said return 1  because i know it's"], ["172.04", "going to be the same thing "], ["173.69", "otherwise  get the solution to a slightly smaller problem by just"], ["179.14", "recursively calling factr  multiply it by n  and just return that result "], ["185.1", "beautiful code "], ["185.96", "nice and clean and crisp "], ["187.47", "and you can see that it gives you a very clear sense"], ["189.63", "of exactly the stages "], ["191.48", "my base case  my recursive case "], ["193.71", "my recursive case is a recursive call plus one other operation  which is to"], ["197.31", "do multiplication "], ["198.9", "let's see if it does the right thing "], ["201.02", "so in idle  i've got a version of both pieces of code  then let's try first"], ["207", "theater diversion of factorial "], ["208.07", "and just to be careful  let's make sure it does the right thing on the"], ["210.8", "base case  or n is equal to 1 "], ["212.73", "if it does then let's give it the bigger one "], ["215.85", "i happen to know that 3 times 2 times 1 ought to be 6 "], ["218.74", "so there we go "], ["220.31", "and if i give something a little bit bigger  wow  it actually computes"], ["225.24", "factorial of 25 "], ["226.62", "pretty quickly "], ["228.42", "what about recursive version "], ["229.83", "well let's test the same ones "], ["231.9", "on 1 it does the right thing "], ["234.38", "on 3 it does the right thing "], ["238.77", "on 25 it does the right thing "], ["244.02", "and you may notice this funny little form on the screen there where it's"], ["246.38", "got an l at the end "], ["247.27", "this is just telling us that python's got such a big number  it's"], ["249.78", "representing it in what's called a large format "], ["252.25", "don't worry about it "], ["252.97", "it just says  i got a really big number "], ["254.41", "i gave it back to you "], ["255.81", "so we didn't look at stepping through it "], ["258.37", "you can go do that "], ["259.23", "but you can see that the recursive version stops  computes the right"], ["262.63", "answer  and the code itself is nice and crisp "], ["267", "ok  let's look at another example "]], "Zu0qEdz4Tq8": [["1.82", "speaker 1  so we now have this notion of iterative"], ["3.86", "algorithms "], ["4.96", "very powerful tool  thinking of things in terms of loops is"], ["7.76", "a natural way of thinking of problems "], ["9.72", "but there's another way of thinking about problems  and"], ["11.96", "let's go back to that idea of doing multiplication by"], ["14.89", "successive additions "], ["16.42", "here's a different way of thinking about this"], ["18.49", "computation "], ["19.77", "this basically says  a times b  well  that's the same as"], ["22.54", "taking b copies of a and adding them together "], ["27.36", "but i could also think of that as saying  that's the same as"], ["32.46", "taking a and adding it to whatever i get by doing that"], ["37.32", "accumulation of b minus 1 copies of a "], ["41.62", "now you're going  oh come on  this is pretty simple "], ["44.16", "you're just playing games here "], ["45.68", "but i'm not "], ["46.86", "it's a really important point here "], ["48.89", "i have just reduced this problem to a simple operation"], ["55.58", "and a simpler version of the same problem "], ["58.1", "and in fact  what is this piece here  that is exactly"], ["62.15", "the same as a times b minus 1 "], ["67.16", "ah-ha "], ["68.11", "that's a simpler version of the same problem "], ["71.04", "i've now thought recursively "], ["72.83", "sounds like a highfalutin term "], ["74.21", "it's really not "], ["74.89", "it says  i have taken a problem  and i've essentially"], ["78.2", "said  let me reduce this problem to a simpler or easier"], ["82.02", "version of the same problem  plus some operations"], ["85.07", "i know how to do "], ["86.41", "and so i've reduced the idea of multiplying a times b into"], ["91.025", "a simpler problem "], ["92.38", "add a to whatever i get by multiplying a times b minus 1 "], ["98.22", "ok "], ["99.24", "that sounds nice  but what does it really mean "], ["101.98", "well as i said  this is an idea of a recursive algorithm "], ["106.37", "and what we do when we think about something recursively "], ["108.96", "is we do two things "], ["110.31", "we first say  how can we reduce this problem to a"], ["113.08", "simpler or smaller version of the same problem together with"], ["116.28", "some operations i know how to do "], ["117.55", "and that's what we call the recursive step "], ["119.94", "we just saw that "], ["121.616", "of course we can't keep unwinding that "], ["124.19", "eventually we've got to stop  we've got to ground it out "], ["126.97", "and that's the second piece "], ["128.84", "and the second piece is  we're going to keep thinking about "], ["131.17", "how do we reduce this until we reach a case that is simple"], ["134.66", "enough we can just solve it directly "], ["136.65", "we call that the base case "], ["138.81", "we don't have to do it in this order  we can"], ["139.96", "do it either way "], ["140.49", "we can think about  what's the base case and what's the"], ["142.43", "recursive step "], ["143.46", "but these two pieces are important "], ["145.88", "in my case of thinking about multiplication"], ["147.87", "then  what do i have "], ["150.31", "what's the base case "], ["151.85", "i got a couple of choices  but an easy one would be to say "], ["154.92", "if b is equal to 1  then a times 1 is just a "], ["158.41", "so my base case is really straightforward "], ["161.31", "if b is equal to 1  i'm done "], ["163.81", "otherwise  a recursive case is what i just said "], ["167.42", "i'm going to reduce a mul b into a plus a mul b minus 1 "], ["174.24", "ok "], ["175.55", "you're being a little skeptical  i'm"], ["176.68", "sure  saying  so what "], ["177.62", "so you've played some games here "], ["179.17", "but i've just described a wonderful algorithm for a"], ["182.38", "different way of thinking about this computation "], ["184.77", "because i could capture this in a recursive algorithm "], ["188.54", "and let's do it "], ["191.08", "here's the code for a recursive version of"], ["193.67", "multiplication "], ["195.12", "and notice it just nicely matches what i just described "], ["199.08", "this says given two values  a value for a and a value for b "], ["203.22", "check to see if b is equal to 1 "], ["206.32", "that's my base case "], ["207.84", "there it is  right there  base case "], ["210.69", "and if it is  just return the value of a "], ["214.21", "simple computation "], ["216.14", "otherwise  i'm going to call the same function with a"], ["221.45", "simpler argument "], ["223.46", "we could do recursive mul again on a and b minus 1  and"], ["227.48", "when that computation is done  it's going to get me back a"], ["229.71", "value  and i'm going to return that value added to a "], ["233.61", "and there's my recursive step "], ["236.21", "nice  simple code "], ["238.07", "let's check it out  make sure it does the right thing "], ["240.32", "i go over to idle  i've got a definition of that right here "], ["243.35", "and i load it up "], ["244.61", "and let's try the same thing "], ["245.79", "so if i do recurmul "], ["248.54", "if i can type  which i will "], ["250.32", "mul three and five "], ["253.46", "ok  and if i do recurmul on 26 and 35  it's giving me back"], ["257.95", "the same answer "], ["259.06", "and notice it's also giving me an answer "], ["260.85", "which may be worrying you as you look at this"], ["262.49", "definition of the code "], ["264.5", "so in the next segment  let's look to see why does this do"], ["267.93", "what it does "], ["268.72", "but the key thing to see here is this idea that given a"], ["271.33", "computation  i'm going to break it down into a simpler"], ["274.27", "version of the same computation  plus some things"], ["276.65", "i know how to do  and i'm going to keep unwinding that"], ["279.48", "computation until i get to a base case "], ["281.69", "something i can solve directly "], ["283.77", "we'll do that in the next segment "]], "f2655NqIYtA": [["0.81", "so  we're ready to start thinking about testing "], ["3.88", "we've written a piece of code  perhaps several things that"], ["5.88", "interact with one another "], ["7.17", "and we're ready to start checking to make sure it really"], ["9.19", "does the right thing "], ["10.89", "our goal  ironically "], ["12.96", "or strangely  if you like  is to show that bugs exist "], ["16.66", "now you may say  wait a minute "], ["18.06", "don't i really want to show that there are no bugs in my code "], ["20.78", "and the answer is  if you could  that would be great "], ["23.7", "but it's really hard to do "], ["25.43", "it's often much easier to show that there is something than to show that"], ["28.72", "there isn't something "], ["29.94", "and so while  ideally  we'd like to show that our code is bug-free  what"], ["32.77", "we really want to do is try and run enough tests to either identify that"], ["36.45", "there's a bug  or convince ourself that there's a good"], ["38.96", "chance there isn't "], ["40.58", "why can't we just show there are no bugs "], ["43.56", "well  part of it is that it's often impossible to run all possible checks "], ["47.84", "if i've got a numeric function  i might  in fact  actually have"], ["50.37", "something that has billions of tests "], ["54.29", "and i don't really want to spend the time to do all of those tests just to"], ["57.52", "show that the code is completely bug free "], ["61.41", "that's a slight misstatement "], ["62.59", "if it's a really crucial piece of code  i might do that "], ["65.069", "but in general  i just don't have the time to run an all possible test "], ["69.46", "there are some formal methods  that is mathematically based methods  that can"], ["72.947", "sometimes help actually prove that the code is bug free "], ["77.18", "but they usually only work on simple kinds of code  and they're not going"], ["79.82", "to be always available to us "], ["81.73", "so  let's think about how do we do the testing "], ["85.54", "well  what we want to do is to find a collection of inputs that have a high"], ["90.72", "likelihood of revealing bugs  but where the testing is actually going to"], ["94.05", "be pretty efficient "], ["94.82", "it's not going to take a lot of time "], ["96.53", "and this is called a test suite "], ["98.41", "the idea is that we're going to partition  or divide up the space of"], ["102.41", "inputs into subsets that provide equivalent information about the"], ["106.28", "correctness of the code "], ["107.84", "what does it mean "], ["108.48", "it says if i have a set of possible inputs  i'd like to"], ["111.13", "break it up into pieces "], ["112.63", "and say  any input from this piece  the performance is going to be pretty"], ["116.6", "indicative of the performance of other inputs from that piece "], ["119.85", "any input from this piece "], ["121.31", "same thing "], ["121.99", "performance is going to be indicative of the performance of the things"], ["124.59", "inside of that piece "], ["126.17", "and so what we're going to do is divide up the set of all possible"], ["129.96", "inputs into a group of subsets with the property that each element of the"], ["133.98", "set is in exactly one subset "], ["137.32", "so  all possible inputs "], ["139.38", "i want to partition them up "], ["141.16", "once i've done that division  i'm going to construct a test suite that"], ["144.5", "contains one input from each element of the partition "], ["147.76", "from each different piece i'll select one input  and then i'll run the test"], ["152.05", "suite on that to see how well it does "], ["154.82", "let's look at an example "], ["157.23", "here's a little piece of code "], ["158.38", "in fact  i haven't shown you the code  i've just shown you the specification "], ["161.61", "want to say  is x bigger than y "], ["164.13", "and what is bigger does  is it assumes that x and y are integers "], ["167.65", "and it's going to return true if x is less than y  otherwise false "], ["172.08", "what's the input space "], ["173.71", "on the input space here is all pairs of integers "], ["177.2", "now that's obviously a really big how might i partition this up "], ["181.86", "well  i could take advantage of things i know about integers "], ["184.72", "and so  here's a possible partition "], ["187.37", "i could say  look at one part of the space where both x and y are positive "], ["192.96", "look at another part of the space where x is negative and y is negative "], ["197.06", "and then  one's positive  the other's negative "], ["201.02", "and if you think about the plane of integers  or the set of integers  all"], ["204.89", "possible pairs "], ["205.56", "i'm dividing it up "], ["207.47", "now i have a couple of other special cases that i know were unique or"], ["210.77", "interesting about integers "], ["211.92", "so  in particular  i can also look at the case where x and y are both zero "], ["217.77", "and then when x is zero but y is not  and y is zero but x is not "], ["223.83", "so this is now dividing up the space "], ["225.73", "and notice  i've got every possible case "], ["228.76", "no  sorry "], ["229.64", "bad way of saying it "], ["230.25", "i don't have an example from every possible case  but i have taken the"], ["233.82", "space and divided it up so that all possible tests are covered by one of"], ["238.41", "these particular cases "], ["241.08", "ok "], ["242.2", "now  why "], ["244.09", "why this partition "], ["245.662", "i could have lots of other choices "], ["247.16", "i might have said  look at one where x is prime  and y is not "], ["249.74", "where y is prime and x is not "], ["251.17", "where they're both prime  where they're both not "], ["253.33", "that's also a division of the space "], ["255.54", "but it's not really relevant  right "], ["258.779", "this is irrelevant to the problem "], ["263.32", "knowing whether something bigger or not is really not going to depend on"], ["266.02", "whether it's prime "], ["267.25", "the division i made was more based on the idea of what does"], ["270.3", "the space look like "], ["272.05", "the second thing i did is that spaces of inputs often have some natural"], ["276.76", "boundaries "], ["278.09", "integers are either positive  they're negative  or they're zero "], ["282.81", "ah-hah!"], ["283.73", "that's why i use that partition "], ["285.79", "in fact  i'd broken it up into both positive  both negative  one positive "], ["289.56", "one negative "], ["290.49", "and then the cases where things were zero "], ["293.22", "actually  if you think about it from this perspective  if integers can be"], ["296.44", "one of three kinds  shouldn't i have nine cases "], ["300.29", "three different cases for x  three different cases for y  and all the"], ["303.13", "combinations of them "], ["304.8", "and the answer is probably  yes "], ["306.36", "and in fact  i could really split this case  where x is zero and y is not"], ["311.31", "equal zero  into x is zero  y is positive  x is zero  y is negative "], ["316.97", "and the same for the other case "], ["318.91", "and that would in fact  give me the nine cases that would make more sense "], ["323.47", "what you see here is an example of breaking up a partition  of built or"], ["327.15", "broken up the input space into groups  sets  classes "], ["331.88", "now what i'm going to do is basically use that to think about how i'm going"], ["336.89", "to build a test suite "], ["338.63", "before i do  though  let's say  gee  what if there is no natural partition"], ["342.36", "to the input space "], ["343.83", "what can i do "], ["345.06", "well  a couple of choices "], ["347.2", "one is i could just do random testing  that is i could simply take a bunch of"], ["351.91", "examples and keep trying them "], ["354.06", "and use the result that the probability that the code is correct"], ["356.78", "increases with the number of trials "], ["358.79", "but really i should be able to  in those cases  use"], ["361.08", "the code to do better "], ["362.66", "so  in fact  we're going to split up our testing into two different kinds"], ["367.1", "of testing "], ["368.17", "one is going to use heuristics based on exploring paths through the"], ["371.58", "specifications "], ["372.995", "we call that black-box testing "], ["375.44", "the second one is going to use heuristics  based on exploring paths"], ["378.31", "through the code itself "], ["380.11", "we call that glass box testing "], ["382.24", "and so  we're going to take now this idea of partitioning up the space  and"], ["385.97", "couple it with these two ideas to look at how we actually build test suites "]], "sViMNECYhZs": [["1.1", "eric grimson  in the last section  we introduced a"], ["3.37", "couple concepts in terms of writing programs or scripts "], ["6.36", "we had straight-line programs  where we had just a linear"], ["9.03", "sequence of instructions and we executed them 1"], ["11.16", "at a time in order "], ["12.35", "and we added the idea of branching  or conditionals "], ["15.28", "where we could do a test  and depending on whether that test"], ["18.01", "was true or false  we might skip to 1 piece of code or a"], ["21.26", "different piece of code "], ["22.75", "but in both cases  we're doing each instruction at most once "], ["26.29", "useful  but not great "], ["28.64", "to get to the ability to write programs or scripts with"], ["31.66", "arbitrary complexity  we need 1 more key concept  and that"], ["35.53", "concept is the idea of being able to reuse a piece of code"], ["39.06", "an arbitrary number of times "], ["41.06", "we might have a set of things we want to do once or"], ["43.54", "depending on some value  twice  or depending on some"], ["46.23", "value  27 times or 1 000 times "], ["48.95", "and rather than having to copy the code that many times  we'd"], ["52.06", "like to be able to have the computer automatically reuse"], ["55.62", "the code as many times as desired "], ["57.88", "that notion of iteration is going to be incredibly"], ["60.49", "valuable  and we're going to talk about some constructs to"], ["63.26", "help us make that happen "], ["64.66", "the basic idea  though  is straightforward "], ["66.51", "given that we have some code we're executing  when we get"], ["68.92", "to an iteration loop  which is this chunk right here  we"], ["71.84", "start with a test "], ["73.46", "that will be boolean that will return either true or false "], ["77.02", "if it's true  we're going to go down and execute some set"], ["80.6", "of instructions  the body of the loop  and then go back"], ["83.69", "around and do the test again "], ["86.25", "and we'll keep doing that "], ["87.45", "as long as the test is true  we'll execute that same set of"], ["90.61", "instructions in the body over  and over  and over  until"], ["94.52", "finally  the test is false  in which case we skip around the"], ["98.67", "loop body and pick up the computation elsewhere "], ["102.96", "this notice allows me  based on this boolean test  to be"], ["107.13", "able to do the code some arbitrary number of times  and"], ["109.92", "that's really great "], ["111.08", "let's look at an example "], ["112.54", "here's a simple example that shows that idea  and i want to"], ["115.01", "talk about the syntax of the construct  but also about what"], ["118.372", "the example's going to do "], ["119.72", "this is a simple piece of code that squares a number "], ["122.76", "i want to get x squared  but i'm going to do a by just"], ["124.73", "successively adding x to itself x times  which is of"], ["128.629", "course what x squared actually does "], ["130.3", "i add x copies together "], ["132.44", "notice what we've got "], ["133.56", "we're going to set up some value of x "], ["134.94", "i'm going to do a binding there "], ["136.55", "we're going to bind a variable ans for answer  which is where"], ["139.6", "we're going to add up all the instances of x to get where we"], ["142.67", "want to be "], ["143.3", "and we're going to need to keep track of how many"], ["145.7", "versions of x do we still have to add in "], ["147.81", "so we're going to set up another variable called"], ["149.62", "itersleft  initially bound to x "], ["151.96", "the looping construct  the iteration construct  we have"], ["154.61", "is called a while loop "], ["156.35", "and there's the key word while  and it has the"], ["159.03", "following property "], ["160.3", "it has a boolean test  in this case  we're checking to"], ["163.1", "see whether itersleft is equal to 0 or not "], ["165.98", "followed by a colon  and then it has a set of indented"], ["169.8", "instructions  which of course  are the body of the loop "], ["172.63", "the way the while loop works is it"], ["174.59", "first tests that boolean "], ["176.98", "if that boolean is true  itersleft is not equal to 0 in"], ["180.47", "this case  it will then execute each of the"], ["182.59", "instructions in the body in sequence "], ["184.48", "and when it gets to the end of that sequence of instructions "], ["187.17", "it's going to go back up and retest the boolean again "], ["190.48", "so it will cycle through this code multiple times until that"], ["194.33", "boolean is finally false "], ["196.41", "when it is false  it will skip down to the end of the loop "], ["199.04", "which is shown by where the indentation stops  and pick up"], ["201.85", "the new set of instructions and continue "], ["204.14", "so there's the structure  let's see if this does the"], ["206.86", "right thing "], ["207.88", "well  here's my code  and let's just walk through this "], ["210.25", "we won't run it on idle  we'll just walk through it "], ["212.21", "initially  x is bound to 3  ans is bound to 0  and"], ["216.04", "itersleft is bound to 3 "], ["217.6", "the while loop says  test to see if this is equal to 0 "], ["221.74", "since it is not equal to 0  the test is true  and"], ["225.37", "therefore  i take the current value of ans  the current"], ["228.02", "value of x  add them together  and rebind that to ans "], ["232.48", "i then take itersleft  subtract one from it  and"], ["235.69", "rebind that to itersleft "], ["238.16", "so i've decremented itersleft  and i've incremented ans "], ["241.52", "i go back up  and again  i check "], ["244.28", "is that not equal to 0 "], ["245.47", "it is not equal to 0 "], ["246.54", "therefore  i take ans and i take x  i add them together "], ["249.5", "and i rebind those to be the new value of ans "], ["252.41", "i change itersleft by 1 "], ["253.94", "that's my new value there "], ["255.55", "and again  i go back through the loop "], ["257.42", "that is not equal to 0 "], ["258.779", "well  the test is still true  so again  i take ans  i take"], ["261.899", "x  add them together  create that to be my new binding for"], ["265.88", "ans  which is 9 "], ["267.61", "i take itersleft  subtract 1 from it  there's my new value"], ["270.41", "of itersleft "], ["271.53", "and again  i go back to the top of the loop "], ["273.35", "at this point  0 being not equal to 0 is false "], ["277.3", "terrible way of saying it  but that test is no longer true "], ["279.37", "it's false "], ["280.1", "in which case  i will skip to the end of this loop  and"], ["284", "print out that x * x  or if you like  3 *"], ["287.3", "3  is equal to 9 "], ["288.86", "cool "], ["289.92", "a little slow  but it does what i want "], ["292.05", "notice i have reused this code an arbitrary number times "], ["296.2", "and in fact  if i were to change x to be something else "], ["299.26", "i will reuse that piece of code a"], ["301.22", "different number of times "], ["302.61", "there's my iteration that i really want "], ["304.7", "you can also see some properties of"], ["306.19", "an iterative loop "], ["307.5", "first of all  we need to set an iteration variable outside"], ["310.34", "of the loop "], ["310.74", "in this case  it's x and itersleft "], ["314.04", "actually  the one i really care about here is itersleft "], ["316.65", "i also need to test that variable to"], ["319.28", "determine when i'm done "], ["321.38", "there's the use of itersleft inside of the test "], ["324.03", "now  it could be a simple test  it could be a more"], ["326.09", "compound test  but that's basically what i need to test "], ["328.72", "and finally  i need to be changing that variable inside"], ["331.75", "of the loop  right there "], ["333.76", "if i didn't  then that test value would never change "], ["336.6", "which means i would never stop the loop "], ["338.69", "but there's a property i need "], ["340.1", "when i set up an iterative loop  i need to say what's the"], ["342.83", "variable i'm setting outside  how am i testing it  and am i"], ["346.96", "making sure to change it somehow inside of the loop in"], ["350.04", "order to ensure that i get the pieces that i want "], ["352.93", "so what do we have now "], ["354.41", "well  that's a really valuable construct "], ["356.92", "we already saw that branching structures  things like"], ["359.17", "conditionals  will let us jump to different pieces of code"], ["361.82", "based on a test "], ["363.77", "once we add in the idea of looping over the code  things"], ["366.37", "like a while loop  that allows us to repeat pieces of code"], ["370.18", "until the condition is satisfied "], ["371.54", "so it's a generalization of a conditional "], ["374.58", "on simple branching structures  we've already said"], ["377.12", "that programs like that are constant time  that is  we"], ["379.7", "execute each instruction at most  once "], ["382.38", "with looping structures  notice"], ["384.22", "that things are different "], ["385.54", "now  the program is going to take an amount of time that"], ["387.77", "depends on values of variables as well as the amount of code"], ["391.56", "or the number of instructions inside the loop  because it's"], ["394.51", "going to depend how many times we walk through the loop  and"], ["396.37", "that depends on the variable "], ["398.54", "nonetheless  these loops are going to be really valuable "], ["400.91", "and we're going to turn to that next "]], "lcDQ7GqlS-M": [["0.6", "let's apply our curve fitting technology to the results of another"], ["3.66", "experiment "], ["4.84", "what we're going to do is to fire an arrow at a target "], ["8.16", "so as we notch the arrow on the bow spring  and we pull the arrow back "], ["12.79", "getting ready to release it  the arms of the bow are bending  and this is"], ["17.58", "another example of a very powerful spring at work "], ["20.66", "and when we release the arrow  it will fly to the target "], ["24.02", "and what we've done is we've taken a bunch of measurements "], ["26.37", "so as the arrow flies up  and then falls back down and hits the target "], ["31.85", "we're going to be measuring the height of the arrow at various times during"], ["39.82", "its flight to the target and work to fit a curve to that "], ["44.41", "so you can come up with a mathematical equation that describes the"], ["47.48", "flight of the arrow "], ["49.37", "we'll also be looking into ways of measuring how well our curve is"], ["54.035", "actually fitting the data "], ["55.23", "up to now we've been sort of eyeballing it  which was a good start "], ["58.55", "but we can actually develop some sensible mathematical measures that"], ["62.21", "will tell us about the goodness of the fit "], ["65.82", "here's some python code that lets us experiment with the data we got from"], ["70.19", "firing the arrow with the bow "], ["72.64", "as before  we have a procedure that helps us get the data out of the data"], ["76.4", "file and put it into a bunch of lists "], ["80.23", "in this case  what we have is a bunch of distances at which we made the"], ["85.76", "different measurements  and then for each distance  we have the heights at"], ["90.39", "that distance from four separate experiments "], ["94.05", "to actually do the curve fitting  here we have tryfits  which is very much"], ["97.96", "like the routines we've written before "], ["101.1", "we're converting the distances which were in yards into feet  and then"], ["108.39", "we're going to process the four measurements from each of the"], ["114.54", "experiments into one average measurement for the"], ["118.42", "height at that distance "], ["120.56", "with that in place  what we can do is to go off and plot the actual"], ["125.46", "observations  again  as blue circles "], ["127.375", "that's what that little  bo  means there  is the argument to plot "], ["132.05", "and we're going to use polyfit as we have before to do a linear fit to see"], ["137.55", "if there is a linear relationship between the distance this arrow has"], ["142.68", "flown and its height above the target "], ["147.69", "we're all set to go "], ["149.21", "let's save this out  and then run it  and see what the plot looks like "], ["154.48", "so here we have the data "], ["156.18", "you can see it as the arrow flies from the bow over here to the target  and"], ["163.66", "the target looks to be about at 1 080 inches from where it was released "], ["171.71", "you can see it follows a trajectory where it goes up  and then it comes"], ["175.64", "back down again "], ["177.46", "and here's a linear fit of a line to that data  and it's probably fair to"], ["183.21", "say that the hypothesis that the arrow travels in a straight line from the"], ["187.24", "bow to the target is not a good hypothesis "], ["190.01", "you can just see that this linear fit seems to really bear no relationship"], ["195.83", "at all to the actual data points "], ["198.44", "so let's go back to our code  and let's try a parabolic fit "], ["203.81", "and so  what we're going to do is to look for a quadratic equation that"], ["207.3", "relates the distance to the altitude of the arrow "], ["210.65", "so let's get this code back into execution "], ["214.82", "this is just an addition of fitting a second degree equation to the data "], ["221.15", "and let's see how that goes "], ["222.64", "so we're going to save this out  and run it again  and look at the plot "], ["227.53", "and  yes "], ["228.36", "here we go "], ["228.98", "so this curve here actually looks like it fits the data pretty well "], ["234.43", "the jaggedness comes from the fact that we're just simply plotting the"], ["237.83", "parabola only at the data points at which we actually had measurements "], ["242.93", "it would be possible to plot the parabola using many more values "], ["248.26", "since it's a mathematical model  we could choose other distances that we"], ["251.36", "didn't make measurements at  and then the parabola would"], ["253.33", "look much more smooth "], ["254.9", "so that looks like a pretty good fit "], ["257.01", "and so  we're sort of happy with that "], ["259.2", "maybe what we should do  though  is to think a little bit about how do we"], ["261.7", "measure the goodness of a fit "], ["263.12", "is there some mathematical analysis we can do that would reveal that the line"], ["269.08", "is a lousy predictor of the observations  whereas the parabola is"], ["274.185", "a much better predictor "], ["276.82", "so how do we measure the goodness of a fit "], ["279.58", "which one of these curves actually fits the data better  the quadratic"], ["285.05", "fit or the linear fit "], ["286.68", "and we can tell by eye which one we seem to think is much better "], ["290.71", "let's see if we can develop a mathematical explanation of"], ["295.07", "which one is better "], ["297.11", "i guess the basic question is  does the model fit the data "], ["300.33", "are our predictions coming close "], ["304.62", "let's start by talking about a measure of the size of the errors that are"], ["311.29", "being generated between the predictions and the observed points "], ["316.19", "so we can talk about the variability of error "], ["318.66", "so  we sort of start there "], ["320.16", "we can say  well  variability of the errors "], ["323.02", "how much are the errors varying "], ["326.51", "so here  we can see that the errors are huge "], ["329.43", "they're big and they're small  and so if we talked about a mean error  how"], ["337.25", "much are we varying from the mean "], ["339.18", "are the errors pretty much all the same  or are they"], ["341.38", "big  or are they small "], ["342.82", "so we're talking about the variability of errors "], ["345.38", "and a standard measure of variability is the variance "], ["349.22", "and in fact  we've seen this "], ["350.49", "this is  in fact  just exactly the least squares if we look at the error "], ["356.16", "which is the difference between the observation and the prediction  and we"], ["360.48", "take the sum of the square of those errors over the whole thing "], ["364.45", "and then we do some sort of normalization here  so there's some"], ["369.4", "sort of normalization constant  which i won't bother to put in "], ["373.67", "that would give us a sense of how much the errors vary "], ["377.95", "so if there was small errors all around  then in fact  the variance of"], ["383.66", "the errors would be small "], ["385.34", "and we can say  well  that's good enough "], ["387.26", "we could just sort of take this number  and whatever its value is  a"], ["391.32", "small value would mean the model fit well  and a large value would means"], ["397", "that the model wasn't fitting "], ["399.43", "but the trouble is that if we're making observations in terms of parse"], ["405.97", "x  the errors may be smaller in parse x  but as an absolute value  the"], ["411.87", "errors are sort of huge "], ["413.38", "so really what we want to do is to compare the variability of the errors"], ["417.27", "to the variability of the original data "], ["420.91", "so we can use the same sort of measure of variability  the variance of the"], ["425.31", "data  which is  again  some sort of normalization factor  and we're going"], ["431.05", "to talk about the values of the observations relative to the mean"], ["436.1", "observation "], ["436.79", "so that would be the variance of the data "], ["439.61", "and what we want to do is to compare those  make a ratio of those two"], ["445.21", "quantities  to get a sense of how well the model is fitting the data "], ["450.62", "so the fraction of the variability that's not explained by the model has"], ["454.71", "to do with the ratio of the variability of the errors  which is"], ["458.35", "the part that we're not explaining with the"], ["460.76", "predictions that we're making "], ["462.25", "over the variability of the observation "], ["465.19", "so think of this as a normalization factor "], ["468.18", "and so  this gives us the fraction of what we're observing that's not"], ["472.41", "explained by the model "], ["473.91", "so that means that the fraction of the variability that is explained by the"], ["477.73", "model is basically 1 minus that ratio  so the variance of the errors over the"], ["483.18", "variance of the data "], ["485.81", "and this is a very useful measure "], ["487.49", "this gives us a sense of how well the model is explaining the observations"], ["492.6", "that we're making  and we hope that we're doing a good job that the"], ["499.44", "variance in the errors is small compared to the variance in the data "], ["503.68", "which means that we're explaining almost all the changes in the data"], ["507.33", "that we see "], ["508.48", "we're able to predict them "], ["509.79", "so  this is given a name  r squared  and this is called the coefficient of"], ["516.19", "determination "], ["517.19", "so when the coefficient of determination is close to 1  that"], ["522.1", "means that the model is doing a good job of explaining the data  and when"], ["528.36", "the coefficient of determination is very small  close to 0  that means"], ["533.63", "that there's not much of a match at all between the model and the data "], ["537.24", "and we never expect r squared to be 1  because that would mean we had no"], ["541.7", "error at all  and we expect most of our experimental observations to have"], ["546.32", "some small amount of error "], ["549.59", "let's put this observation into some code "], ["552.46", "up here  we've written a procedure that will compute the r squared value"], ["557.4", "given a set of measurements and a set of predicted values "], ["560.73", "and so  here we can see that we're calculating the sum of the squares of"], ["565.6", "the estimated errors  and then down here we first compute the mean of the"], ["572.19", "observed values  and then we compute the difference between the mean and"], ["577.29", "the measured values and the sum of that squared "], ["580.06", "so we've left out the normalizing factor for the variances  since the"], ["585.14", "two normalizing factors cancel on the ratio "], ["587.96", "so finally  we form that ratio of the variance of the errors over the"], ["595.38", "variance of the data  and then we subtract that from 1 to get the r"], ["599.47", "squared value "], ["600.87", "and then down here  what we've done is to modify tryfits into tryfits1  and"], ["605.64", "we've simply gone ahead and calculated the r squared value for each of the"], ["610.13", "two fits  and put that on our plot "], ["612.59", "so we're all ready to run that "], ["614.14", "that's the code down here "], ["615.74", "so let's save this out  and then run it  and see what we get "], ["621.2", "so now  the plot is exactly the same as before  except that we've reported"], ["625.67", "the r squared value for each of the two models "], ["629.13", "you see the linear model  which we sort of suspected wasn't a good fit at"], ["632.87", "all  actually is a very  very poor r squared "], ["635.87", "the variability of the data is not explained well at all"], ["639.74", "by the linear model "], ["641.3", "however  the quadratic model actually has a very good r squared "], ["645.3", "so that means that  in fact  the quadratic model is explaining most of"], ["649.28", "the changes that we see in the observation  so the model predicts"], ["653.28", "those changes "], ["654.65", "and there's a small amount of variance in the observations that's not being"], ["658.67", "explained  and that comes from the observational errors "], ["663.31", "so the conclusion is that we can use the r squared value to give us a sense"], ["667.43", "of whether our model is doing a good job of predicting what the data is"], ["671.69", "actually doing "], ["673.12", "if r squared is close to 1  the prediction is good  and if it's not"], ["676.51", "close to 1  then the prediction is less good  and maybe we should"], ["680.12", "continue our search for a better model "]], "WntLU2CrfdE": [["0.92", "let's visualize what happens with a fibonacci series  using the original"], ["4.86", "idea from leonardo "], ["6.66", "we start off with the single female "], ["9.06", "at the end of one month  she's pregnant "], ["11.06", "which means at the end of the next month  she's still there  but she's"], ["14.5", "given birth or whelped another female "], ["17.02", "at the end of the next month  that first female again has"], ["20.23", "whelped one more time "], ["21.18", "the first offspring is now pregnant "], ["23.56", "and there are now three rabbits running around "], ["26.2", "and at each stage you can see that after one month of growth  if you"], ["29.85", "like  each new rabbit produces another one "], ["32.34", "so at this next stage two of them whelp  at the next stage three of them"], ["35.88", "whelp  at the next stage five of them whelp "], ["38.24", "and you can see we're going to have a ton of rabbits in a hurry "]], "gAj5vgOzJB0": [["3.91", "you've learned "], ["5.19", "think about it  you've actually covered a great deal"], ["7.75", "throughout this course "], ["9.74", "let's wrap up by talking about where you're headed "], ["12.56", "first  let me start by pointing out that we know that many  if not all of"], ["15.93", "you  worked incredibly hard  often juggling other time constraints in"], ["20.2", "order to spend time on this course "], ["22.1", "and we really appreciate it "], ["23.76", "we've also worked hard to try and refine the course as we've gone along "], ["27.15", "since it's our first time through it  to try to make sure that it really"], ["29.7", "worked well "], ["30.35", "but we greatly appreciate the effort that you put in "], ["33.69", "i think the key thing i would like you think about is  what's your return on"], ["37.23", "investment "], ["38.2", "you're the only one that really knows it "], ["40.42", "but i really would suggest that it's handy for you to go back and take a"], ["43.71", "look at some of the first problem sets and realize how straightforward they"], ["47.43", "are for you to solve now "], ["49.08", "and yet  remember that maybe when you started  they looked a little scary "], ["52.62", "look at this sophistication of the problem sets throughout the term and"], ["56.77", "realize just how quickly you've come up to speed in terms of being able to"], ["60.43", "think computationally "], ["62.21", "and in particular  think about what you'd be willing to tackle now "], ["64.59", "and compare it to where you were several weeks or several months ago"], ["67.85", "when you started this course "], ["69.76", "you've put in the effort "], ["71.13", "we really hope that your return on investment is high  but we think that"], ["74", "it's likely that you can now solve a wide range of problems much more"], ["77.8", "sophisticated than what it was when you started with this class "], ["81.3", "and we'd like you to remember that in particular  you've now got a set of"], ["85.44", "tools that can give you answers to problems "], ["88.3", "computational thinking is the new arrow in your quiver  if you like "], ["92.3", "we've taught you a set of algorithms "], ["94.02", "basic classes of algorithms "], ["95.61", "but you can use them in any way you'd like "], ["97.87", "so we really hope that you take these ideas and when you now sit down and"], ["101.666", "are faced with the problem  one of the first things you say is  how can i"], ["104.92", "turn this into something computational "], ["107.44", "what kind of algorithm would best tackle this "], ["110", "what are the abstractions that would really be important"], ["112.01", "to think about this "], ["113.36", "how can i suppress detail and focus on the key elements of it "], ["116.96", "how could i write code that helps me give answers to things "], ["120.14", "so that when you get a new problem  first question you ask is  could i"], ["124.4", "capture this computationally  and if i can  how quickly could i write a piece"], ["128.59", "of code that will give me a good approximation the answer that i want "], ["132.84", "that's where you've come to "], ["134.11", "that's where you're headed "], ["134.88", "you now have those tools  and you're ready to run with them "], ["138.76", "what else could you do with it "], ["140.01", "well we hope that you've also now got a basis for computational thinking"], ["143.36", "that sets you up to explore other ideas  whether it's another course"], ["147.41", "online  or whether it's reading  or in other ways "], ["150.37", "but indeed  you are now set to think about other things "], ["153.66", "and here are four suggestions of different areas you might head "], ["156.92", "you're certainly now prepared to think more in detail about algorithms and"], ["160.53", "data structures "], ["162.03", "you knew a lot of basic things "], ["163.18", "you got an amazing setup of tools already in place  but there's a whole"], ["166.61", "wealth of more sophisticated and complicated algorithms that can tackle"], ["171.27", "a wider range of problems available to you "], ["173.62", "and you might think about exploring those ideas "], ["175.63", "again  whether it's reading a book  reading some articles  or trying"], ["179.34", "another online course "], ["181.44", "there's a whole other range of areas called ai  artificial intelligence "], ["185.32", "smart machines "], ["186.81", "and you now have the basis to start using the tools that you have in order"], ["191.24", "to start thinking about those kinds of problems "], ["193.57", "there's a lot of nice courses that introduce you to the notions of ai "], ["196.88", "reasoning about things and under uncertainty in order to deduce new"], ["200.85", "information "], ["201.94", "machine learning  being another very common problem or technique here  that"], ["206.39", "i would suggest is now available to you "], ["208.57", "you have the basis to start thinking about machine learning problems  an"], ["211.87", "area that's becoming very widespread throughout the world and something"], ["215.2", "that you'll learn more about "], ["216.805", "of course  you could build more on programming by taking an additional"], ["220.1", "course in software engineering "], ["222.06", "or you might decide you really want to understand what is inside the machine "], ["225.7", "we talked about that interpreter  that evaluator  but how do you"], ["228.46", "really build one "], ["229.7", "and you could dive inside the machine to think about how does a computer"], ["232.94", "actually put the pieces together and focus on computer architecture "], ["237.16", "finally  what i'd really like to say to you  and all the staff would like"], ["240.42", "to say to you is  good luck "], ["244.27", "you started a journey on computation "], ["246.82", "we hope that journey takes you many places "], ["249.05", "and we hope that you find that the tools you've learned in this course"], ["251.95", "are really of value to you  almost anywhere in any domain in"], ["256.45", "which you're working "], ["257.67", "and that when you are faced with a problem  you say  i know"], ["260.529", "how to solve that "], ["261.47", "i can turn that into a computational solution "], ["263.92", "and i'll write code that gives me the answer i want "], ["267.21", "so good luck "]], "jq7Sujh5uDA": [["4.87", "using guess-and-check methods to find answers to things "], ["8.43", "but we want to take a slight to detour "], ["10.2", "we'd like to use guess and check but not just for"], ["12.87", "integers value  not just finding"], ["14.33", "cube roots of integers "], ["15.87", "we might like to try and find them for other values "], ["18.59", "but to do that  we have to think about using floating"], ["20.59", "point numbers or float "], ["22.26", "and to do that  we also then need to take a little bit of a"], ["24.88", "detour to understand how floats are represented inside"], ["27.67", "of the computer "], ["29.67", "so bear with me for just a little bit "], ["31.07", "we're going to talk about floating point representations"], ["33.22", "and then bring that back to see how we can still use those"], ["35.42", "ideas to find approximation algorithms to get solutions"], ["38.43", "using guess-and-check methods "], ["40.58", "so floats approximate real numbers  but how do they"], ["43.46", "actually do this "], ["44.84", "and let's think for a second though  what is a decimal"], ["46.94", "number  the kind of number we normally deal with "], ["49.14", "well  302 is really 3 * 10^2 + 0 * 10^1 + 2 * 10^0 which of"], ["58.757", "course is just 1 "], ["59.44", "so it's 3 * 100 + 0 * 10 + 2 * 1 "], ["65.269", "that's because we're using base 10  handy because we got"], ["69.39", "10 fingers and 10 toes is an easy way to do counting "], ["72.47", "computers  not having fingers or toes  do things a little"], ["74.94", "differently "], ["76.16", "they represent things in terms of binary numbers or powers of"], ["79.43", "2  basically because in electronics it's easy to have"], ["82.52", "a switch either be on or off  have a 0 or a 1 "], ["85.53", "so a binary number will be a sequence of 1's and 0's that"], ["88.91", "has the same form "], ["89.88", "so the binary number 1  0  0  1  1 is the same as 1 * 2^4 +"], ["96.05", "0 * 2^3 + 0 * 2^2 + 1 * 2^1 + 1 * 2^0  which of course is 1 "], ["104.27", "so if we wanted to convert it to decimal  that's basically"], ["106.86", "16 + 2 + 1 is equal to 19 "], ["110.42", "so decimals  base 10  binary numbers  base 2 "], ["114.69", "internally  the computer represents"], ["116.61", "numbers in binary form "], ["118.8", "so one of the things we'd like to figure out is so how does"], ["121.13", "it actually get to that kind of a stage "], ["124.86", "so let's look at that "], ["127.23", "what does it mean to think about converting a decimal"], ["129.37", "that we type in into a binary form "], ["131.53", "how does the computer convert it into a form it can use "], ["133.69", "and then how are we going to think about that "], ["135.96", "well  let's take an example "], ["136.99", "suppose we give the computer some number "], ["138.75", "we'll call it x "], ["139.94", "and it turns out x is actually 1  0  0  1  1 in binary "], ["143.81", "but we don't know that "], ["144.56", "we want to figure that out "], ["146.53", "well  knowing that it has some form like that "], ["148.97", "what could we do "], ["150.27", "the first thing we can do is if we take the remainder of x"], ["153.57", "with respect to 2 "], ["156.44", "what does that say "], ["157.11", "well  that's says if we're going to divide each of these"], ["159.13", "elements by 2 since x is this sum  we can"], ["161.45", "divide that by 2 evenly "], ["163.48", "we can divide that by 2 evenly  that by 2 evenly  that"], ["166.2", "by 2 evenly "], ["167.11", "but this only cannot "], ["168.37", "so when we do that  the remainder that's left is"], ["171.37", "whatever that bit is "], ["173.57", "and that gives us the last binary bit  which is a 1 "], ["178.39", "that's cool "], ["179.255", "so taking the remainder back with respect to 2 gives us the"], ["182.48", "lowest order bit "], ["184.04", "if we then divide x by 2  what we really do is we just shift"], ["188.21", "the bits left "], ["188.82", "you see that if we divide x by 2 that's going to change that"], ["191.37", "to a 3  that to a 2  that to a 1  that to a 0 "], ["195.67", "this goes away because remember we lose it "], ["197.88", "and what we've done  oh  just get exactly that form "], ["200.66", "we've shifted all the bits left by 1 "], ["204.19", "and we can now do the same thing "], ["205.66", "if we take this new value and get the remainder of that with"], ["208.61", "respect to 2  it's going to give me that  which"], ["210.7", "gives me a second 1 "], ["212.43", "and then shifting left will reduce that to 1  that to 0 "], ["217.92", "then i'll keep going "], ["219.02", "and that will allow me to successively peel off each of"], ["223.21", "the bits in order "], ["225.55", "so we can convert any decimal number into a binary form "], ["231.78", "here's a little piece of code to do it "], ["233.62", "let's just walk through it very quickly "], ["235.25", "this part up here i'm just going to let you look at it "], ["237.75", "but it's pretty straightforward "], ["238.67", "it's basically saying if the number i'm trying to convert"], ["241.43", "is negative i'm going to take the absolute value  but i'll"], ["243.63", "keep track of that so i can put the negative sign back out"], ["246.465", "in front when i'm done "], ["247.45", "and then what does this piece in here do "], ["249", "well  it basically walks through what i just said "], ["251.32", "it says i'm going to set result initially to be an"], ["253.82", "empty string "], ["254.54", "i'm going to gather up the bits "], ["256.2", "and then if the number is 0  i just return 0 "], ["261.12", "otherwise  oh  there is one of those little iterative loops "], ["264.57", "it essentially says  let me strip off the bottom order"], ["267.73", "bit  put it onto the result "], ["270.03", "there's a concatenation of the string  puts it to the left of"], ["273.55", "whatever i've already gotten "], ["275.04", "change number by dividing by 2  which shifts the bits left "], ["278.23", "and keep going "], ["279.18", "so this is getting me the next bit "], ["283.54", "this is just shifting left "], ["286.23", "and i do that  ok  until i get a number that's less than 2 "], ["290.005", "and when i do  i'm done "], ["292.5", "result holds the thing i want "], ["294.7", "and all i need to do is just put a negative sign out in"], ["297.54", "front if in fact what i started with"], ["299.6", "was something negative "], ["301.05", "so this is just doing a conversion back "], ["305.78", "cool "], ["306.79", "let's take a check of this "], ["307.62", "see what it does "], ["308.99", "so here in idle  i've got an example of that "], ["311.16", "i've set a number to be 302 "], ["313.32", "and let's look at what happens if i do that conversion "], ["317.53", "i type it in "], ["318.7", "huh "], ["319.5", "nothing showed up "], ["320.68", "that's right "], ["321.26", "because i didn't ask it to print anything out "], ["322.81", "but i know that result now holds the value i want "], ["326.61", "and it says as a string there is 302 in decimal converted"], ["330.46", "into a binary form "], ["332.48", "i could change to something else "], ["335.358", "make it 256 "], ["337.77", "and do the same thing "], ["339.65", "save it away "], ["341.08", "and again  i need to see where the result is "], ["343.07", "i can do that over here "], ["345.78", "and go back down to where it was "], ["348.6", "here is the result "], ["351.66", "and since i know 256 is a power of 2  that form looks"], ["354.99", "roughly right "], ["356.67", "so what are we doing "], ["357.88", "given a decimal number  we can convert it into binary form "], ["361.47", "and that's literally what the machine will do inside "], ["364.1", "now let's think about what this says "], ["367.18", "first of all  i want to be able to get good"], ["369.12", "approximations to things "], ["370.22", "so what about fractions "], ["371.52", "why don't we deal with a fraction "], ["374.04", "well  let's think about a number like 3/8 "], ["377.3", "in binary  it would be 0 375  which would be 3 * 10^-1  or"], ["381.76", "1/10  + 2 * 1/100 + 5 * 1/1 000 "], ["386.69", "so it has the same form "], ["388.98", "now how could we figure out how to"], ["391.31", "convert this into binary "], ["392.93", "well  suppose we could find a power of 2 big enough so that"], ["396.34", "when we multiplied it by this fraction it turned it into a"], ["398.68", "whole number "], ["399.856", "if we can do that  then we could take the whole number "], ["402.26", "convert it into binary using the method we just had  and"], ["405.58", "then when we're done divide by the same power of 2 "], ["408.39", "it's just going to shift to the right "], ["410.92", "so  for example  0 375 we kind of know this "], ["413.91", "we multiply it by 8 "], ["415.07", "it gives me 3 "], ["416.73", "that's in decimal form "], ["417.94", "i could convert 3 to binary form  which we know"], ["420.59", "is just 0  1  1 "], ["423.02", "and now that i've got that  i could just divide by 8  which"], ["426.4", "is equivalent to shifting the binary point  if you like "], ["429.59", "three slots over to get 0 011 "], ["432.925", "cool "], ["434.15", "let's do that "], ["436.67", "here's my code "], ["437.92", "and it's really got almost exactly the same form "], ["440.22", "it's a little bit more than we had before  but let's just"], ["442.09", "look at it "], ["442.685", "i've got something up here that's just going to input an"], ["444.83", "x so i'm not having to type new values in "], ["447.38", "and here's a little iterative loop that simply looks for the"], ["451.43", "power of 2 that converts it into a whole number "], ["454.57", "so it's just going to loop over p  looking for a value of"], ["457.95", "p such that 2^p * x is a whole number "], ["463.6", "its remainder with respect 1 is equal to 0 "], ["466.75", "cool little check "], ["467.76", "i'll just do that "], ["469.95", "once i can do that  then i'll take x and i'll"], ["472.48", "multiply it by 2^p "], ["473.95", "i've converted it now into a whole number "], ["476.55", "and there  i just did what i did before  simply run through"], ["480.14", "that test to see how do i convert it back"], ["482.53", "into a binary form "], ["484.8", "and once i'm done  then the last piece is i need to make"], ["487.81", "sure i put enough zeroes out front by looking at how many"], ["491.7", "values are there between the size of p and the length of"], ["495.2", "the result "], ["496.18", "and then having done that  i just need to find the right"], ["499.3", "place to put the decimal point "], ["501.51", "and there's a funky little piece of code that is"], ["503.39", "basically finding the spot in between p where"], ["507.12", "we want to do it "], ["508.37", "we'll let you look at the details of it "], ["509.75", "but that's basically what this code does  finds the power of"], ["513.109", "p to make it a whole number  does the conversion  and then"], ["515.964", "converts it back "], ["517.49", "ok "], ["518.38", "so let's see what we got here "], ["520.29", "go over to my idle "], ["521.755", "and i've got a piece of code that captures that "], ["525.511", "all right "], ["527.82", "there's the piece of code right there "], ["530.06", "and let's run it and see what happens "], ["532.735", "i'm going to run that piece of code "], ["534.6", "it says give me a decimal number "], ["536.08", "in this case between 0 and 1 because that's where i'm going"], ["538.54", "to deal with it "], ["539.56", "well  let's try 0 375 "], ["543.44", "ahh "], ["544.26", "runs through three steps to get the remainders  and it"], ["546.48", "converts it into that binary form which"], ["548.39", "we saw before  0 011 "], ["551.14", "sounds cool "], ["552.54", "let's try it again "], ["556.33", "we enter this  oh  i don't know  something simple  0 1 "], ["561.43", "ohh  it's working away here "], ["564.23", "and it's working away really hard trying to find something "], ["567.74", "and it says  my goodness  the binary representation of the"], ["571.85", "decimal 0 1 is  ohh  look at that "], ["574.52", "0 0001100110011001 "], ["579.36", "well  you get the idea "], ["580.38", "it's really boring and repetitive "], ["582.97", "ha "], ["584.3", "so what happened here "], ["585.82", "that's a little different "], ["586.65", "we didn't get some nice  crisp  clean form "], ["589.54", "and in fact that's going to be an important factor when we"], ["592.12", "think about binary numbers and decimal numbers"], ["594.97", "and especially fractions "], ["597.36", "so what's one of the implications "], ["598.83", "if there is no integer p such that x * 2^p is a whole"], ["603.88", "number  then the internal representation is always going"], ["607.07", "to be an approximation "], ["608.05", "and in fact what happened here was that the python system"], ["611.77", "eventually stopped trying to expand it out any further and"], ["614.92", "simply gave us a representation out to some"], ["617.38", "arbitrary number of bits that are set by the internals of"], ["619.98", "the python system "], ["621.53", "so if it's not something that can be turned into a whole"], ["624.37", "number by a power of p  it's always going to be an"], ["626.91", "approximation "], ["628.29", "this has an important implication "], ["629.7", "it says  when i want to test two floats to see if they're"], ["632.96", "the same i shouldn't use something like this because it"], ["637.23", "might not be true because the approximations"], ["639.11", "may be slightly different "], ["640.55", "i'm always better basically saying  is the absolute"], ["643.31", "difference between them smaller than"], ["644.77", "some arbitrary amount "], ["646.652", "and we're going to use that a lot "], ["648.14", "this is a standard place where people get into trouble by"], ["650.47", "trying to test the quality of two floats and then being"], ["652.74", "surprised when in fact the code doesn't"], ["654.48", "do what they'd like "], ["656.23", "one of the things you could ask is  so why does print of"], ["658.44", "0 1 give us back 0 1 if in fact 0 1 is represented as"], ["663.27", "this long  funky kind of thing "], ["665.58", "and the answer is because the designers of python decided to"], ["667.96", "set it up this way  that it automatically rounds to some"], ["670.96", "number of bits in order to give"], ["672.63", "something that's much crisper "], ["673.98", "but in fact 0 1 is not represented as 0 1 inside of"], ["677.69", "the machine "], ["678.95", "that's going to be important now as we think about taking"], ["681.17", "this idea of iterative algorithms  especially"], ["683.32", "guess-and-check algorithms  but dealing with floating"], ["686.17", "point numbers "]], "CqeyFtxCqqE": [["0.77", "chris terman  early programming languages didn't offer much support"], ["3.92", "for structuring complex programs "], ["5.85", "they gave local variables and global variables and not much else "], ["11.09", "as programs became more complex  we needed to find a way to control which"], ["15.67", "procedures could access which data "], ["18.14", "procedures that willy-nilly made access to whatever data they could get"], ["22.42", "their hands on lead to hard to find bugs "], ["26.81", "so we needed a more organized way "], ["29.27", "and we came up with the idea of bundling data and the associated"], ["33.53", "procedures into an object with a well defined interface "], ["39.77", "early object-oriented programming languages started appearing in the"], ["42.96", "'60s and '70s "], ["44.87", "and by the '90s  most programmers had adopted the object-oriented"], ["48.31", "programming style because it was an efficient way to write and debug"], ["52.29", "complex programming systems "], ["55.33", "over the next two lectures  we're going to explore python support for"], ["58.72", "object-oriented programming "], ["60.3", "python supports many different kinds of data "], ["62.82", "there's integers  and floating point numbers  and strings  and lists  and"], ["66.19", "dictionaries "], ["67.28", "and you've been using these data structures as you've been"], ["70.01", "writing your programs "], ["71.55", "from a python point of view  each of these is an object "], ["75.42", "what  you ask  is an object "], ["77.44", "well  objects have a type "], ["79.53", "and a particular object is said to be an instance of a type "], ["82.76", "so here's the type of all the objects above "], ["84.41", "and one  two  three  four is an instance of type integer "], ["89.05", "why we introduce the notion of types is to that the behavior of an object"], ["94.71", "is actually associated with the type "], ["97.25", "in other words  how integers work when you add them together  use the plus"], ["101.47", "operator on them "], ["102.8", "that's actually different with integers than it is for floats  or"], ["106.88", "strings  or lists "], ["108.57", "and so  associated with each type is the information that's needed to say"], ["113.12", "how do i do a plus operation  for example "], ["116.75", "associated with each object is an internal data representation "], ["120.05", "some objects  like integers and floats and strings  are primitive "], ["123.42", "in other words  they hold some data and that's it "], ["126.95", "they don't have much in the way of internal structure "], ["130.35", "other objects like lists and dictionaries are composite objects "], ["134.84", "they actually are a collection of other objects in the system "], ["138.6", "and they organize that collection in particularly convenient ways "], ["142.64", "finally  each object has a set of procedures for"], ["145.29", "interacting with the object "], ["146.73", "so for example  ints have a procedure for dealing with adding two ints"], ["150.53", "together  and lists have a separate procedure for"], ["153.05", "adding two lists together "], ["154.32", "in the case of lists that means to concatenate them "], ["157.71", "let's look at this more closely "], ["159.57", "so here's an example data object  the list  one  two  three  four "], ["162.64", "so the python type of that data object is list "], ["167.16", "there's an internal data representation "], ["169.41", "and we have some choices to make as an implementer of list "], ["172.28", "for example  we could store the components of a list in a little "], ["176.49", "sequential array of memory locations  each of which holds a pointer to an"], ["181.27", "object and associate with that array  a particular length  l of the list "], ["186.41", "in our particular example  the length would be four "], ["189.49", "and so long as there's enough room in the array to store four elements "], ["192.39", "we're all set to go "], ["194.09", "alternatively  we might choose to store a list as a linked list of"], ["198.48", "individual cells "], ["199.55", "so we'd have a cell holding one  and a cell holding two  and a cell holding"], ["202.9", "three  and a cell holding four "], ["204.86", "and the other half of each cell would be a pointer to the next cell  so a"], ["209.34", "little daisy chain of these cells  one for each element of the list "], ["213.56", "why would you choose one implementation over the other "], ["216.41", "well  one of the considerations is what operations do"], ["220.175", "you want to be efficient "], ["221.23", "for instance  suppose you wanted to take the length of the list "], ["224.67", "well in the top representation  the length is explicit "], ["228.18", "it's actually stored as an integer as part of the internal data "], ["231.43", "and when a user asks for the length of a list  just look up that"], ["234.94", "integer and return it "], ["236.01", "very quick  very efficient "], ["237.63", "if you ask for the length of the link list  you'd actually have to go down"], ["241.3", "that list  counting as you go  to count the number of cells that have"], ["245.17", "been linked together "], ["246.32", "so the linked operation is very inexpensive with the top"], ["249.28", "representation "], ["250.78", "and more expensive with the bottom representation "], ["255", "but now suppose that an important operation is inserting something at"], ["258.769", "the beginning of a list "], ["260.73", "with the array  we'd actually have to spend the time to copy all the"], ["265.34", "elements in the array up one index "], ["268.08", "and then we'd have room to drop the new object at the"], ["270.78", "beginning of the array "], ["271.91", "that is potentially an expensive operation "], ["274.39", "we actually have to move everything around inside the internal data"], ["278.45", "representation "], ["279.9", "with a link list  we simply have to create a new cell and make the pointer"], ["285.44", "in that first cell now point to the rest of the list "], ["288.09", "so inserting at the beginning of a list is actually very simple with the"], ["291.76", "second representation "], ["293.79", "there's a struggle implementers go through when they choose internal"], ["297.06", "representations "], ["297.89", "they have to think about what they want to be efficient and what things"], ["301.92", "they want to be easy "], ["304.13", "the internal representation is meant to be private in the sense that users"], ["308.06", "of the object shouldn't rely on any particular details "], ["311.34", "so for example  a user should use some sort of procedure that's associated"], ["316.05", "with a list to get its link "], ["317.23", "they shouldn't assume that can reach in and grab an internal integer and"], ["321.85", "simply use that as the length "], ["323.81", "and so correct behavior of the objects might be compromised if you actually"], ["329.19", "make some assumptions about the internal data "], ["332.86", "lists have a lot of procedures associated with them "], ["334.94", "there's procedures for indexing into a list  or creating sub-lists for"], ["338.86", "concatenating or replicating the list "], ["340.62", "that's the plus and the star "], ["342.33", "we can ask many things about the list "], ["344.12", "we can find the minimum element "], ["345.54", "we can search for a particular element "], ["347.65", "we can ask for the length of the list "], ["349.58", "we can remove elements from the list  so forth and so on "], ["352.26", "so all the behaviors that are available to the programmer are really"], ["355.61", "described by this list of procedures "], ["358.15", "and the procedures know about the internal data representation "], ["361.36", "but a user of lists should restrict themselves to the functionality"], ["365.67", "provided by the operators and procedures "], ["370.57", "let's pop up a level and talk about object-oriented"], ["373.55", "programming in general "], ["375.2", "object-oriented programming is sort of affectionately known as oop "], ["379.02", "oop "], ["380.95", "first off  in an object-oriented programming view of the world "], ["383.98", "everything is an object and has a type "], ["386.41", "for example  the presentation that you're watching would be represented"], ["389.45", "as an object "], ["390.43", "and somewhere inside of its internal representation would be a list of"], ["394.43", "slide objects  one for each slide in the presentation "], ["397.79", "and each slide object would have internally  perhaps  a list of text"], ["402.92", "boxes that represent each of the little groups of text on the slide  so"], ["407.99", "forth and so on "], ["408.61", "so what we've done is to break a fairly complicated idea of a"], ["412.74", "presentation down into this hierarchy of objects  which sort of makes it a"], ["417.33", "little simpler to  sort of  think about how to actually organize the"], ["420.47", "program that produces presentations "], ["424.12", "objects are a data abstraction that encapsulate an internal representation"], ["428.59", "in an interface for interacting with the object "], ["431.39", "so remember that the interface defines behaviors "], ["434.01", "for instance  length or display on screen  or something like that "], ["437.96", "but the details are hidden inside the actual implementation that lies behind"], ["443.59", "the interface "], ["444.54", "the way you interact with the object is simply to ask the appropriate piece"], ["448.55", "of the interface to perform the desired operation "], ["452.45", "in python  the interface is actually represented as a set of attributes "], ["456.34", "and there's a data attributes and procedural attributes  which we give"], ["460.53", "the special name to of methods "], ["464.96", "some languages have support for data hiding  which prevents access to"], ["468.72", "private attributes "], ["469.83", "so in implementing behavior  some of the attributes may be intended for"], ["473.27", "public consumption and other attributes may actually only be for"], ["477.29", "the internal use of the implementation "], ["480.81", "in some languages  you can declare some attributes"], ["482.93", "private and others public "], ["484.62", "python doesn't have that distinction "], ["486.66", "so when you read a particular type of object  you will get a list of things"], ["491.36", "that you're allowed to do "], ["492.77", "attributes you're allowed to use "], ["494.4", "and so  you're just expected to play by the rules  even if you know"], ["497.07", "something more about other attributes that might be available "], ["501.57", "of course  one can create new instances of objects  either"], ["504.1", "explicitly "], ["504.82", "and we'll show you how to do that in a minute "], ["506.51", "or often using literals "], ["507.88", "so when i typed in the text  one  two  three  four  in my python program  the"], ["513.27", "python interpreter knows how to take those characters and convert them into"], ["517.21", "an integer object "], ["518.82", "and we can destroy objects "], ["520.32", "we can destroy them explicitly using the delete operation in python  or we"], ["525.94", "can just forget about them "], ["526.99", "we can sort of lose our handle to them "], ["528.64", "so if we say a equals some list  and then later  on we say a equals some"], ["533.07", "other list  that first list disappeared "], ["535.59", "in other words  it used to be the value of a and that's"], ["537.9", "how it got to it "], ["538.9", "but now that the value of a has changed  we can no longer"], ["541.76", "get to that old list "], ["543.6", "so python system will actually reclaim destroyed or inaccessible objects "], ["547.52", "it will go take that first list and return it back to its storage pool"], ["551.1", "since no one can actually access it anymore "], ["553.5", "and that process  quite appropriately  is called garbage collection "], ["557.685", "what are the advantages of object-oriented programming "], ["561.48", "i suggest you actually google for advantages of oop "], ["564.58", "you'll find a bunch of very interesting articles that describe why"], ["568.76", "object-oriented programming has taken the programming world by storm "], ["573.16", "here's some thoughts that i have "], ["575.06", "it provides a way of doing divide and conquer development "], ["578.7", "what i can do is to go off and implement and test the behavior of"], ["582.77", "each of my classes of objects individually "], ["585.81", "so i can think about when i  for instance  implementing presentation"], ["589.41", "program  i can think about as the presentation as a"], ["591.96", "collection of slides "], ["593.36", "and i'll think of making an actual slide show as sort of going through"], ["598.18", "and displaying each slide individually  one at a time "], ["602.69", "and then  each slide  when it's asked to display itself  might go through"], ["606.11", "and say to each text box  please display yourself at your location on"], ["609.712", "the screen "], ["611.44", "what i can do is work  sort of  from the bottom up of implementing the"], ["615.08", "display of text boxes  and then a display of slides  and finally the"], ["619.66", "display of the entire presentation "], ["621.74", "and i can work on each of those behaviors separately  assuming that"], ["624.61", "the other behaviors have been implemented correctly "], ["627.37", "so this increases the modularity and really reduces the complexity "], ["630.7", "the complexity of doing a slide show from the presentation point of view"], ["634.18", "really is as simple as individually presenting each of the slides in turn "], ["638.97", "so classes make it easy to reuse code "], ["641.57", "and  in fact  many of the python modules you've been using  really the"], ["644.693", "way they deliver the functionality is they define new classes  and all the"], ["648.92", "methods  and internal data that they have  and you basically  interface"], ["653.51", "with those classes to access the functionality"], ["656.34", "implemented by the module "], ["658.88", "each class has a separate name space "], ["660.65", "so there's no collision on function names "], ["663.19", "i don't have to have a separate procedure called integer"], ["665.47", "plus and list plus "], ["667.49", "i can basically look inside a class and say please"], ["671.62", "use your plus procedure "], ["672.97", "and that's completely a unique way of specifying which plus i need "], ["678.74", "and finally  inheritance allowed sub-classes "], ["681.27", "which we'll meet in a minute "], ["682.49", "to refine or extend a selected subset of a superclass' behavior "], ["687.08", "what i'll be able to do is to say  look  i want to design a special mit"], ["691.96", "presentation  which is just like a normal presentation but has a little"], ["695.81", "mit symbol in the bottom left-hand corner "], ["698.15", "so i can change one aspect of  for instance  the display routine to build"], ["703.07", "that extra piece of functionality in "], ["705.03", "but i can inherit all the functionality that's inherent in the"], ["708.47", "base presentation code to do slide shows  so forth and so on "]], "Gt8RHv3oTSA": [["0.465", "chris terman  finally  let's talk about exceptions "], ["3.02", "exceptions are an important feature of many programming languages that allow"], ["6.3", "the program to signal when it can't proceed and get the correct answer "], ["10.8", "there's something wrong with the data that it's manipulating "], ["12.98", "it's detected an error condition "], ["15.63", "in python  you can not only raise exceptions  but you can handle them "], ["18.75", "you can wrap a particular piece of code up in such a way that any"], ["22.42", "exception that is generated transfers control to special code that you've"], ["26.16", "written to deal with the exception "], ["27.66", "that's a pretty handy feature  as you'll see "], ["30.55", "our python programs have been dealing with exceptions for a while now "], ["33.97", "let's talk in detail about how that works "], ["37.36", "so the basic question we have is  what should we do when our procedure has to"], ["41.76", "stop execution because there's some sort of error condition "], ["45.56", "we have three choices available to us "], ["48", "one is we can fail silently "], ["49.42", "we can substitute in the appropriate default values and continue execution "], ["53.54", "and the advantage of that is that the program never fails "], ["56.66", "i always get some answer back "], ["58.39", "but basically that's a really bad idea "], ["61.47", "the user gets an answer "], ["62.89", "that's ok "], ["64.31", "but they get also get no indication that the result that they got may be"], ["68.02", "suspect because of some error condition and the substitution of"], ["70.96", "default values "], ["72.07", "so in general  that's not the way we should go "], ["75.352", "a slightly more tasteful approach is to return a special error value "], ["79.72", "for example  if i had a procedure that was expecting to produce a number  i"], ["83.26", "could instead produce the python object none to indicate that no number"], ["88.15", "was available  that some error happened and here's my indication  a"], ["93.15", "special return value "], ["94.9", "it can sometimes be a challenge to figure out what special return value"], ["98.87", "is distinguished from all the other possible return values "], ["101.66", "but assuming you solve that problem  there's a bigger issue  because if i"], ["107.57", "have a procedure that can return one of these special values  then whenever"], ["111.46", "i call that procedure  i have to include code in my own body which has"], ["119.95", "to check for the special value and then deal with whatever the"], ["122.94", "consequences are "], ["124.28", "and maybe what i have to do is say  well  i don't know what to do with it "], ["127.06", "it must be an error that i'll give to my caller "], ["130.009", "so i generate my own special value  whatever that is  and"], ["133.15", "return that to my caller "], ["135.11", "and so what happens is that all the procedure calls get surrounded by"], ["140.04", "special  if  tests to check the results and deal with any error"], ["143.87", "conditions reported in this way "], ["146.03", "so it really complicates the program "], ["147.89", "instead of this very simple program of nested procedure calls  i end up with"], ["151.84", "a lot of code that is checking for special case values "], ["155.27", "so it gets the job done  but it's really a burden on the programmer "], ["159.54", "happily  python provides us a tasteful alternative "], ["162.37", "we can raise an exception "], ["164.41", "so this is a condition that will basically propagate up through all the"], ["168.96", "nested procedure calls "], ["170.71", "and each procedure call will have a chance to deal with the exception "], ["174.5", "if none of the nested procedure calls deals with the exception that was"], ["181.46", "created  then in fact the python interpreter will do the right thing"], ["185.19", "and create this nice little error message to the user  giving a"], ["188.86", "backtrace  showing exactly where we were in the execution of the program"], ["193.95", "and print out this descriptive string "], ["197.19", "so the way we actually create an exception inside python is we use the"], ["200.73", "raise keyword followed by the creation of whatever type of exception we're"], ["207.98", "trying to raise "], ["208.72", "in this case  just a generic exception "], ["211.11", "and all the exceptions here take as their argument a descriptive string "], ["220.11", "if we wish  we can provide handlers for exceptions "], ["223.61", "so for example  if i'm going to do an operation which might create an"], ["226.89", "exception and i'm willing to deal with that  what i can do is embed those"], ["232.36", "statements inside of the body of a try statement  followed by some code that"], ["239.53", "will deal with the exception "], ["241.79", "so the way this works is that as i'm executing statements in the body of"], ["246.99", "the try  if any one of them throws an exception  python will look in the"], ["251.28", "list of exception handlers to see if one of them will"], ["254.62", "actually deal with it "], ["255.63", "in this case  i'm willing to deal with any possible exception "], ["259.26", "and so any exception that happens in the body of this code will result in"], ["263.6", "the execution of this python statement "], ["266.99", "so just to summarize  exceptions inside the body of the try will then"], ["271.72", "cause python to look through the exception handlers listed after the"], ["275.48", "try statement  and whichever one matches first  it will then start"], ["279.54", "executing statements from the body of the exception handler "], ["283.41", "in this particular case  what can happen is that the open statement can"], ["289.09", "discover the file doesn't exist and create an i/o error exception "], ["294.12", "what happens is that i want to catch that exception in my code  and instead"], ["298.38", "of getting some sort of obscure i/o error  i turn it into a generic"], ["301.97", "exception with a more sensible error message saying "], ["304.38", "can't open grades file "], ["306.55", "if you'd like to see more about how try and except works  you can look in"], ["312.42", "section 8 of the python tutorial "], ["315.71", "so usually a handler is only meant to deal with a"], ["318.09", "particular type of exception "], ["320.37", "and sometimes we need to deal with cleanup actions before continuing "], ["324.63", "so in this case  i've refined my example a little bit further to say "], ["329.67", "look  i have an i/o error here "], ["333.32", "i want to deal with the fact that  if this open fails  i know the type of"], ["337.15", "error i'm going to get "], ["338.01", "i'm going to get an i/o error "], ["339.62", "and in that case  i'm going to print out a very specific error message and"], ["343.04", "cease execution of my program "], ["345.31", "and what i've done is i say  look  i can't open the grades file "], ["348.23", "and i've also captured the actual exception object that was created by"], ["355.41", "whatever the low-level exception was  and i report that as well as my"], ["358.74", "generic error message "], ["360.33", "separately  there may be some arithmetic calculations on the errors"], ["363.58", "later on  and i can catch those and print out another informative error"], ["367.03", "message  in this case saying  oh  there was a bug in the grade"], ["370.48", "calculation "], ["371.53", "so this differs  because it's a much more nuanced handling of errors "], ["374.94", "i'm distinguishing i/o errors that come from the open statement from"], ["378.41", "arithmetic errors that come from the code that's processing the grades "], ["385.88", "and i can have as many different except statements as i want  dealing"], ["389.49", "with the different types of errors that i expect to get "], ["393.38", "we've seen a lot of the common errors "], ["394.91", "you get syntax errors "], ["396.11", "that's when your python can't parse a program "], ["398.79", "a name error  when local or global name can't be found "], ["402.92", "an attribute error  which is when we have an attribute"], ["405.4", "reference that fails "], ["406.45", "we've asked for an attribute of an object that doesn't exist "], ["409.61", "we get a type error "], ["410.96", "that's when the operand doesn't have a correct type "], ["413.67", "so i'm asking to add a string and a number together "], ["416.9", "and the plus operator doesn't know how to do that  so it's an"], ["420.5", "illegal type of operand "], ["423.67", "a value error  in which the operand types are ok  but"], ["426.8", "the value is illegal "], ["427.74", "for instance  division by zero "], ["429.18", "i mean  zero's a perfectly good number  so it's in general a legal"], ["432.41", "operand to divide "], ["433.52", "it's just that it's particular value of zero in the denominator causes us"], ["440.27", "to say  aha  we can't do this particular division "], ["443.23", "and we just talked about i/o error "], ["445.82", "and if you want to see a list of all the different kinds of errors and what"], ["448.86", "they mean  you can look in section 6 of the python standard library "], ["453.66", "there's a couple other handy extensions to try "], ["455.79", "we've talked about the except statements that can follow try "], ["459.09", "we can also have an else clause after a try statement "], ["463.46", "and this will be executed when the execution of the associated try body"], ["468.03", "completes with no exceptions "], ["470.51", "so this is what we would do if the try body completes successfully "], ["474.75", "and finally  there's the finally clause "], ["477.08", "so this is a clause that's always executed after the try statement and"], ["482.52", "all the else statements and except clauses that apply "], ["485.98", "and even when one of these clauses "], ["488.25", "either the try or the else clause or the except clauses  which might be"], ["493.64", "inside a loop of some sort  or inside a procedure call "], ["496.42", "they may have executed a break or a continue or a return "], ["499.98", "that's fine "], ["500.7", "they're allowed to do that "], ["501.81", "but before we actually finish the execution of this particular try"], ["506.62", "statement and all of its clauses  the body of the finally will be run "], ["510.18", "so we often put in cleanup code there that should be run "], ["513.09", "for example  closing any open files that we created "], ["515.75", "no matter what else happens  errors or not "], ["518.69", "to see how this works  let's look at a little example "], ["521.879", "i've created a divide routine which is going to attempt to divide the two"], ["525.76", "operands and return the result "], ["528.45", "so because that may fail "], ["531.04", "particularly if y is 0 "], ["533.04", "what i'm going to do is embed the operation that i know might raise an"], ["538.12", "exception inside a try statement "], ["540.63", "and then  in the case of a division by zero detected by the low-level python"], ["546.53", "divide routine  i'm going to print out  division by zero is"], ["550.52", "the message i return "], ["552.58", "otherwise  if i successfully complete the divide operation  i'm going to"], ["558.88", "print out what the answer is "], ["560.84", "and finally  in either case  i'm going to hopefully execute"], ["565.66", "this finally clause "], ["567.07", "so let's see how this works "], ["568.94", "so i'm going to go off and say divide of 2 and 1 "], ["573.66", "so in this case  because there were no errors  this thing completed"], ["578.86", "successfully "], ["580.31", "we actually put a legitimate value into the divide local variable "], ["585.35", "and after the completion of the try statement  since there were no"], ["588.72", "exceptions  we executed the else clause  which basically says  print"], ["593.1", "out this answer and return "], ["594.61", "so result is 2  is what it printed out "], ["597.7", "and then after i finish the else clause  this will be executed here "], ["602.52", "and we can see we actually executed the body of the finally clause  which"], ["606.42", "printed out the executing finally clause statement "], ["610.74", "now let's do a divide that will cause an exception "], ["614.95", "so in this case  execution of the body did not complete successfully "], ["620.03", "it raised a zero division error  which i actually have a handler for "], ["623.88", "so when the body of the try raised an error  python looked down my clauses"], ["630.87", "following the try and discovered that i declared an exception handler for"], ["635.43", "the zero division error  which prints out division by zero "], ["638.44", "so it does that "], ["639.6", "it's now done with the try  and it's going to return  but before doing so "], ["643.86", "it once again executes the finally statement "], ["645.92", "so finally gets executed whether or not there was an exception "], ["649.92", "now let's try one final experiment "], ["652.47", "let's try some operations that we would assume will raise a type error "], ["657.95", "and in fact  we do get a type error like so "], ["661.24", "and since that error is not caught anywhere  it actually will percolate"], ["667.07", "all the way up to the python interpreter  and we get the standard"], ["670.13", "error result where we get a little traceback of where we were  followed"], ["674.45", "by the little descriptive string that was part of the creation of the type"], ["680.99", "error object that we created  which was a description of"], ["685.04", "what the problem was "], ["686.4", "but notice  before we got the traceback  even though we had no"], ["690.31", "exception handler  so we weren't going to do any except clauses "], ["694.03", "and since it didn't compete successfully  we weren't going to do"], ["697.41", "the else clause "], ["698.56", "we still nonetheless executed the finally clause and"], ["702.25", "printed out our message "]], "oJa01jCfTCU": [["4.2", "we've seen giving names to those "], ["5.48", "we've seen how we can combine those together using names and"], ["8.5", "places where we would use values "], ["10.18", "we can start doing some simple computations "], ["12.79", "but those are all dealing with scalar objects  numbers "], ["16.68", "let's talk briefly about other kinds of objects "], ["19.1", "we'll come back to them later on  but we want to see what we"], ["21.19", "can do here "], ["22.34", "so non-scalar objects are compound things  things whose"], ["25.56", "proportions or components we can get at "], ["28.28", "we'll see a lot of these throughout the course of this"], ["31.08", "subject  but the simplest one to start with are what are"], ["34.03", "called strings  or objects that have a"], ["36.34", "type str for string "], ["38.12", "and these are literally just sequences of characters that"], ["41.91", "are all concatenated together "], ["44.35", "so how do we write them "], ["45.94", "well literals of this type can be written either by putting"], ["48.58", "them inside of a single quote or putting them inside of"], ["51.28", "double quotes "], ["52.6", "and so if i go to my python shell  for example  we can see"], ["57.32", "that we can put things within a single quote "], ["61.17", "and that gives us that string back "], ["63.95", "by the way  we can give names to those things "], ["68.08", "so we can say  what's the value of foo  and  in fact  we"], ["72.41", "can look at the type and we'll see that it gives us back"], ["75.66", "something of type string or str "], ["78.54", "and  by the way  we can also put quotes around numbers "], ["81.74", "so this is a string "], ["84.89", "and just to see that  let's ask for the type of that "], ["89.04", "the type of that sequence of characters  numeral one "], ["92.27", "numeral two  numeral three  inside of the"], ["93.85", "quotes is a string "], ["96.01", "and that is different than the type of the number itself"], ["100.16", "which is in int "], ["102.03", "so we can put together strings "], ["104.8", "if we can put them together we'd like to be able to do"], ["107.44", "things with them "], ["107.83", "and i want to show you some examples of those "], ["110.41", "so we can provide different operations on strings "], ["115.28", "now some of these maybe a little surprising "], ["116.88", "so let's walk through them "], ["117.74", "the first one is we can ask for taking the string a and"], ["123.7", "multiplying it by the number three "], ["125.12", "and that may sound strange "], ["126.76", "but what it gives us is a string with three copies of"], ["129.65", "a's stuck together "], ["131.68", "or  if you like  i could do it with a slightly more"], ["135.02", "complicated string "], ["136.75", "and it literally is just concatenating or copying those"], ["140.17", "versions of those strings together "], ["142.32", "we can put two strings together using addition to"], ["148.21", "give us this concatenated string of a and b "], ["151.44", "and we can  of course  also concatenate together strings"], ["155.8", "if we want to make sure that they are"], ["157.23", "converted into strings "], ["158.26", "so we can take a number  convert it to a string and"], ["160.99", "concatenate that together gives us the string a123 "], ["165.8", "these are just different ways of dealing with strings and"], ["169.26", "putting them together "], ["170.33", "it seems a little odd that we're using operators that"], ["172.79", "don't normally deal with numbers "], ["174.52", "and this is an instance of what we call operator"], ["177.2", "overloading "], ["180.5", "in which what we are doing here  here  here  is we are"], ["187.97", "using the same operator to do different things "], ["190.47", "if we give them numbers it'll do one thing "], ["193.25", "if we give them a number and a string in the case of"], ["195.87", "multiplication it will do something different "], ["197.5", "if we give them two strings it will do something different "], ["200.03", "so we're letting the operator use the type of the object to"], ["203.53", "decide what the right operation is to do "], ["205.98", "the last one we show here is that given we say we now have"], ["208.86", "a non-scalar object we need to know how many portions are"], ["212.24", "there inside of it "], ["213.1", "and for that there's a built-in python function"], ["215.71", "called len for length "], ["217.48", "and if i want to ask for the length of a particular string"], ["223.79", "it gives me back that answer "], ["226.54", "so i now have compound objects that i can do things with "], ["230.6", "well obviously one of the things i'd like to do is not"], ["232.49", "just put them together "], ["233.3", "i'd like to get parts out of them "], ["235.72", "so that leads to the interesting question of how do"], ["238.25", "i get out elements of a compound object like a string "], ["242.03", "and here i want to show two examples "], ["244.87", "the first one is we can do what's called the indexing "], ["247.265", "and let me show you an instance of this "], ["249.7", "if i give the string 'abc' "], ["252.37", "notice the single quotes around it so that is a string "], ["255.08", "and in square brackets are braces after it i give it an"], ["259.06", "integer  like 0  it's going to give me out the element of the"], ["263.76", "string corresponding to that index "], ["266.65", "now how does it do this "], ["267.95", "well it starts "], ["268.99", "well  if you want to think of it this way of"], ["270.77", "counting from 0 "], ["272.92", "so there's the string "], ["274.77", "the zeroth element is that one "], ["277.25", "and it will return that value "], ["279.64", "similarly if i say from the string 'abc' give me the"], ["282.95", "second element it starts at 0 1 2"], ["287.35", "there's the second element "], ["289.01", "and it returns that string "], ["293.18", "now you have to be careful "], ["295.08", "if i ask for the third element "], ["296.88", "remember  i start counting at 0 "], ["299.02", "there's 0  1  2 "], ["301.36", "the third element  oh  there isn't one "], ["303.66", "and we get out an error "], ["305.79", "and we can seen this over here "], ["306.98", "if i  for example  just type it into python "], ["311.48", "i can say give me the string 'abc ' and i'll take  in this"], ["314.79", "case  the first element "], ["316.842", "and that will give me b "], ["319.06", "because i start at 0 and go to 1 "], ["322.09", "now i can also though go backwards "], ["325.88", "so if i have a string 'abc' and i give it in square"], ["328.94", "brackets or braces a negative number  it basically starts at"], ["333.4", "0 and then counts backwards to minus 1 and then to minus 2 "], ["339.08", "so that minus 1 index will return as the c "], ["342.18", "so it basically starts at the back end and counts backward "], ["345.9", "so we get out components of strings which is good "], ["349.03", "now sometimes we'll want to get out not just a single"], ["351.14", "element  we'll want to get out a substring of a string "], ["354.57", "and for that we have a technique called slicing "], ["357.98", "so we have a string called s  then this expression here"], ["363.01", "where we have two expressions  a start and an end that are"], ["365.89", "both integers or their values are integers that denotes the"], ["368.95", "substring that starts at the index pointed to by start and"], ["374.21", "stops just before the index pointed to by end "], ["378.59", "so just to see that "], ["379.68", "if i again take my string 'abc' and i say give me"], ["383.25", "everything starting at one and stopping before the third"], ["386.48", "index it returns for me the string bc "], ["391.06", "we're going to come back to doing things with strings"], ["392.66", "later on  but we wanted to let you see that given compound or"], ["395.67", "non-scalar objects like strings  not only can we"], ["399.35", "combine together but we can also get out pieces of them "], ["402.14", "either individual elements or subcomponents of them "], ["405.21", "and we'll use that as we start doing more interesting"]], "kB6-nallVQ4": [["0.36", "if you want to have a persistent and organized"], ["2.51", "reference  collaboratively collected and edited by the"], ["5.54", "students of your course  you can use the edx wiki "], ["9.38", "you can create a new article by linking to it from an"], ["12.53", "existing article and then clicking on the link "], ["15.75", "you can also create an article from the"], ["17.57", "generic children listing "], ["19.29", "however  your fellow students are more likely to see"], ["22.3", "articles that are linked to from other articles  because"], ["25.44", "that linking allows you readers to see how your"], ["28.19", "information is relevant to what they are already"], ["30.87", "interested in and reading about  making them more likely"], ["33.98", "to be interested in the information that you are"], ["35.88", "putting together "], ["37.41", "the edx wiki editing guide contains the most up-to-date"], ["40.38", "details on how to add formatting for standard text "], ["44.2", "math  schematics  tables  code  and any other new"]], "l8Hw2V1tXmc": [["0.93", "we're going to talk about partitioning up the space of inputs to create a"], ["4.33", "good test suite  a set of examples we're going to use to try to decide"], ["7.61", "whether or not our code is bug free "], ["10.01", "first tool we have is what we call black-box testing "], ["13.86", "and black-box refers to the fact that it's just a box covered in black so we"], ["18.35", "can't see inside of it "], ["19.91", "so here the test suite is designed without actually looking at the code "], ["24.56", "nice thing about this is it can be done by someone other than the"], ["27.11", "implementer "], ["27.99", "so we could have quality assurance group that is actually going to design"], ["30.62", "the test suite here "], ["31.88", "and one of the nice advantages there is that that often can help us avoid"], ["35.25", "inherent biases "], ["37.07", "as an implementer  when i design code  i may be assuming that i'm always"], ["40.02", "going to run this on positive values  for example "], ["42.86", "but if i don't build that into the specification and i don't build in"], ["46.38", "checks for that  somebody else may come along and try it on a negative"], ["49.62", "value and expose the fact that i have a bug inside of my code "], ["52.97", "so that lack of bias  that lack of implicit bias is"], ["56.17", "actually a great plus "], ["58.28", "another thing that's nice is that the testing is designed without knowledge"], ["61.38", "of the implementation "], ["62.59", "since it's built just on looking at the specifications for the problem "], ["66.33", "i don't know how it's actually encoded "], ["68.25", "that means that that same test suite can be reused  even if i change the"], ["72.02", "implementation "], ["73.36", "and that's actually nice  that sort of separation of the details of the"], ["76.27", "implementation from the use of the implementation "], ["78.81", "that abstraction is an important part of how we build modules "], ["82.4", "and testing should take advantage of that "], ["84.45", "and  indeed  black-box testing will "], ["86.94", "all right  now let's look at what does it mean to do some black-box testing "], ["91.06", "so let's think about a specification "], ["93.89", "here's a piece of code "], ["95.67", "and again  here i'm actually just showing you the spec "], ["98.56", "i don't know the details of it "], ["99.98", "it's a square root "], ["101.37", "and it says sqrt takes in two values  x and epsilon "], ["104.86", "and it assumes they're both floats  that x is greater than or equal to 0 "], ["108.98", "epsilon is greater than 0  and it's going to return a result with a"], ["112.05", "particular condition on the end "], ["114.49", "ok  what are the paths through the specification "], ["118.62", "well if i look at this spec  i can see that x "], ["122.85", "there are two conditions  basically "], ["124.36", "i can separate out when x is equal to 0 from where x is greater than 0 "], ["128.66", "and i could  in principle  just create two test cases  one"], ["132.44", "for each one of those "], ["134.18", "but i kind of know that's not enough "], ["136.67", "so the spec itself is simply giving me a first pass of how i might"], ["141.27", "try and test it "], ["141.94", "but i might want to think about other places in which i want"], ["144.32", "to refine that idea "], ["146.9", "ok what does that mean "], ["148.96", "well  let's think about this "], ["151.52", "it's often good not only when i'm thinking about paths through the"], ["155.8", "specification to think about just the possible paths  but to think about the"], ["159.95", "boundary cases "], ["161.87", "as an aside  if i have an input that's a list  what are the boundary cases we"], ["166.04", "might want to think about here "], ["167.2", "well the list could be empty "], ["168.6", "the list could have one element "], ["170.49", "or the list could have many elements "], ["172.92", "difference between 2  3  4  probably not as crucial "], ["175.49", "but the difference between 0  1  and many "], ["178.48", "that's a nice set of boundary conditions to think about "], ["181.58", "for numbers  we can do similar things "], ["183.57", "it's not just is it 0 or positive "], ["185.46", "it's also what happens if the number's very small "], ["188.79", "what happens if the number's very large "], ["190.5", "and what happens in the typical case "], ["192.35", "and i'm going to put quotes around typical  because i'm going to have to"], ["194.54", "think about different variations  what it means to be typical  based on the"], ["198.33", "specifications of the problem "], ["200.91", "so if we go back to my square root example  we can actually"], ["204.99", "think about this then "], ["206.4", "what might be good test cases to use here "], ["209.5", "well i've put a little table together here "], ["211.25", "and these first four are what i would think of as typical cases "], ["216.39", "ok "], ["217.45", "notice in all cases i'm using epsilon to be pretty small because i want to"], ["221.4", "get answers that are close to the right answer "], ["224.26", "that was part of that specification "], ["225.96", "that the difference between the actual value and the value i guessed at"], ["230.33", "should be very close to what i want "], ["232.78", "and then notice what i've got "], ["233.86", "i've got  from the spec  the case of 0 and then the case of positive things "], ["238.89", "and i've picked out other things "], ["240.09", "i've picked out a perfect square "], ["242.49", "i've picked out a square whose root is irrational "], ["247.05", "and i've picked out one where the input is less than 1 because i know"], ["251.17", "for numbers  and especially for square roots  there's often a difference"], ["254.19", "between fractions and numbers bigger than 1 "], ["257.43", "i've selected four good typical examples "], ["260.81", "the second thing i've done is i've looked at some examples that are a"], ["264.9", "little bit different "], ["265.99", "and the first one  right here  is one where i'm still"], ["268.79", "taking a simple example "], ["270.67", "but i'm taking a very small epsilon "], ["275.27", "that is likely to stretch my code "], ["277.13", "what happens if i have something that is really  really small "], ["280.36", "ok "], ["281.33", "and then i'm looking at examples where i'm either taking really large or"], ["285.97", "really small values  both for x and for epsilon "], ["290.39", "and i'm trying those out "], ["291.61", "so that's into that very small  very large  as opposed to the typical case "], ["296.46", "now in these last five extremes here  if i  in fact  find a bug  one of the"], ["301.6", "things that will be interesting is that the bug might be inside the code "], ["306.38", "or it might be in the spec "], ["307.83", "for example  don't try and find a root if epsilon is really tiny "], ["312.08", "but it'll at least expose do i have a problem or not "], ["315.76", "so there's a partition "], ["317.35", "this right here is a nice partition of the input space "], ["322.25", "and it has both typical examples and boundary case examples "], ["327.69", "and that is a nice example  just based on black-box testing of looking at"], ["331.86", "what is the specification  what might i do "]], "waIE0L9vfiI": [["1.1", "eric grimson  in the last section  we introduced a"], ["3.37", "couple concepts in terms of writing programs or scripts "], ["6.36", "we had straight-line programs  where we had just a linear"], ["9.03", "sequence of instructions and we executed them 1"], ["11.16", "at a time in order "], ["12.35", "and we added the idea of branching  or conditionals "], ["15.28", "where we could do a test  and depending on whether that test"], ["18.01", "was true or false  we might skip to 1 piece of code or a"], ["21.26", "different piece of code "], ["22.75", "but in both cases  we're doing each instruction at most once "], ["26.29", "useful  but not great "], ["28.64", "to get to the ability to write programs or scripts with"], ["31.66", "arbitrary complexity  we need 1 more key concept  and that"], ["35.53", "concept is the idea of being able to reuse a piece of code"], ["39.06", "an arbitrary number of times "], ["41.06", "we might have a set of things we want to do once or"], ["43.54", "depending on some value  twice  or depending on some"], ["46.23", "value  27 times or 1 000 times "], ["48.95", "and rather than having to copy the code that many times  we'd"], ["52.06", "like to be able to have the computer automatically reuse"], ["55.62", "the code as many times as desired "], ["57.88", "that notion of iteration is going to be incredibly"], ["60.49", "valuable  and we're going to talk about some constructs to"], ["63.26", "help us make that happen "], ["64.66", "the basic idea  though  is straightforward "], ["66.51", "given that we have some code we're executing  when we get"], ["68.92", "to an iteration loop  which is this chunk right here  we"], ["71.84", "start with a test "], ["73.46", "that will be boolean that will return either true or false "], ["77.02", "if it's true  we're going to go down and execute some set"], ["80.6", "of instructions  the body of the loop  and then go back"], ["83.69", "around and do the test again "], ["86.25", "and we'll keep doing that "], ["87.45", "as long as the test is true  we'll execute that same set of"], ["90.61", "instructions in the body over  and over  and over  until"], ["94.52", "finally  the test is false  in which case we skip around the"], ["98.67", "loop body and pick up the computation elsewhere "], ["102.96", "this notice allows me  based on this boolean test  to be"], ["107.13", "able to do the code some arbitrary number of times  and"], ["109.92", "that's really great "], ["111.08", "let's look at an example "], ["112.54", "here's a simple example that shows that idea  and i want to"], ["115.01", "talk about the syntax of the construct  but also about what"], ["118.372", "the example's going to do "], ["119.72", "this is a simple piece of code that squares a number "], ["122.76", "i want to get x squared  but i'm going to do a by just"], ["124.73", "successively adding x to itself x times  which is of"], ["128.629", "course what x squared actually does "], ["130.3", "i add x copies together "], ["132.44", "notice what we've got "], ["133.56", "we're going to set up some value of x "], ["134.94", "i'm going to do a binding there "], ["136.55", "we're going to bind a variable ans for answer  which is where"], ["139.6", "we're going to add up all the instances of x to get where we"], ["142.67", "want to be "], ["143.3", "and we're going to need to keep track of how many"], ["145.7", "versions of x do we still have to add in "], ["147.81", "so we're going to set up another variable called"], ["149.62", "itersleft  initially bound to x "], ["151.96", "the looping construct  the iteration construct  we have"], ["154.61", "is called a while loop "], ["156.35", "and there's the key word while  and it has the"], ["159.03", "following property "], ["160.3", "it has a boolean test  in this case  we're checking to"], ["163.1", "see whether itersleft is equal to 0 or not "], ["165.98", "followed by a colon  and then it has a set of indented"], ["169.8", "instructions  which of course  are the body of the loop "], ["172.63", "the way the while loop works is it"], ["174.59", "first tests that boolean "], ["176.98", "if that boolean is true  itersleft is not equal to 0 in"], ["180.47", "this case  it will then execute each of the"], ["182.59", "instructions in the body in sequence "], ["184.48", "and when it gets to the end of that sequence of instructions "], ["187.17", "it's going to go back up and retest the boolean again "], ["190.48", "so it will cycle through this code multiple times until that"], ["194.33", "boolean is finally false "], ["196.41", "when it is false  it will skip down to the end of the loop "], ["199.04", "which is shown by where the indentation stops  and pick up"], ["201.85", "the new set of instructions and continue "], ["204.14", "so there's the structure  let's see if this does the"], ["206.86", "right thing "], ["207.88", "well  here's my code  and let's just walk through this "], ["210.25", "we won't run it on idle  we'll just walk through it "], ["212.21", "initially  x is bound to 3  ans is bound to 0  and"], ["216.04", "itersleft is bound to 3 "], ["217.6", "the while loop says  test to see if this is equal to 0 "], ["221.74", "since it is not equal to 0  the test is true  and"], ["225.37", "therefore  i take the current value of ans  the current"], ["228.02", "value of x  add them together  and rebind that to ans "], ["232.48", "i then take itersleft  subtract one from it  and"], ["235.69", "rebind that to itersleft "], ["238.16", "so i've decremented itersleft  and i've incremented ans "], ["241.52", "i go back up  and again  i check "], ["244.28", "is that not equal to 0 "], ["245.47", "it is not equal to 0 "], ["246.54", "therefore  i take ans and i take x  i add them together "], ["249.5", "and i rebind those to be the new value of ans "], ["252.41", "i change itersleft by 1 "], ["253.94", "that's my new value there "], ["255.55", "and again  i go back through the loop "], ["257.42", "that is not equal to 0 "], ["258.779", "well  the test is still true  so again  i take ans  i take"], ["261.899", "x  add them together  create that to be my new binding for"], ["265.88", "ans  which is 9 "], ["267.61", "i take itersleft  subtract 1 from it  there's my new value"], ["270.41", "of itersleft "], ["271.53", "and again  i go back to the top of the loop "], ["273.35", "at this point  0 being not equal to 0 is false "], ["277.3", "terrible way of saying it  but that test is no longer true "], ["279.37", "it's false "], ["280.1", "in which case  i will skip to the end of this loop  and"], ["284", "print out that x * x  or if you like  3 *"], ["287.3", "3  is equal to 9 "], ["288.86", "cool "], ["289.92", "a little slow  but it does what i want "], ["292.05", "notice i have reused this code an arbitrary number times "], ["296.2", "and in fact  if i were to change x to be something else "], ["299.26", "i will reuse that piece of code a"], ["301.22", "different number of times "], ["302.61", "there's my iteration that i really want "], ["304.7", "you can also see some properties of"], ["306.19", "an iterative loop "], ["307.5", "first of all  we need to set an iteration variable outside"], ["310.34", "of the loop "], ["310.74", "in this case  it's x and itersleft "], ["314.04", "actually  the one i really care about here is itersleft "], ["316.65", "i also need to test that variable to"], ["319.28", "determine when i'm done "], ["321.38", "there's the use of itersleft inside of the test "], ["324.03", "now  it could be a simple test  it could be a more"], ["326.09", "compound test  but that's basically what i need to test "], ["328.72", "and finally  i need to be changing that variable inside"], ["331.75", "of the loop  right there "], ["333.76", "if i didn't  then that test value would never change "], ["336.6", "which means i would never stop the loop "], ["338.69", "but there's a property i need "], ["340.1", "when i set up an iterative loop  i need to say what's the"], ["342.83", "variable i'm setting outside  how am i testing it  and am i"], ["346.96", "making sure to change it somehow inside of the loop in"], ["350.04", "order to ensure that i get the pieces that i want "], ["352.93", "so what do we have now "], ["354.41", "well  that's a really valuable construct "], ["356.92", "we already saw that branching structures  things like"], ["359.17", "conditionals  will let us jump to different pieces of code"], ["361.82", "based on a test "], ["363.77", "once we add in the idea of looping over the code  things"], ["366.37", "like a while loop  that allows us to repeat pieces of code"], ["370.18", "until the condition is satisfied "], ["371.54", "so it's a generalization of a conditional "], ["374.58", "on simple branching structures  we've already said"], ["377.12", "that programs like that are constant time  that is  we"], ["379.7", "execute each instruction at most  once "], ["382.38", "with looping structures  notice"], ["384.22", "that things are different "], ["385.54", "now  the program is going to take an amount of time that"], ["387.77", "depends on values of variables as well as the amount of code"], ["391.56", "or the number of instructions inside the loop  because it's"], ["394.51", "going to depend how many times we walk through the loop  and"], ["396.37", "that depends on the variable "], ["398.54", "nonetheless  these loops are going to be really valuable "], ["400.91", "and we're going to turn to that next "]], "Vt6MxpUBz_k": [["1.65", "eric grimson  we've now added tuples  generalization of strengths  an"], ["4.76", "ordered sequence of elements  where the elements can be any structure "], ["8.43", "and we've already seen that a lot of the operations we wanted on strings "], ["11.63", "we're going to have on tuples "], ["13.51", "we're going to add another kind of structure called a list "], ["17.58", "and it looks a lot like tuples "], ["19.99", "and again  lists are ordered sequences of values "], ["22.79", "each one's identified by an index  so it's going to support all the same"], ["25.84", "kinds of operations i saw before "], ["28.15", "the difference here is we're going to use these square brackets rather than"], ["33.17", "the parentheses to distinguish a list or to create a list  as"], ["37.78", "opposed to a tuple "], ["39.04", "so they are a little different in terms of how they're going to look "], ["41.66", "and as a consequence  and one nice thing  is that singletons are now"], ["44.41", "pretty straightforward "], ["45.27", "it's just a square bracket  the entry  and another square bracket "], ["48.7", "i don't have to put that annoying comma in that i had to do with tuples"], ["51.81", "in order to distinguish between an arithmetic expression and a tuple with"], ["55.66", "just one element "], ["57.19", "looks much the same "], ["57.97", "so what's the big deal "], ["59.41", "well  there's one very big difference  and it's a really important one "], ["63.27", "which is that lists are mutable "], ["65.56", "and what does that mean "], ["66.46", "it means we can change them "], ["68.37", "what does that mean "], ["69.48", "well  things like ints  floats  strings  and tuples are immutable "], ["74.215", "and that means that we can't go in and change an element inside of them "], ["78.18", "now for ints and floats  that's obvious "], ["80.5", "and tuples  we just introduced  so we sort of have to accept that on faith "], ["83.45", "but if you think about strings  you can get elements of strings out  you"], ["86.83", "can slice into strings "], ["87.96", "but you can't go in and directly change one character in a string "], ["92.52", "they're not mutable "], ["93.71", "they're immutable "], ["94.4", "they don't change "], ["95.385", "on the other hand  lists can be modified after they're created "], ["99.12", "and why would we want to do that "], ["101.18", "well  in part because there are going to be some problems where that's"], ["104.41", "really valuable "], ["105.66", "so what does that mean "], ["106.98", "some data objects  we really want to treat as if fixed "], ["109.64", "it says we create new versions of them  we combine variables to them "], ["113.23", "but we don't want to change them "], ["115.15", "and this is usually valuable when those data objects are going to be"], ["118.36", "frequently referenced  but where the pieces inside of them don't change "], ["122.54", "why would we want to support having ability to change them  because that"], ["125.16", "could just lead to bugs "], ["126.8", "on the other hand  there's going to be some instances where the data objects"], ["129.94", "may want to support modifications to elements inside of them "], ["134.21", "why might that happen "], ["135.66", "imagine you've got a really large database of personnel information and"], ["138.63", "you want to do things like change salaries "], ["140.81", "you don't want to have to make an entirely new copy of the database just"], ["144.24", "to add in a new salary "], ["145.7", "you'd like to be able to go inside and change a piece of that "], ["148.9", "so lists are going to support that kind of operation by enabling us to go"], ["153.22", "in and mutate  or alter  elements of the pieces "], ["157.07", "one issue to keep in mind is that  while mutable structures give us more"], ["160.4", "flexibility  they also are more prone to programming errors "], ["164.39", "if i've got two different pieces of code both pointing to the same list "], ["168.91", "and i have one piece of code change or mutate a portion of the list  i want"], ["173.29", "to make sure that that other piece of code is aware of that "], ["175.43", "if not  i can get myself into some really interesting bugs "], ["178.93", "so there's a cost  but there's a bonus "], ["182.65", "let's look at an example of what this means "], ["185.27", "so let's create a couple of lists "], ["186.92", "and in fact  over here in my idle shell  i'm going to do that "], ["191.03", "let me just create a couple of lists "], ["193.94", "and i'm going to call techs as a name for a couple of"], ["197.63", "great technical schools "], ["200.27", "and notice the angle braces to get them for me "], ["202.94", "and i'm going to create ivys "], ["204.53", "i'm not going to do all of them  but i will again create a list"], ["207.56", "of some great schools "], ["210.26", "we'll do harvard "], ["211.16", "we'll do yale "], ["212.05", "and we'll do brown "], ["214.21", "and if i print them out  i can say  what is the value of techs "], ["217.2", "and it just gives me that list "], ["219.47", "on my slide  i've given you a visualization of that "], ["222.08", "so think of this as techs and ivys sitting up in that global environment "], ["226.37", "after all  i just typed them into the shell for python "], ["229.66", "and what do they do "], ["230.33", "well  they point to a structure in memory somewhere that has that"], ["234.61", "sequence of elements inside of it "], ["238.1", "as i've said  i can treat this as if they were just an order of sequences "], ["241.52", "so i could say something like  what is the first element of the ivys "], ["245.41", "remember  we start indexing at 0  so that gives me back"], ["247.95", "yale  which is nice "], ["249.74", "and i could slice if i wanted to "], ["251.38", "i could say give me back the ivys  everything up to the second one "], ["257.279", "and that gives me the zeroth and first elements "], ["259.2", "i can do things i'd expect to do on that "], ["261.66", "let's see what happens when we start putting things together "], ["264.5", "so i've got two lists  a list of tech schools "], ["266.88", "i've got a list of ivys "], ["268.47", "let's now create what looks like two different lists of universities "], ["271.99", "so the first one  i'm going to call univs  for universities "], ["274.67", "and it's going to be a list of the techs and the ivys "], ["278", "and i'm going to create what looks like the same thing "], ["280.27", "i'm going to call it univs1  and i'm simply going to"], ["282.98", "re-create that sequence "], ["285.99", "cal tech was the first one "], ["288.31", "and since i'm creating a list of these lists  i'm going to put a comma in"], ["291.785", "there  and then i'm going to do harvard  yale  and brown "], ["297.75", "are these the same thing "], ["299.21", "well  let's print them out "], ["300.46", "if i look at univs  yeah  nice "], ["303.71", "it's a list of two elements  the first of which is a list of two elements "], ["307.19", "second of which is a list of three elements "], ["309.31", "and if i look at univs1  it looks exactly the same "], ["314.31", "they certainly print the same "], ["315.63", "so it is easy to think that these might  in fact  be the same thing "], ["320.74", "but they're not "], ["322.17", "and let me show how i can test that "], ["324.84", "let's evaluate the following little command up here "], ["330.48", "an append is a method associated with lists "], ["333", "we'll come back to methods later on "], ["334.33", "that dot notation basically says  if i type in techs  it's a list "], ["338.74", "the dot says get the method append associated with it "], ["341.45", "don't worry what a method is  but basically think of it as a function"], ["345.7", "that is going to take an argument "], ["347.73", "in this case  a single element  rpi "], ["351.67", "and it is going to attach that element to the end of the list text "], ["357.34", "so  what does it do "], ["360.03", "it's an important thing here "], ["360.88", "it doesn't create a new list "], ["362.28", "it mutates the existing one "], ["365.42", "it takes techs as a list and changes it "], ["368.07", "it mutates it to add a new element to the end  extending the list by one "], ["372.25", "now  as a consequence  if we print out univs  notice we now have in that"], ["379.19", "first element mit  cal tech  and rpi "], ["381.73", "we have changed what's inside of there "], ["383.56", "we have mutated techs  not univs "], ["386.36", "in fact  let's just check it "], ["387.51", "let's go look at techs  and there's techs "], ["390.68", "but again  if i go back to univs  there it is "], ["392.73", "and now what happened to univs1 "], ["395.56", "aha!"], ["396.8", "it didn't change "], ["398.28", "and that's an important point "], ["399.68", "look at the form of univs1 "], ["401.4", "it has just the first two pieces to it "], ["404.36", "and  in fact  if i go to the next slide  we've captured that "], ["408.05", "if i print out univs  i get out mit  cal tech  rpi  followed by harvard "], ["413.09", "yale  brown "], ["414.22", "but for univs1  i just get mit  cal tech  and then harvard  yale  brown "], ["419.51", "why "], ["420.43", "well  this is where the mutability comes in "], ["422.75", "so let's think carefully about what we had "], ["426.1", "before i did that append  i'd had a binding for techs  and i had"], ["429.63", "a binding for ivys "], ["430.46", "we created those "], ["431.1", "they said we're lists "], ["432.23", "and then what did i do "], ["433.05", "i said  let univs equal "], ["434.95", "and in fact  let me just write it out here "], ["436.75", "i bound univs to techs and ivys "], ["440.13", "and what does that say "], ["441.04", "it says make a list "], ["444.23", "so there's univs "], ["444.86", "it's going to make a list "], ["445.9", "and it says the value of the first element is going to be"], ["448.25", "the value of techs "], ["449.15", "so aha "], ["450.28", "it's just a pointer to that list "], ["453.61", "and the value of the second argument  or the second element  is just the"], ["457.91", "value of ivys "], ["458.82", "so aha  it's just pointing to there "], ["462.25", "so univs is a list whose elements are just pointers to other lists "], ["467.37", "on the other hand  what did i do when i created univs1 "], ["470.66", "if you look back  you'll see that  in fact  i created it by"], ["473.14", "actually typing out lists "], ["475.99", "i said univs1 "], ["477.03", "just to say a little bit of it "], ["478.29", "i said univs1 was going to be  and then i said quote mit "], ["482.41", "quote cal tech  comma "], ["483.91", "and then i did a bunch of other things "], ["485.31", "i'm not going to do all of it "], ["486.9", "but this is telling python  create a list with those strings inside of it "], ["492.47", "so in fact  that's exactly what it did "], ["495.912", "univs1 is going to create a list  but it creates it with a new version "], ["502.56", "right there "], ["503.84", "notice techs is not pointing to this "], ["506.1", "there's a new version right there "], ["507.68", "ivys is not pointing to this because i created them and inserted them inside"], ["511.26", "of this larger list "], ["512.45", "that's important  because now when i did that append on"], ["515.57", "techs  what did it do "], ["516.62", "it went over here and changed that "], ["519.12", "it added that into the end of it "], ["521.33", "that means that univs changes because it sees that "], ["525.81", "but what about univs1 "], ["527.65", "this is a completely different list "], ["529.53", "nothing changed there "], ["531.21", "let's make some observations out of this "], ["534.83", "the elements of univs are not copies of the list to which ivys and techs"], ["538.83", "are bound  but are the lists themselves "], ["541.46", "i got the value of techs  which pointed to the list "], ["545.16", "and this effect is something we call aliasing "], ["548.47", "basically what does aliasing says "], ["549.92", "it says we have two distinct paths to a data object "], ["553.94", "one is through the variable techs  in this case "], ["555.81", "there's a second one through the first element of the list object to which"], ["559", "univs is bound "], ["560.64", "and one of the effects of that is that i can mutate an object through either"], ["564.2", "path  but the effect will be visible to both "], ["567.17", "and i just saw that back here when i mutated techs  but univs changed "], ["572.84", "that sharing of data is really important "], ["575.36", "and that mutation  that ability to change things  is really important "], ["578.84", "this is very convenient  but it also can be really dangerous "], ["582.52", "it can be treacherous "], ["583.81", "because if i had something that was changing techs and i didn't realize"], ["587.34", "that univs inherited the techs structure  i've now changed something"], ["591.55", "inside of univs "], ["592.77", "and if you think back to the code i just typed in there  you saw nothing"], ["595.6", "that said make a change to univs "], ["597.81", "but changing a part of it had that effect "], ["600.66", "so aliasing is a valuable tool  but it is going to occasionally lead to some"], ["606.39", "problems  and we have to be careful about it "], ["609.05", "now what else can we do "], ["610.24", "well  we can certainly change elements directly "], ["612.8", "so if i go back  for example  and i look at techs "], ["616.39", "here's my list of tech schools  mit  cal tech  rpi "], ["618.98", "i might decide i want to change the list "], ["621.5", "so i can literally say  change the second element of techs "], ["626.91", "and i do it just with an assignment statement "], ["629.43", "i'm going to pick up wpi "], ["631.36", "and now if i look at techs  that element is changed "], ["636.85", "i've mutated it "], ["638.12", "by the way  if i go back and look at univs  it has also changed "], ["641.68", "i've now got wpi in the first portion of that element "], ["645.82", "just to remind you  it says i can mutate elements of this "], ["649.42", "i cannot do the same things with tuples "], ["651.07", "so if i do an example where i create a tuple "], ["654.39", "we can look at temp "], ["656.11", "but if i now say  and i could certainly get out  for example  the"], ["659.42", "first element of temp "], ["660.49", "but if i attempt to change that  as i just did above here by putting in"], ["665.72", "something new  it's going to complain "], ["667.82", "and it says you can't do it because these things are not things that can"], ["671.406", "be mutated "], ["672.73", "so now we've got lists "], ["674.74", "let's see what we can do with them "], ["676.76", "as i just said  stressing it  i can't do that with tuples "]], "tJMrTNDdsR8": [["2.68", "sam madden  hi  i'm sam madden "], ["3.82", "i'm a professor at mit in computer science "], ["5.99", "i'm going to talk to you today about some work that i do on a research area"], ["10.36", "called column-oriented databases "], ["12.38", "i'm a specialist in building systems for storing very"], ["14.76", "large amounts of data "], ["16.56", "so  before i tell you about column-oriented databases  i need to"], ["19.41", "explain a little bit about what a database is "], ["22.19", "so  a database is simply a collection of records "], ["25.34", "much like in python where you have an array  all a database does is"], ["29.29", "represent something that's very much like an array "], ["31.38", "unlike an array in python  however  a database is persistent "], ["34.335", "it lives on disk  like a file "], ["36.6", "and in addition to that  databases is often represent very  very large"], ["40.11", "quantities of information "], ["41.56", "millions  billions  even trillions of these records "], ["44.23", "so we're going to use a very boring example throughout this presentation"], ["47.91", "to give you sort of an introduction to what a database system is "], ["50.73", "this is an example of a record in a database system that stores some"], ["54.23", "information about stock quotes "], ["55.54", "so here we see a stock quote has a symbol  a price  a quantity  an"], ["59.09", "exchange  and a date "], ["61.95", "databases take these records and they organize them typically into tables "], ["67.19", "a table is simply a collection of these records stored together "], ["71.24", "databases then  for these tables  provide a language  a programming"], ["74.43", "language like python  for accessing these records "], ["77.52", "unlike python  however  these languages that databases use are often"], ["80.78", "called declarative "], ["81.91", "they have a very sort of english-looking kind of flavor "], ["84.65", "for example  this query that you see here selects the price of a given"], ["91.45", "stock that has a set of properties from the symbol gm and"], ["95.42", "with a certain date "], ["96.98", "this particular query that you see here is written in a language called"], ["99.66", "sql  or the structured query language  which is the most commonly used"], ["104.12", "language for querying databases "], ["106.27", "so  databases are important because nearly every business  website "], ["110.95", "government  all these organizations store their persistent mission"], ["114.54", "critical data inside of databases "], ["116.5", "databases provide a very powerful set of abstractions for keeping data safe "], ["122.35", "and storing it persistently on disk  and ensuring that certain consistency"], ["126.27", "properties are preserved over it "], ["128.15", "they also provide a way to evaluate these queries that we see here very"], ["131.86", "efficiently "], ["132.5", "what i'm going to talk about today and what column-oriented databases are"], ["134.99", "about is providing a very efficient way to evaluate certain kinds of"], ["138.66", "queries over data "], ["140.25", "so  a database system is something that answers processes  these queries"], ["145.38", "that are running on top of these databases "], ["147.72", "so  the database system uses one of two basic ways to evaluate queries "], ["153.34", "if you think about what you have to do to evaluate a query  you're going to"], ["155.96", "have to find the records that satisfy these conditions "], ["158.42", "for example  symbol equals gm  or date is equal to 1/17/2007 "], ["163.56", "so  in order to find the record to satisfy this  there's two"], ["167.19", "things we could do "], ["167.91", "one thing we could do is to use something we call an index "], ["170.62", "an index is like a lot like a dictionary data structure in python"], ["173.96", "except for that it is persistent and lives on disk "], ["177.28", "and what the index is going to allow us to do is to efficiently look up"], ["180.69", "records that satisfy a certain criteria "], ["183.06", "for example  we might build an index on the stock symbol  and then we could"], ["188.64", "use that index in order to efficiently find all the records that correspond"], ["192.37", "to a particular symbol "], ["194.03", "so in this case  we could look up on the index for the symbol gm "], ["198.46", "and we would see that  if this is our database  the first and fourth record"], ["201.77", "in the database contain that symbol "], ["204.77", "so  the other way that we might evaluate a query  for example to find"], ["208.21", "all the gm stock quotes  would be to just iterate over all the"], ["211.26", "records one by one "], ["214.6", "and we call such an approach a scan "], ["216.41", "so you might think that a scan is an incredibly inefficient way to access"], ["221.53", "data  that you should always prefer to use an index "], ["224.12", "it turns out that that's not the case "], ["225.55", "sometimes indices actually are a bad idea "], ["228.04", "first of all  it's expensive to create them and maintain them  and second of"], ["232.65", "all  these indices can actually be less efficient sometimes than scanning"], ["237.5", "all the data "], ["238.45", "and the reason for this is because the records that an index returns have to"], ["242.3", "then go be accessed in the underlying table "], ["244.7", "so in this case  we were told we need to go look at records one and four"], ["247.26", "because they correspond to gm  but then we would have to go look through"], ["250.58", "the underlying table and look up those records  and that actually can be"], ["254.03", "slow  partly because these tables are stored on disk "], ["256.8", "and we'll come back to a little bit about why storing things on disk sort"], ["260.11", "of changes the considerations about performance in just a minute "], ["265.48", "all right  so now it turns out that actually we want to use these scans"], ["270.7", "for certain classes of queries "], ["272.21", "in particular  for queries that access lots and lots of records we're going"], ["274.93", "to want to use a scan "], ["276.89", "sometimes in the database world  these are called analytical queries "], ["280.98", "they often look like this "], ["282.22", "so this is very similar to the query we saw before  except for rather than"], ["285.78", "the equality predicate  we now have a greater- than predicate "], ["288.33", "and now we have this average price "], ["290.37", "so this computes the average price of all the gm stocks"], ["292.65", "over some date range "], ["294.13", "if gm is a popular stock  which it probably is  there's going to be lots"], ["297.1", "and lots of such records  and we're going to have to evaluate "], ["299.98", "and it turns out that a scan is going to be probably the best way to"], ["302.71", "evaluate this query "], ["304.17", "so  it turns out that this market  these analytical queries  represent a"], ["308.1", "multi-billion dollar business in the united states  because companies use"], ["311.51", "these kind of queries in order to do analysis about what's going on inside"], ["314.89", "of their business  to understand sales trends  to understand patterns of"], ["318.44", "buying and selling "], ["320.19", "all right "], ["321.59", "what column-oriented databases are about is making these kinds of scan"], ["324.67", "operations go faster "], ["326.67", "so in order understand what makes a query slow or fast  let's try and"], ["333.09", "think a little bit about how long we would expect a scan to take when we're"], ["337.03", "running one of these queries "], ["338.93", "intuitively of course  the performance of one of these things is going to be"], ["341.69", "proportional to the amount of data that we access in"], ["344.77", "processing the query "], ["345.85", "ok "], ["346.06", "so if we go back to our simple query and our example database  the most"], ["351.66", "natural way to think about this data being stored is sort of row- by- row "], ["355.51", "in the memory or on the disk of the computer system "], ["358.34", "so in order to evaluate this query  what's going to happen is we're just"], ["360.8", "going to  in a scan  just read each one of these records one by one "], ["364.51", "ok "], ["365.77", "there's something interesting to notice about this particular query"], ["368.43", "though  which is that it actually only accessed three of the columns "], ["372.41", "three of these five columns that are in the table "], ["374.14", "the price column  the symbol column  and the date column "], ["378.31", "so  we only needed 3/5 of the data in order to evaluate this query "], ["383.7", "so it turned out  however  that when the data's laid out in this way  row"], ["387.02", "by row  there's a property of the disk that makes it so that we're going to"], ["391.01", "have to read all of the data  all five columns  off disk even though we only"], ["394.58", "need to access three of them "], ["396.12", "so i'll just give you a quick little tutorial about how a disk works "], ["399.435", "a disk a piece of physical hardware that has these"], ["403.9", "spinning platters in it "], ["405.93", "and these platters are spinning pretty fast  like several thousand rpm "], ["409.24", "revolutions per minute "], ["411.78", "and each one of these platters has data laid out on it in this set of"], ["415.33", "concentric rings  they're sometimes called cylinders "], ["418.66", "and the data that's currently being read off of a given cylinder is the"], ["423.1", "data that happens to be underneath this triangular- looking structure"], ["426.48", "that you see here in the diagram "], ["427.49", "the triangular structure is called a head "], ["429.73", "so what happens is the disk is spinning around  and when data passes"], ["434.41", "underneath the head  it's read off of the disk "], ["438.74", "so if you think of a database table that's laid out in one of these"], ["441.91", "cylinders  the record that's about to be read  you can see here  is denoted"], ["445.48", "with these little x's "], ["446.86", "when that record passes under the head  it will be read off of the disk "], ["450.16", "so you can imagine that if the five columns of a given record are laid out"], ["454.64", "sequentially in that cylinder  if we just want to read three of them "], ["458.52", "they're randomly allocated throughout that record "], ["462.4", "the whole record is going to pass underneath the head  even though we"], ["464.94", "only needed to read 3/5 of the data "], ["466.97", "and it turns out that this time to access this record and for the data to"], ["470.86", "pass underneath the head is what really dominates how long it takes to"], ["473.61", "access the data from disk "], ["475.44", "so in this case  it turns out that when the data's laid out sequentially"], ["478.85", "like this  the total time to evaluate this query is essentially going to be"], ["484.57", "the total amount of time that it just takes to read all of the records  the"], ["487.96", "entire table  from disk "], ["489.36", "so you can see here  if our table consists of 1 000 000 000 records each"], ["493.51", "of which is 100 bytes long  then we're going to have 100 gigabytes of data "], ["497.69", "if the disk can read 100 megabytes a second  which is about what a disk can"], ["500.549", "read  then it's going to take 1 000 seconds to evaluate this query "], ["504.85", "ok "], ["505.39", "what the column-oriented database does is a way to organize the data that's"], ["510.68", "stored on disks differently so that we can evaluate queries"], ["513.13", "much  much more quickly "], ["515.9", "the column representation  instead of laying out data row- by- row  lays out"], ["519.51", "data column- by- column "], ["521.02", "so imagine each column of this table is now stored in a"], ["523.63", "separate file on disk "], ["526.11", "so now when we want to read these three columns  we only have to go"], ["529.21", "access those three columns from disk and read them in "], ["532.67", "and so rather than having to read all of the data  we only have to read 3/5"], ["535.88", "of the data "], ["536.66", "so in this particular example  we could evaluate this"], ["538.73", "query in 600 seconds "], ["540.8", "now  this may seem like it's not that significant of an improvement  but it"], ["544.89", "turns out that in reality  these tables are often"], ["548.12", "hundreds of columns wide "], ["549.97", "people  when they build their databases  cram all sorts of junk into"], ["552.76", "their table "], ["553.17", "so the tables get really big "], ["556.23", "but on the other hand  the queries themselves tend not to get really big "], ["560.05", "the queries usually only access three or five attributes of these hundred"], ["564.2", "attribute-wide tables "], ["566.45", "and that means that this column-oriented representation can be"], ["569.16", "much  much faster than the row-oriented representation "], ["573.48", "so in addition  there's some other cool things about this column-oriented"], ["576.65", "representation "], ["577.83", "so in particular  columns compress really  really well  and that allows"], ["581.72", "us to further reduce the amount of data that we have to access when we're"], ["584.62", "processing a query "], ["586.04", "so just to give you a very simple example  suppose we have a table"], ["589.28", "that's sorted by stock symbol "], ["591.21", "now let's think about compressing just that column that represents the stock"], ["595.47", "symbol data "], ["597.19", "there's a very straightforward way to compress this data"], ["599.57", "called run length encoding "], ["600.82", "so imagine i have a table that contains the symbols aapl "], ["603.71", "aapl  aapl  ibm  ibm "], ["605.59", "these five attributes  stored in sorted order  can trivially be"], ["608.58", "represented as aapl times three  an aapl and then a count  which is in"], ["613.9", "this case three  followed by ibm an then a count  which is two "], ["617.18", "so here it doesn't look like we've reduced the space very much  but if"], ["619.92", "you think of a table of stock quotes  there's probably only a few hundred or"], ["622.95", "thousand stock quotes in our database system "], ["625.94", "and so even if our table contains billions of records  we can represent"], ["630.16", "this column simply as a few thousand stock quotes and their counts  which"], ["634.2", "is a dramatic reduction in space "], ["636.18", "notice  however  that we couldn't play this same trick for  say example "], ["638.8", "stock price  because stock price is a floating point number and there's"], ["642.32", "likely to be millions of different stock prices in a"], ["644.44", "given database system "], ["645.73", "so one of the things we could do in this column-oriented approach is to"], ["649.04", "compress each column using the best compression scheme for that column "], ["653.01", "so at mit  we built a new database system called c-store around this"], ["656.9", "column-oriented idea "], ["658.31", "turns out that  sort of surprisingly  almost every other database system in"], ["661.7", "the commercial world built before us had used this row-oriented"], ["665.11", "representation for data "], ["666.83", "so c-store was this fundamentally new way of building a database system "], ["670.7", "we also added a bunch of other cool features to it  like the ability to"], ["673.4", "parallelize processing and the placement of data across many nodes "], ["677.37", "the ability to support efficient loading of new data  and some special"], ["680.1", "optimizations to allow queries that are only reading data to run"], ["683.36", "concurrently and very efficiently with queries that are updating data "], ["687.12", "if you like  there's a paper that you can go read for those of you who want"], ["689.76", "more information "], ["691.67", "to give you a sense of real world how much this matters  i'm going to show"], ["694.942", "you a performance benchmark from a commercial company that took the ideas"], ["698.69", "from c-store and productized them "], ["700.46", "this company's call vertica "], ["702.24", "this example is from a 30-day trace of call record data "], ["706.33", "so this is information from a cell phone company "], ["709.6", "it represents about a terabyte of data on disk "], ["712", "prior to using vertica  this company had been using a"], ["714.22", "conventional database system "], ["716.15", "so  relative to what the previous database system was able to do  in"], ["721.8", "vertica  using these column-oriented ideas on a workload running on top of"], ["726.91", "this call data record data set  they were able to get about 88%"], ["731.33", "compression "], ["732.1", "so 88% less space to store the data  and about a 60 times speed up in query"], ["737.83", "processing "], ["738.84", "so  it's dramatically faster "], ["741.12", "orders of magnitude faster than what you've got using a traditional"], ["744.85", "database system "], ["746.03", "so just to wrap up  for analytical queries of the sort that i've showed"], ["749.59", "where you're accessing most of the records in a database  this"], ["752.34", "column-oriented representation is orders of magnitude faster "], ["755.48", "and the key idea is that these column-oriented databases allow you to"], ["759.27", "access just the data that you need to answer the query  and they provide"], ["763.06", "support for this very  very aggressive compression "], ["766.53", "and i hope that i've also shown you a little bit about why database systems"], ["769.87", "are interesting and different than conventional programming  because"], ["772.37", "there's this whole set of new challenges that are presented when"], ["775.56", "you're developing algorithms that operate on this data that resides"], ["779.15", "persistently and on disk "], ["780.97", "thanks very much "]], "Kndq_cHHWOI": [["1.33", "eric grimson  we've now introduced lists  ordered"], ["3.29", "sequences of elements "], ["4.75", "elements can be almost anything  and they're mutable "], ["7.62", "and we've seen examples of how we'd like to use them "], ["9.58", "we can slice  we can clone  we can index  or we can have"], ["13.13", "arbitrary structures inside of them "], ["15.22", "we're going to take a slight detour just for a second to"], ["18.27", "talk about functions "], ["19.27", "but we're going to bring it back to lists then in an"], ["20.91", "important way "], ["22.46", "first  i want to talk about the idea of"], ["24.34", "a first class object "], ["25.95", "and we say a data structure  a data type  is a first class"], ["28.98", "object if it has the following characteristics "], ["31.352", "it has a type; it can be an element in a data structure "], ["35.52", "like a list; it can appear in an expression  like an"], ["38.69", "assignment statement  could be on the right-hand side of the"], ["40.8", "assignment statement; and it can be an"], ["42.48", "argument to a function "], ["44.38", "now  it's pretty clear that ints  floats  strings all have"], ["48.065", "those properties "], ["49.52", "it's easy to believe that lists and tuples would also"], ["52.18", "have those properties "], ["53.415", "but so do functions "], ["56.16", "now  that's interesting  right "], ["58.15", "does a function have a type "], ["59.22", "well  that's easy to believe "], ["61.15", "could a function be in a data structure  like a list "], ["64.599", "huh "], ["65.97", "well  if you think about how we create lists  we're simply"], ["68.11", "getting values of expressions and creating a structure where"], ["71.26", "elements of the memory point to those pieces "], ["73.57", "so if i gave as an element of a list the name of a function "], ["77.21", "thinking back to our environment model  it's easy"], ["79", "to see how that element of the list  that spot in the list "], ["81.76", "could point of to that particular procedure object "], ["85.37", "ok "], ["86.86", "can they appear in expressions  like the"], ["88.12", "right-hand side of an assignment "], ["89.49", "sure "], ["90.23", "and we can say  x is going to equal the factorial of 5 "], ["93.38", "that makes sense "], ["94.78", "and then can functions themselves be arguments to"], ["98.22", "other functions "], ["99.89", "huh "], ["100.88", "that's interesting "], ["101.77", "and we're going to see that that can actually be the case "], ["103.98", "and this idea of having a first class object for a"], ["106.59", "function or having them be first class objects is"], ["109.32", "particularly useful when we're going to use this in"], ["111.65", "conjunction with lists "], ["113.21", "and we often refer to this style of thinking or"], ["115.45", "programming as higher order programming  where we are"], ["119.52", "treating functions as if they're elements of data"], ["121.83", "structures and applying functions to them "], ["125.2", "let's see if we can make a little bit more sense out of"], ["127.03", "this by looking at an example "], ["129.24", "i'm going to write a little procedure here called"], ["131.07", "applytoeach "], ["132.5", "takes two arguments "], ["133.65", "list  l  and the variable on our parameter whose name i'm"], ["139.11", "going to call f "], ["139.81", "and i'm going to assume that l is a list"], ["142.14", "and that f is a function "], ["144.07", "and what i want applytoeach to do is to walk through the"], ["149.08", "list  mutating each element in turn by replacing it by what"], ["153.08", "happens when we call the function f on that element "], ["158.15", "so the code doesn't look too bad "], ["159.73", "i've got a little loop  where i is walking from 0 up to the"], ["163.78", "length of the list  or 1 less than the length of the list "], ["165.99", "it's going to get all of the elements of the list "], ["168.06", "and what am i doing "], ["168.88", "i'm going to get the i-th element of the list "], ["171.095", "i'm going to call f on it "], ["173.67", "and then i'm going to change that i-th element of the list"], ["176.75", "to be that value "], ["178.74", "let's think for second "], ["180.45", "if we think back to our environment model  if i"], ["182.41", "applied this where i passed in for f some function  square "], ["188.69", "we said that we would bind a local frame  where the"], ["190.89", "variable f would point to the value of that parameter "], ["194.6", "which  in this case  would be square "], ["196.51", "and then  when we executed the body of applytoeach  we would"], ["200", "simply be using the value of f  looking it up "], ["202.78", "so in essence  we would simply be substituting in for f "], ["206.49", "i'm not going to do the example of"], ["207.59", "the environment model "], ["208.34", "but what we just described makes sense "], ["211.27", "so let's see if that actually works then "], ["213.12", "let's take an example of this "], ["215.26", "so i'm going to walk through this in sequence "], ["219.15", "i'm going to do applytoeach "], ["220.45", "and i'm going to start with a list l"], ["222.08", "that's a set of numbers "], ["223.2", "1  -2  and 3 4 "], ["225.88", "and i'm first going to call applytoeach on that list l"], ["229.66", "with the built-in procedure abs called on it "], ["235.68", "what happens if i do that "], ["236.73", "well  i know "], ["238.11", "i'll think again about my environment model "], ["239.51", "i'm going to create a frame "], ["241.13", "applytoeach is some procedure "], ["242.16", "i'm applying it "], ["242.88", "so i'm going to create a frame in which l will be bound to"], ["246.38", "this structure and f will be bound to what that points to "], ["252.27", "which is a procedure object "], ["253.9", "and then what am i going to do "], ["255.35", "i'm just going to walk down the list l  at each point"], ["258.269", "applying f  which is bound to abs  to each element of l and"], ["262.74", "changing the value "], ["264.28", "and if i do that  what i get is that when i print out l  it"], ["268.196", "now has that form "], ["269.4", "i've mutated l "], ["270.92", "and yeah  the 3 4  because of the way we represent floating"], ["273.5", "point numbers  doesn't quite come out the way"], ["274.97", "you'd like it to "], ["275.53", "but we've changed l  and what's important to see is"], ["277.96", "i've run through a loop  where i'm just applying a particular"], ["280.42", "value of f "], ["281.32", "in this case  bound to abs "], ["282.92", "to each element of the list "], ["284.83", "now  having changed l  let's do it again "], ["286.48", "let's applytoeach again the list l  now at this form of 1 "], ["290.54", "2  and 3 4 "], ["292.01", "and in this case  i'm going to use int "], ["293.64", "and again  what it says is  up here  i'm in essence binding f"], ["297.13", "to int in a local frame so that when i'm evaluating this"], ["300", "body  f points to the internal procedure int "], ["304.77", "and if i do that  i now get a new version of l  actually "], ["308.99", "that's a poor way of saying it "], ["309.85", "l is still there "], ["310.93", "i have mutated l so that it now has the"], ["312.87", "values 1  2  and 3 "], ["315.98", "how about fact "], ["316.8", "let's assume we've got fact "], ["317.69", "factorial is available to us "], ["319.1", "we can do the same thing "], ["321.21", "and it now gives us the first  second  and third values of a"], ["325.31", "factorial are a fact 1)  fact 2)  and fact 3)  "], ["328.95", "and now that i've changed l again  let's"], ["330.46", "do it one more time "], ["331.16", "let's do it with fib to get the first  second  and sixth"], ["333.43", "fibonacci number "], ["334.71", "and out they come "], ["336.5", "what i want you see here is that we can pass in a function"], ["340.72", "as an argument "], ["341.63", "we just did a different function each time "], ["344.33", "in terms of how things work in that environment model  we're"], ["346.74", "just locally binding in a frame the variable f  that"], ["350.95", "parameter f  to some value  function "], ["353.45", "and then  in the body here  we're simply looking up the"], ["356.61", "value of f and using it "], ["359.36", "now  by the way  if f had just been a name for a specific"], ["363.93", "procedure  we would have done the same thing "], ["365.55", "if we'd said int instead of f  what would we have done "], ["368.89", "we would've looked up the binding for int up in the"], ["371.22", "global environment  which points to procedure object "], ["373.58", "so here  we're just passing them in as we go along "], ["376.58", "that's actually quite nice "], ["377.98", "that says we can do a bunch of"], ["379.35", "interesting things with functions "], ["382.99", "but we could do it in a different way "], ["385.15", "so for example  i said that functions could"], ["387.17", "be elements of lists "], ["388.7", "so let's think about one more "], ["390.14", "instead of applying a function to a list of numbers  let's"], ["393.87", "apply a list of functions to a number "], ["397.11", "so here's applyfuns "], ["399.36", "it assumes that l is a list of functions "], ["401.94", "it assumes x is a number "], ["403.84", "and what's it going to do "], ["404.82", "it's going to loop through each of the elements of the"], ["407.6", "list and call that function on the number and"], ["412.25", "then print it out "], ["413.78", "and so if i actually run this  well "], ["415.445", "let's do it over here "], ["416.12", "let's go check it out "], ["416.91", "i've got a version of it over here "], ["418.795", "and let me just load this up into my idle environment "], ["423.4", "and let's call applyfuns "], ["427.4", "and we're going to give it with abs  int  fact  and fib "], ["431.94", "which i've defined in my file here "], ["435.52", "and we'll give it the number 4 "], ["439.02", "very cool "], ["440.51", "that's really neat "], ["441.81", "what did it do "], ["442.76", "it ran through a loop  where it first started off with abs"], ["445.76", "as the binding for f and then applied abs to"], ["448.93", "4  printed it out "], ["450.75", "and then  in the next loop  it got int and applied int to 4 "], ["454.14", "which is pretty boring  printed it out "], ["456.05", "and then it took fact and applied fact to 4  printed it"], ["459.03", "out  and then fib  and applied fib to 4 and printed it out "], ["462.53", "what we can say is that those functions can also"], ["465.23", "be members of lists "], ["466.2", "and we can loop over those  using them in places where we"], ["468.58", "would like them  as well "], ["470.52", "very nice "], ["472.37", "let's take this one more step "], ["474.39", "we can generalize these higher order functions"], ["476.72", "a little bit more "], ["477.4", "and in fact  python provides some general purpose higher"], ["480.13", "order procedures for us "], ["481.04", "one of the ones it provides for us is the procedure map "], ["484.69", "and what does map do "], ["485.8", "in its simplest form  it takes a unary function  that is  a"], ["489.57", "function of one argument "], ["491.01", "and a collection of suitable arguments "], ["494.41", "so function numbers had better be numbers "], ["496.37", "and basically  map literally maps this function in turn"], ["501.52", "down each element of that list  giving us back the"], ["504.81", "result of applying each of those elements to that list "], ["507.87", "so it's a little bit like applytoeach  but it's"], ["510.95", "basically capturing the same thing "], ["512.97", "however  map is even more general "], ["515.35", "we can give it an n-ary function  that is  a function"], ["518.039", "that takes n arguments "], ["520.039", "and n collections of arguments "], ["523.049", "and map will apply this function in turn to the"], ["527.95", "respective elements of those arguments "], ["530.06", "so in the case of min  where min takes two arguments  i can"], ["532.67", "give two lists  l1 and l2  to map "], ["535.9", "and it respectively applies min to that pair  then min to"], ["540.08", "that pair  then min to that pair to create this list that"], ["544.327", "it returns "], ["545.92", "we're going to come back to this idea of using functions"], ["548.62", "in this way  using higher order procedures "], ["550.64", "throughout the term "], ["551.55", "but you've now got a sense of once i have lists and once i"], ["554.51", "treat functions as first class objects  the kinds of things i"], ["557.35", "can start to do with it "]], "XLjNHjfVdhs": [["0.98", "chris terman  in the next example  we're going to develop a class that"], ["3.58", "represents a grade book  a list of grades for every student in a class "], ["8.21", "as you look at the class and the following code that uses the class to"], ["12.34", "actually produce the grade report  look at the interaction between them"], ["15.73", "and think about whether there's other things that should be added to the"], ["18.64", "class in order to make using it more effective "], ["22.09", "it's often the case that one doesn't get all the right methods in a class"], ["26.07", "to begin with "], ["26.66", "only in using it will you discover what other"], ["29.04", "functionality needs to be added "], ["31.58", "so we're teaching a course  and an obvious application is a grade book "], ["35", "we'll need to keep track of the grades for all the students in our course "], ["40.02", "so let's set out and build one "], ["41.35", "we've chosen to organize it as a new class of its own "], ["44.74", "a class of grades  which will turn out to be a grade book "], ["48.275", "you can see here are the methods that we've defined "], ["50.4", "let's look through them "], ["51.86", "so when we make a grade book  initially  our list"], ["55.31", "of students is empty "], ["59.17", "and our grades dictionary is also empty "], ["61.75", "and we're going to represent grades by "], ["64.849", "we'll put them in the dictionary as a list for each student "], ["68.46", "and the students are referenced by their id number "], ["71.5", "so the grades is a dictionary which maps id number to a list of grades"], ["75.685", "that have been entered for that student "], ["78.27", "and finally  we have a little internal helpful helper variable called"], ["82.06", "issorted  which will be true when the list of students is currently in the"], ["87.05", "correct order "], ["87.79", "and of course  with an empty list  it starts off that way "], ["90.49", "we have support for adding a student to the grade book  we basically pass"], ["94.18", "in a student object  and if the student is already in our list of"], ["99.29", "students  then we sort of indicate by raising an error  in this case  a"], ["103.01", "value error  that the student is already in the grade book and that"], ["106.55", "this was an incorrect operation "], ["108.53", "if the student is not in the grade book  we go ahead and append them to"], ["112.39", "our list of students "], ["113.89", "and at the same time  we initialize their entry in the grades dictionary "], ["117.81", "so indexed by their id number  we set up an empty list  because we have yet"], ["123.2", "to enter any grades for the student "], ["125.04", "and finally  because we've added a student to the end of the list  we"], ["127.81", "don't know if they're in order "], ["128.85", "so we remind ourselves that  at this point  after the addition  the student"], ["133.67", "list is not correctly sorted "], ["136.74", "we can go ahead and add a grade for a particular student "], ["140.1", "we pass in the student and the grade we want to add "], ["143.3", "and we're going to basically reference the grades dictionary  using the"], ["148.08", "student's id number as a key  and we'll append the grade that were doing"], ["152.01", "to the end of the grades list for that student "], ["155.78", "the difficulty comes when we pass in a student who's not actually part of the"], ["159.43", "grade book  what should we do "], ["160.7", "should we add them to the grade book "], ["162.38", "should we just fail silently and not indicate anything "], ["166.63", "well  the correct behavior in this case is to catch the situation where"], ["172.26", "we are providing an index into the dictionary that does not exist "], ["176.91", "when that happens  the python system raises a key error "], ["180.21", "we'll capture that error  and  basically  reinterpret that error as a"], ["184.7", "value error with the message   student not in the grade book  "], ["189.1", "so the idea is that the grades dictionary is sort of an internal data"], ["193.97", "structure  and it would be weird for somebody who is adding a grade  who"], ["197.24", "knew nothing about the internal data structure  to get an error associated"], ["201.69", "with dictionaries "], ["202.92", "so what we want to do is to take errors that are sort of only because"], ["209.26", "of a particular internal representation and then turn them into"], ["212.57", "an error using the try and accept statement here that will indicate an"], ["219.85", "error the user would understand "], ["222.82", "similarly  we can get a grade for a particular grades list for a"], ["225.59", "particular student by passing in the student to the getgrades method "], ["231.03", "again  we're going to go try indexing into our grades dictionary and"], ["234.69", "returning a copy of the list of grades that we see "], ["238.18", "and if  for some reason  the student isn't in the dictionary  we raise the"], ["242.2", "same value error as before "], ["244.36", "so why don't we return a copy of that grades list "], ["247.26", "well  in general we don't want people corrupting the internal data"], ["250.08", "structures of our grade book "], ["251.83", "so when we give them back something  we tend to give them a copy  so they"], ["256.91", "could reorganize the copy or do whatever they want without affecting"], ["260.019", "our own internal representation "], ["262.86", "finally  here the bottom  we have a way to get a"], ["264.76", "complete list of students "], ["267.8", "and in this case  we want to return a sorted list "], ["271.56", "so if the internal list isn't sorted  we sort it and then"], ["274.36", "remember that we did so "], ["275.37", "so we have a huge grade book "], ["277.54", "every time somebody asks for all the students in the grade book  we won't"], ["280.57", "continually be sorting the list "], ["282.31", "we'll only be sorting it if it needs sorting "], ["285.03", "finally again  we return a copy of that now-sorted list so that people"], ["290.05", "can manipulate that list in many ways "], ["292.67", "none of which will change the actual student list that we have inside the"], ["296.83", "grade book "], ["298.4", "now why don't we choose to organize this is a class instead of just some"], ["301.36", "data structures and a bunch of procedures "], ["304.7", "in object oriented programming  what we're trying to do is take advantage"], ["307.89", "of encapsulation "], ["309.26", "so that's sort of a big oop concept that's one of the main strengths of"], ["314.54", "object oriented programming  where what we do is  we collect together all"], ["318.84", "the data for a particular application  and all the procedures for"], ["322.54", "manipulating that data  and encapsulate them"], ["324.89", "together in a single object "], ["327.02", "that way  people can use the object without really understanding any of"], ["330.02", "the details of the internal operation "], ["332.95", "and the class definition itself sort of gives us a specification for"], ["339.34", "interfacing with their collected data that's inside "], ["343.16", "let's see this in operation "], ["344.77", "so here is a little procedure that we've written that"], ["348.15", "produces a grade report "], ["349.44", "it sort of works like you expect "], ["351.36", "it goes off and gets all the students in the course "], ["354.49", "and for each of those students  it's going to first figure out their"], ["361.42", "average grade "], ["362.21", "so it runs through their list of grades  so for the grades for that"], ["366.13", "particular student  we're going to go through each grade  adding it to a"], ["369.27", "total  and then keeping track of the number of grades that we run"], ["373.73", "across in the list "], ["374.82", "and then we can compute the average by dividing the total by the"], ["377.64", "total number of grades "], ["379.1", "and when we're done  we're generating a report  so we're going to keep a"], ["382.85", "list of the report "], ["384.45", "and we report the students average grade on that list "], ["388.14", "and finally  when all is said and done  we take the individual lines for"], ["392.91", "each student and join them together with new line spacing  and return that"], ["396.89", "as our answer "], ["398.01", "notice that what happens if we run across a student that has no grades "], ["401.29", "in other words  the grades list is empty for that student "], ["404.34", "so numgrades is zero  and this would normally create a"], ["407.65", "divide by zero error "], ["409.61", "and again  in an attempt to provide a good interface  we're going to catch"], ["418.05", "the error that might be generated by a divide by zero  and instead put into"], ["422.9", "the report something more sensible  just that that student has no grades "], ["427.59", "so to try it out here  we have a bunch of students that we defined "], ["430.36", "and again remember  each time i define a student  they're getting ids in"], ["434.06", "consecutive order "], ["435.56", "i then go off and create a grade book for a particular course and add a"], ["441.33", "bunch of students "], ["442.61", "and then for each during the course  i give them a particular grade of 75 for"], ["446.31", "the first assignment  and then for a couple of the students  they get some"], ["449.75", "additional grades "], ["451.27", "and finally  at the end  just to see what'll happen  we add a student to"], ["456.02", "the grade book and  of course  at this point that student has"], ["458.75", "no grades at all "], ["460.47", "so if we come over here and look  we can find out what six00 "], ["464.54", "well you can see  it's a grades object "], ["465.98", "that make sense "], ["466.55", "it was meant to be a grades book "], ["468.3", "it's an instance of the grades object "], ["472.82", "we can go off and ask for all the students in six00 "], ["477.69", "so six00 allstudents  ) let's just print out their names "], ["481.8", "and here they are "], ["482.61", "and in fact  even though we entered them higgeldy-piggeldy  you can see"], ["486.69", "when we ask for a list of all the students  they come out"], ["490.34", "sorted by id number "], ["491.88", "remember that the students  because they're an mitperson  when we sort"], ["495.84", "them  they're sort of by id number "], ["498.22", "so all that's great "], ["499.98", "you might ask yourself  why didn't we just reach inside and knowing that"], ["505.53", "there was a list of students  why don't we just say  for s in"], ["508.69", "six00 students and just grab the internal data structure "], ["513.299", "well  that's part of the data hiding aspect of python objects "], ["517.71", "we're really trying to provide an interface to the grade book that has a"], ["522.549", "limited number of operations "], ["524.02", "so we changed the implementation of the grade book later  people can still"], ["527.49", "use it  and they shouldn't have been relying on any particular internal"], ["531.96", "representation "], ["533.44", "so if i'm all done here  what i can do is go ahead and ask to print out a"], ["536.95", "grade report "], ["538.52", "and i'll pass in the grade book as the argument to my"], ["542.38", "little report generator "], ["544.09", "and there we go "], ["545.04", "you can see that we've gotten these five lines  one for each student  and"], ["548.6", "we've calculated their average grade appropriately "], ["553.61", "this data hiding aspect has pluses and minuses "], ["557.26", "one  it allows us to change the internal representation as we'd like "], ["561.14", "but we can also be stuck with the problem that we generate some"], ["564.61", "inefficiencies "], ["565.47", "for example  when we wanted to return a list of all the students  we"], ["568.9", "carefully made a copy of the internal list and returned it so that the user"], ["575.6", "could go off and do what he wanted to with a list of students "], ["579.13", "the difficulty with that is  if i have a 100 000 students in my big online"], ["583.82", "course  what i'm worried about is  that i've now  every time somebody"], ["587.67", "asks for a complete list of the students  i've generated a"], ["591.45", "copy of that list "], ["593.18", "and if the intent is to basically iterate through that list and do"], ["597.94", "something  that's a pretty inefficient operation "], ["600.67", "creating an extra 100 000 element list every time you want to look through"], ["604.65", "the grade book "], ["606.14", "so we need to think of a strategy for dealing with that inefficiency  but"], ["610.79", "still keep the strengths of data hiding  where the idea is  we don't"], ["615.91", "really want people to know exactly how the internal representations used in"], ["621.23", "the grade book "], ["622.32", "so let's think about that for a moment "]], "jq5M5Gmf0do": [["3.6", "the introduction to computer science and programming "], ["6.9", "it's odd to have both of those terms in the title  but both"], ["9.94", "of them are important "], ["11.22", "this course is going to be not just about teaching you how to"], ["14.23", "program a computer  how to tell the computer instructions"], ["16.93", "that it can understand "], ["18.48", "it's also going to be really important to create within you"], ["21.44", "a capability to think computationally "], ["24.24", "so our goal is to let you become skillful at not only"], ["27.1", "getting the computer to do something  but to do that"], ["29.79", "thing that you want it to  to get it to solve a problem "], ["33.06", "by the end of this course  we hope that your first instinct"], ["35.69", "when faced with any interesting challenge is to"], ["38.13", "first think about how could i capture that challenge  that"], ["41.07", "problem in an algorithmic or mechanical description of"], ["44.35", "steps such that i could get the computer to do"], ["47.05", "the work for me "], ["47.97", "if you can do that  it's going to give you a great deal of"], ["50.94", "advantage as you face any kind of problem "], ["53.18", "and those are the skills that you're going to see throughout"], ["55.12", "this course "], ["56.19", "now if our goal is to have you learn how to get a computer to"], ["60.69", "do something for you  how to talk to the computer  how to"], ["63.09", "think algorithmically "], ["64.519", "1 of the questions we can ask is  so what's the computer"], ["67.14", "going to do for us "], ["68.22", "what's it actually good at "], ["70", "that seems like probably an odd question "], ["71.85", "after all  we know computers could do a ton of things "], ["74.87", "but it's still important to go back to a very fundamental and"], ["77.47", "basic point "], ["78.75", "what does a computer do "], ["80.68", "in fact it does 2 things and 2 things only "], ["83.64", "it performs some calculations  and it remembers results so"], ["87.77", "that it can reuse them "], ["89.31", "now you'd say  ok  so it performs calculations "], ["92.39", "that seems fine "], ["93.47", "but what kinds of calculations "], ["95.99", "well  it turns out that every computer comes with a simple"], ["99.23", "set of primitive calculations  things that we call built in "], ["102.22", "they're provided by the manufacturer as the basic"], ["104.62", "elements that a computer could use "], ["106.2", "we'll see some examples of that shortly "], ["108.35", "if that's all we have  that's pretty limiting "], ["111.49", "so a key thing  as we go through the material in this"], ["114.12", "course  is to learn how we can create our own methods for"], ["117.68", "computing something  how we can capture the computational"], ["120.95", "way of thinking about something in a manner that"], ["123.06", "could be used by the computer  and to do it in a way whereby"], ["126.16", "the computer can abstract that "], ["128.28", "by that we mean that the computer can figure out how to"], ["131.05", "take what you tell it and turn it into something that it can"], ["133.95", "now treat as if it were a primitive  something that was"], ["136.16", "provided by the manufacturer  and reuse that throughout its"], ["139.4", "computations "], ["140.48", "so our computers are going to do calculations for us  using"], ["143.52", "a set of built-in primitives  plus things that we add "], ["146.07", "now you might ask  gee  is that enough "], ["149.21", "if it turns out that a computer can just perform"], ["151.65", "primitives calculations  it's not sufficient "], ["154.86", "well  as i'm sure you already realize  modern computers can"], ["157.95", "perform most calculations incredibly quickly "], ["160.845", "and so one question is if we can do them fast enough is"], ["164.14", "that sufficient to do interesting things "], ["166.64", "let's look at both parts of that "], ["168.49", "first of all  how quickly does a modern"], ["170.52", "computer actually run "], ["172.65", "well  let me give you a simple little thought example "], ["174.99", "if i were to take a little gooseneck lamp and put it"], ["177.1", "right here  a foot above my desk  and i were to time"], ["180.86", "things perfectly so that as i hit the switch on the lamp i"], ["184.5", "hit a key on my computer and started them both up at"], ["186.88", "exactly the same time  in the length of time it takes the"], ["190.23", "light to go from the lamp to the desk your computer will"], ["193.79", "execute two operations "], ["196.576", "that's amazing "], ["197.846", "it does two operations  two of those primitive operations in"], ["201.15", "the amount of time it takes light to go basically a foot "], ["204.71", "unbelievable "], ["206.29", "here's another way of thinking about it "], ["207.495", "imagine i take a simple child's rubber ball and i"], ["211.09", "suspend it about a meter off the ground and i drop it "], ["214.96", "if i let it drop  by the time it hits the ground  assuming"], ["219.21", "gravity behaves normally  your computer will have executed"], ["223.07", "1 000 000 000 operations "], ["225.61", "unbelievable "], ["226.82", "1 000 000 000 operations by the time that"], ["228.38", "ball hits the ground "], ["230.29", "now  that suggests that in fact these computers are"], ["233.46", "incredibly fast "], ["234.36", "and even though they're computing very simple things "], ["236.37", "they're doing incredibly quickly "], ["238.24", "they are "], ["240.19", "we say computers do simple operations "], ["241.73", "we also said that they have some storage "], ["244.31", "so how big is the storage inside of a computer "], ["247.07", "well  every element of storage is called a byte "], ["250.28", "and if we were to assume that a byte weighed 1 ounce  "], ["254.23", "i know bytes don't really weigh ounces  but assume they"], ["256.57", "weigh 1 ounce "], ["257.619", "a typical computer has hundreds of"], ["260.14", "gigabytes of storage "], ["262.41", "and that says if each one of those bytes weighs 1 ounce a"], ["266.39", "computer would be able to store the equivalent of"], ["268.77", "300 000 000 tons of storage "], ["274.11", "ok "], ["274.32", "they don't really store it that way "], ["275.63", "but you get the idea "], ["277.15", "incredible amount of storage  can remember a lot of things "], ["279.56", "and incredibly quick in terms of doing the computation "], ["282.9", "so  that sounds really good "], ["285.88", "the question is if they're only primitive operations is"], ["288.95", "that enough "], ["289.92", "are these simple calculations sufficient "], ["291.77", "well  they're going to do a lot as we see "], ["293.18", "but we're also going to see that they're not quite enough"], ["295.62", "to do everything we'd like "], ["297.19", "let me give you 2 examples "], ["299.22", "i'm sure all of you have gone to the world wide web to look"], ["301.265", "up a piece of information "], ["302.22", "you've searched the web to try and find things that you'd"], ["304.8", "like to know about "], ["306.58", "the question is if a computer is just doing this the"], ["308.87", "straightforward way how quickly would"], ["311.04", "it search the web "], ["312.19", "well  it turns out there are about 45 000 000 000"], ["315.26", "searchable pages on the web at the moment "], ["318.03", "if we assume that it takes about 1 000 words  or there"], ["321.82", "are about 1 000 words per page "], ["323.55", "some  of course  are much more than that  some of less  but"], ["325.38", "about a thousand words per page "], ["327.07", "and just for sake of argument  we're going to assume it takes"], ["329.18", "about 100 operations per word to find the word on the page"], ["333.4", "and to decide it's the right thing "], ["335", "100 is actually high "], ["335.96", "let's make it a little less "], ["336.49", "let's just assume it's only 10 operations per word "], ["339.2", "how long does it take to actually execute that search "], ["342.11", "well  we can do the math "], ["343.34", "you can grind it through "], ["344.4", "you have 45 000 000 000 pages "], ["347.73", "you have that many operations "], ["348.59", "you know how quickly we're doing these actual operations "], ["351.27", "if you put it all together  what you find is it's going to"], ["354.05", "take you about 5 2 days to find something on the web "], ["361.03", "that's a slow browser "], ["362.45", "that's not going to work very well "], ["364.58", "and that basically is giving us a hint that even with"], ["367.02", "really fast computers we have to be smarter "], ["368.85", "let me give you a second example "], ["371.19", "playing chess  something that's seen as a very"], ["373.24", "difficult task "], ["374.355", "it's impressive that about 10 or 15 years ago a computer"], ["377.07", "program actually beat the world"], ["378.31", "champion in a chess match "], ["379.9", "and 1 of the questions is  well  ok  is it just because"], ["382.82", "the computers are really fast "], ["384.5", "well  we can look at this two ways "], ["385.68", "in a typical chess game  there are about 35"], ["388.25", "moves at any one time "], ["390.26", "and so the question you could ask is to say  ok  if i want"], ["393.41", "to have my computer program look ahead 6 moves  3 moves by"], ["397.04", "me  3 moves by my opponent  how many different options are"], ["400.9", "there if there are about 35 moves each "], ["403.08", "and the answer is about 1 8 billion different sets of the"], ["408.04", "chess board that i'd have to look at "], ["409.91", "if i can check each move out in about 100 operations per"], ["413.77", "move  then that says it's going to take me about a half"], ["416.79", "hour to actually look at each move "], ["419.42", "that's pretty slow "], ["420.68", "and this is pointing to a problem that"], ["421.94", "we want to get at "], ["423.02", "and the problem is that  yes  computers are really fast  but"], ["426.65", "we need good algorithmic design as well "], ["429.18", "to deal with interesting problems  we need algorithms"], ["432.43", "that are clever  are intelligent  are smart about"], ["435.38", "how they actually do the work "], ["436.94", "and that's a lot of what we're going to talk about this"], ["439.12", "during this term "], ["440.34", "by the way  we also said space was a big issue "], ["442.83", "and we got a lot of space in the computer "], ["444.615", "if you go back to the chess example  you can ask the"], ["447.52", "following question  how many different games"], ["449.73", "are there in chess "], ["451.236", "experts will tell you there about 10^123 different chess"], ["455.88", "games that are possible "], ["457.61", "is that too big for storing in your computer "], ["459.75", "well there are only 10^80 atoms in"], ["463.93", "the observable universe "], ["465.7", "so we can't just store away all the games"], ["467.75", "and look them up "], ["469.05", "and both of these are pointing to why we're going to use this"], ["471.08", "course to actually learn about thinking algorithmically "], ["474.28", "now this suggests it's just a matter of putting together"], ["478.02", "enough speed and enough smartness "], ["479.9", "but one can be a little bit more distinct and say  are"], ["481.91", "there actual limitations to what we"], ["483.67", "can do with the computer "], ["485.44", "and in fact despite its speed and its size and the"], ["488.01", "cleverness of the algorithm  our computer still has some"], ["490.34", "limitations "], ["491.01", "here are a couple of examples "], ["492.88", "first of all  there are some problems that"], ["493.98", "are just too complex "], ["495.78", "we don't have enough speed  enough storage "], ["497.7", "and they may get tackle as things improve "], ["499.94", "but examples here would be things like predicting weather"], ["502.17", "at a very local scale "], ["503.45", "i'd love to know what's exactly going to happen"], ["505.54", "outside my window for the next half hour or next"], ["507.64", "hour or next 3 hours "], ["509.28", "the size of the problem simply too big for a computer to be"], ["511.89", "able to model well enough and solve in a"], ["513.97", "reasonable amount of time "], ["515.512", "it turns out some of these complex problems"], ["517.26", "actually help us "], ["518.6", "modern cryptography  the way in which information is"], ["521.73", "securely transmitted across the net  relies on having some"], ["525.93", "problems that are simply too difficult to compute and "], ["528.55", "therefore  too difficult to break the code "], ["530.64", "so we actually get some benefits about the problems"], ["532.51", "that are too complex "], ["534.146", "but as we're also going to see later on the course  there are"], ["536.74", "some problems that are just fundamentally impossible to"], ["539.98", "compute no matter how big the computer is "], ["542.85", "and some of those are really heavy "], ["544.495", "here is one example  being able to predict whether a"], ["547.7", "piece of code will always stop with an answer for any input "], ["552.48", "by that i don't mean just you run it and see if it stops "], ["554.74", "being able to write a piece of code and then have some other"], ["557.75", "piece of code inspect it to say  this will always work "], ["560.64", "it will always stop  and it will always give us an answer "], ["562.98", "this turns out to not be possible to solve "], ["565.78", "and this is known as turing's halting problem "], ["569.64", "and we'll talk briefly about that later on in the term "], ["573.08", "but it says that there are some problems that are simply"], ["575.47", "too hard to solve period "], ["578.26", "nonetheless  in this course  we're going to start talking"], ["580.47", "about how do we think algorithmically and get the"], ["582.69", "computer to do interesting things for us "]], "hXyXRmJA8RU": [["1.62", "eric grimson  ok "], ["2.85", "so we've now seen how to create simple expressions "], ["5.19", "we can take objects that are numbers"], ["7.64", "like integers or floats "], ["8.83", "we can combine them together with operators  so we say 3"], ["11.88", "plus 4 or 3 plus 4 all in parentheses times 5 "], ["16.07", "that gives us a way of doing some simple computations  but"], ["18.73", "it's pretty boring "], ["19.94", "it basically says we got a calculator "], ["22.09", "so we can type in expressions and get out values "], ["24.71", "but we like to obviously do more"], ["26.26", "complicated kinds of things "], ["28.47", "one thing we need in order to make that happen is what we"], ["30.78", "call a means of abstraction "], ["32.359", "while we can certainly write arbitrary expressions  it"], ["34.5", "would be valuable having written it down and gotten the"], ["37.02", "value of an expression to be able to remember  to save it"], ["40.01", "away by giving it a name  and then using the name to get the"], ["43.23", "value back whenever we needed it "], ["45.95", "fortunately  we have that ability "], ["47.38", "it's called assignment "], ["48.75", "and in python  the format of that is shown here "], ["52.22", "we type in word or a sequence of characters followed by an"], ["56.83", "equal sign followed by some expression whose value will"], ["61.24", "then be associated with that word "], ["64.42", "so if i go over to my python shell  i can do things like"], ["69.4", "i'm going to say  give the name pi 3 14159 "], ["78.33", "and notice when it print it out  it doesn't mean anything "], ["80.58", "it simply has done that assignment "], ["82.12", "that is it basically "], ["83.14", "as we're going to see later on  created a binding of the"], ["85.79", "name pi to that value "], ["87.705", "if i want to see the value of pi  i can simply ask the"], ["91.23", "python interpreter to give it to me  and it"], ["93.72", "prints it back out "], ["95.06", "so i could do another binding "], ["96.5", "i can say  i've got a radius of 11 2 "], ["100.55", "again  notice that it doesn't print anything out "], ["102.58", "if i want to get the value of radius  i can ask for it "], ["106.01", "but i can also now do things like create expressions "], ["109.08", "so i'm going to assign the name area to "], ["111.35", "and i can now write an expression as i would have"], ["113.67", "before with now not just numbers but names whose values"], ["122.24", "are also numbers "], ["123.03", "so the area is pi r squared  where r is my radius "], ["127.08", "and i can say  ok  what is the value of area "], ["130.86", "and it did that computation "], ["132.97", "so i have an assignment statement "], ["134.4", "and notice here i'm using a single equal sign  which is"], ["137.16", "why we use the double equal sign for comparison "], ["140.3", "a word or a name  an equal sign  and expression says  get"], ["144.16", "the value of that expression and bind to it or bind it to"], ["147.97", "if you like the value of the name associated on the left"], ["150.57", "hand side of that expression "], ["154.46", "so let's look at that in a little more detail "], ["156.72", "we say that we're binding a variable or a name to a value "], ["161.12", "and what does that mean "], ["162.2", "that statement pi equals 3 14159 literally assigns the"], ["166.36", "name pi to the value of the expression to the right hand"], ["169.36", "side of the equal "], ["170.862", "and you can think of this as literally creating a binding"], ["174.05", "between a name and a value stored"], ["176.36", "somewhere in the computer "], ["177.54", "so over here are all the values that are stored away in"], ["179.97", "the computer "], ["180.84", "and i have somewhere within the computer a listing of all"], ["183.84", "the names whose bindings i have done "], ["186.32", "as we just saw  we can retrieve the value associated"], ["188.79", "with the name by simply invoking the name  just asking"], ["191.44", "for what is the value pi or pi "], ["195.85", "now i can change the bindings "], ["198.71", "so having the bound a variable name  i can do another"], ["201.94", "assignment statement "], ["203.28", "so  for example  if i go back over to my python shell  i"], ["206.09", "could change the value of radius "], ["208.2", "remember  initially we had radius of 11 2 "], ["214.49", "let's change it to something different "], ["216.3", "let's changes it to in fact "], ["218.1", "i'm going to make this 14 3 "], ["222.05", "so how do i do that "], ["223.42", "i say let's have radius be 14 3 "], ["227.04", "now what's my value of radius "], ["229.48", "there it is "], ["231.28", "what that's done in my diagram over here is it's change the"], ["234.32", "binding for radius "], ["235.39", "remember before it was 11 2 "], ["236.61", "it has now changed into something else "], ["239.54", "but notice that area hasn't changed "], ["242.77", "and in fact i can confirm that "], ["244.84", "the area is still 3 94 point a whole bunch of stuff "], ["249.52", "and that's because my evaluation of the binding for"], ["252.44", "area having been done earlier has simply"], ["254.57", "stored away that value "], ["256.05", "as you can see right here  it doesn't have an"], ["258.779", "expression of value "], ["259.604", "and it is the particular value "], ["261.329", "so rebinding radius does not change the binding"], ["264.63", "associated with area "], ["266.38", "an easy place to make a bug or have a mistake and something"], ["269.66", "that you want to keep an eye out on as you move forward in"], ["272", "terms of using these ideas "]], "G0qUN3eTqlo": [["0.87", "eric grimson  let's visualize what selection sort does "], ["3.32", "the basic idea is that we're going to start with the first point in the"], ["6.19", "list  look at all the remaining ones to find the smallest thing  and then"], ["9.83", "swap those two points and continue on "], ["12.91", "so we start by putting a marker at the first spot on the list "], ["16.26", "we then start by taking a second marker at the next point in the list "], ["19.35", "and we keep scanning down  checking to see where is the smallest thing that"], ["22.95", "we've seen in the list  which happens to be here "], ["25.64", "when we get to the end of the list  knowing that that's the smallest"], ["28.06", "thing  we swap those two elements "], ["30.47", "and then we move the marker up one  start our checking point at the next"], ["34.53", "one  and again  scan down the list  finding the smallest thing we've seen"], ["37.6", "so far  which eventually we find there "], ["40.72", "having found that  we swap those two elements  move on to the next point in"], ["44.61", "the list  move our marker up one  and again scan for the smallest"], ["48.11", "element in the list "], ["49.03", "which happens to be here  so when we get to the end  we swap those two "], ["53.04", "and you get the idea "], ["53.76", "we move the marker along  the thing that we're going to check along  and"], ["56.5", "we keep scanning until we find the smallest element of the list  which is"], ["59.84", "right there "], ["60.68", "once we've gotten to the end of the list  knowing this is the smallest"], ["63.13", "one  we swap these two  and we can carry on "], ["66.13", "i'm not going to do the rest  but you can see how we're selectively finding"], ["69.28", "the next smallest element  and putting it at the front of the list "], ["72.53", "you can also see how that notion of having the prefix sorted and the"], ["76.18", "remainder not  but finding the smallest element and adding it to the"], ["78.99", "prefix builds that invariant that lets us guarantee"], ["82.02", "that this works correctly "]], "xnhi9-ud_vI": [["0.706", "eric grimson  we've been building a lot of code "], ["2.33", "we've been starting to think about how to deal with python "], ["5.68", "and this is great "], ["7.18", "and it would be fantastic if our code always worked perfectly"], ["11.79", "first time we ran it "], ["12.99", "of course  it would always be nice if i won the lottery every time or my"], ["15.93", "favorite sports team won every game "], ["18.43", "unfortunately  that doesn't happen "], ["20.11", "as they say  life ain't perfect "], ["22.39", "and so we need to have a way of guiding ourselves as we think about"], ["26.02", "how to both test our code and then fix it "], ["29.68", "so we're going to talk about testing methods  which are basically ways of"], ["33.35", "trying code on examples to try and figure out if it's running correctly "], ["38.11", "and then once we've  in fact  isolated that there may be a problem  we're"], ["41.03", "going to talk about debugging methods  which are ways of fixing the program"], ["44.38", "that you know does not work as you intended it to "], ["47.71", "we're going to talk about both of those throughout this lecture "], ["51.26", "now  let's start by thinking more abstractly about sort of when should"], ["54.47", "we  in fact  do these tasks "], ["57.26", "when should you test  and when should you debug "], ["60.27", "part of the goal here is it would be really good if we could actually ahead"], ["64.55", "of time  figure out how to design our code to make it easier to do this "], ["68.37", "and indeed  all good programmers have that kind of practice "], ["71.67", "they break the code up into components that can be tested and debugged"], ["74.99", "independently "], ["75.92", "they find natural breaking points between different parts of the"], ["79", "computation  places where our computations contain  and a simple"], ["82.55", "result is passed on "], ["83.99", "and they write functions to capture each parse "], ["86.79", "that's going to allow us to more easily test pieces "], ["90.15", "second thing good programmers will do is they'll write good documentation "], ["94.48", "when you've got a problem set  it's often easy to think i'm just going to"], ["96.8", "start working on this "], ["98.13", "but in fact  before you jump into code  think about writing down what it"], ["102.09", "is you're trying to do "], ["103.31", "what are the expectations on my input "], ["105.44", "what are the expectations on my outputs "], ["108.06", "even if the code doesn't strictly enforce constraints on the inputs by"], ["111.75", "testing for them  this kind of documentation can be really valuable"], ["115.16", "when you're trying to trace down why a piece of code is"], ["117.31", "not behaving as expected "], ["119.51", "and finally  good programmers will document assumptions "], ["122.95", "i'm assuming certain conditions  both in terms of what's passed into the"], ["127.1", "code and at certain stages throughout the code "], ["129.65", "and detailing those assumptions is going to make it easier for us to"], ["132.84", "actually isolate where there may be problems  for example  because an"], ["136.69", "input does not satisfy an assumption "], ["140.63", "all right "], ["141.01", "once we've designed our code  we can  in fact  start moving"], ["145.38", "on to testing it "], ["146.79", "and to do the testing  basically we need to do 2 things "], ["150.47", "the 1st one is we've got to make sure our code actually runs "], ["153.24", "so we need to remove any syntax errors "], ["156.69", "we need to remove any static semantic errors "], ["158.63", "and fortunately  in most modern programming languages  including"], ["162.32", "python  these things will be handled automatically  indeed  as you probably"], ["166.55", "already seen "], ["167.12", "if you write a piece of code that has either a syntax error  you forget a"], ["170.88", "semicolon  or you've got the wrong kind of parentheses  or a static"], ["173.97", "semantic error  when you try and load that into the python environment "], ["178.81", "typically  the interpreter  the evaluator will complain "], ["181.49", "it will say you got an error and not actually let you run "], ["184.86", "that makes it easy to fix those kinds of errors "], ["187.29", "once you have those done  if you're ready to start doing testing  it's"], ["191.48", "often really good to have ahead of time worked out a"], ["194.75", "set of expected results "], ["196.38", "what do i expect the output of the program to be on a particular input "], ["200.87", "because that's going to form a template for helping us figure out how"], ["203.83", "to find where the bug actually lies "], ["206.7", "ok "], ["207.13", "with that  we're now ready to start moving on to thinking about testing "]], "EE910ZBFlCg": [["0.375", "eric grimson  we just showed you a recursive algorithm "], ["2.785", "you may be a little worried about it "], ["4.4", "you may be going  ok  but how does it know which values of"], ["7.85", "the variables to use "], ["9.11", "because i'm not seeing any explicit"], ["10.56", "changes to those values "], ["12.15", "how does it make sure it really stops "], ["13.84", "why doesn't it just keep unwinding "], ["15.86", "didn't your high school geometry teacher never to use"], ["19.28", "definitions where you defined a term in terms of itself "], ["23.19", "good news is not to worry "], ["25.17", "and we've got a tool to help us understand that "], ["27.44", "let's go back and simply look at a simple call to recurmul "], ["31.27", "recursive multiplication  using that set of environments"], ["35.11", "to see how computation flows "], ["38.84", "so here's my code  i've just got a copy of it here "], ["42.56", "and in particular  if i evaluate this  or load this if"], ["46.53", "you like  into a python environment  a shell  we know"], ["50.27", "what's going to happen "], ["51.09", "which is we're going to create a frame over here  in which"], ["53.75", "that name  recurmul  is bound to a procedure object "], ["57.95", "and it's got inside of it both the parameter list and the"], ["61.88", "body  the set of things it's supposed to do "], ["64.92", "ok  let's see what would happen if we"], ["67.31", "actually called it "], ["68.82", "so let's call it "], ["71.6", "calling it says  i am going to evaluate this"], ["73.85", "expression down here "], ["75.67", "and i'm going to first get the value of recurmul "], ["77.97", "i know what that is "], ["78.8", "it's given by that pointer there "], ["80.4", "it's a procedure object "], ["82.01", "and so i know that calling it says i'm going to create a new"], ["85.53", "environment "], ["86.86", "it's going to inherit  or have as a parent  the same"], ["90.26", "environment that the procedure has  the environment that was"], ["94.73", "in place when we defined the procedure "], ["96.44", "so it was going to point to that frame "], ["98.62", "and inside of there  first i'm going to get the values of"], ["101.35", "these two expressions  and i'm going to then bind the"], ["105.88", "parameters of the procedure to those values "], ["108.88", "all right "], ["109.26", "i'm saying it in a long winded way  but"], ["110.85", "you've seen this before "], ["111.72", "we've now created a new environment in which a is"], ["113.93", "bound to 2 and b is bound to 3 "], ["116.21", "and relative to that environment we're going to"], ["118.2", "evaluate the body of this procedure "], ["121.21", "ok "], ["122.38", "let's start evaluating the body "], ["123.66", "the body says is b equal to 1 "], ["127.5", "no it isn't "], ["128.03", "it's 3 "], ["128.509", "so it's going to go to the else clause "], ["131.42", "and the else clause says  i'm going to return a value "], ["134.9", "great "], ["135.95", "i'm going to get a value back "], ["136.73", "and it says the value is going to be the value of a "], ["139.2", "remember i'm doing it relative to this frame here so i know"], ["141.83", "the value of a "], ["142.4", "it's 2 "], ["143.51", "and i'm going to add to a the value of the recursive call "], ["148.58", "another call to recurmul  with different arguments "], ["152.01", "now think of this very straightforwardly "], ["154.66", "this is python "], ["155.45", "this is an interpreter "], ["156.8", "that's an expression "], ["157.71", "it says to get the value of that expression  what do i"], ["160.17", "need to do "], ["160.84", "you need to get the value of recurmul  oh"], ["164.63", "that's it up here "], ["166.27", "ok "], ["167.156", "now  i need to get the value of a "], ["170.19", "and remember i'm doing it all with respect to this  and in"], ["172.96", "fact i should have done that better "], ["173.96", "to get the value of recurmul with respect to this"], ["176.15", "environment  i'm going to go up and find it there since"], ["178.54", "it's not bound down here "], ["180.56", "i need to get the value of a "], ["182.69", "there it is "], ["183.47", "and i need to get the value of b minus 1 "], ["185.5", "well that's easy "], ["186.17", "there's b  and subtract 1 from it "], ["188.79", "and since recurmul is a procedure  what"], ["191.4", "am i going to do "], ["192.82", "i'm going to create a new frame "], ["196.03", "cool "], ["196.65", "that's exactly what i want "], ["198.64", "because now i've got a computation that's taking"], ["200.85", "place with respect to this frame "], ["202.93", "and how did i set that up "], ["204.07", "well i got the value of a "], ["205.32", "i got the value of b minus 1 from here "], ["207.44", "i've bound those in this procedure because that's what"], ["210.64", "it tells me to do "], ["211.84", "and i'm now saying  evaluate this procedure in this frame "], ["215.85", "remember  when i get the value of this i'm going to give it"], ["218.19", "back to this frame to complete that addition "], ["220.26", "but i've now reduced this to simpler computation "], ["224.05", "notice something else really nice "], ["226", "you may have been saying  well  how do i keep track of"], ["228.15", "my iteration variable "], ["230.25", "it's not really iteration  it's recursion "], ["231.99", "but notice i've reduced b "], ["235.1", "and that's exactly what's going to happen "], ["236.75", "i'm going to keep unwinding this computation until i"], ["239.16", "ground that out "], ["240.81", "ok "], ["242.11", "we're now in pretty good shape "], ["243.23", "because what do we want to do "], ["245", "it says i need to get the value of this procedure  this"], ["248.19", "body  this body here  with respect to this environment "], ["252.65", "what do i do "], ["253.19", "well  let's say is b in this environment equal to 1 "], ["255.28", "no it is not "], ["256.7", "so i'm going to return the value of a from this"], ["259.67", "environment  which is right there  to"], ["263.7", "another procedure call "], ["264.99", "i'm doing another procedure call on recurmul "], ["268.17", "what do i do "], ["269.17", "from here  i get the value of recurmul "], ["271.655", "and i trace up that chain to say  there it"], ["273.81", "is  it's that procedure "], ["276.1", "i need to get the value of a in this environment "], ["278.83", "that's easy "], ["279.5", "and i need to get b minus 1 in this environment "], ["283.22", "well  that's easy  as well "], ["284.59", "b here is 2  i subtract 1  and that leads naturally to yet"], ["289.51", "another recursive call "], ["292.35", "now  you're going to be glad i only did this with 2 and 3 "], ["294.62", "and not 2 and 57 "], ["296.21", "but you get the idea "], ["297.96", "i am now evaluating the body of this procedure with respect"], ["301.76", "to this environment "], ["303.44", "what do i do "], ["304.53", "i say  ok  is b equal to 1 "], ["308.12", "thank god  it is "], ["309.34", "but if b is equal to 1  what do i do "], ["311.97", "i return the value of a from this environment "], ["316.7", "so that computation gives me back a 2 "], ["320.86", "that's really nice "], ["321.92", "because what does that say "], ["323.57", "it says  gee  here's where i am "], ["327.55", "i'm now returning the value of a because i was in that"], ["329.51", "recursive call "], ["330.3", "it says the value of this recursive call is 2 "], ["333.39", "i'm going to give it back to the place that was waiting for"], ["336.08", "it  which was up here "], ["337.45", "and what was i doing "], ["338.45", "i was waiting to get the recursive value "], ["340.6", "i want to add that to a "], ["343.25", "so the 2 is returned "], ["344.95", "it gets passed back up here "], ["346.18", "it gets added to that a "], ["348.32", "those two pieces come to there "], ["351.165", "and what was that doing "], ["352.35", "that was saying  give me a return of those two values to"], ["355.45", "the computation that was waiting here "], ["358.73", "so  in fact  the 4 and the 2 get added"], ["362.01", "together to give me 6 "], ["363.49", "and what was that doing "], ["364.37", "it says  i'm now done because that procedure said return"], ["367.39", "that value as the overall value "], ["369.55", "and that's going to get passed back up as the final value "], ["373.53", "cool "], ["374.89", "a little slow in our computation but really cool "], ["378.2", "and  in particular  let's see what we can deduce from this "], ["381.37", "each recursive call of a function creates its own"], ["384.3", "environment  with a local scoping of variables "], ["387.25", "so evaluating the body of the function in that environment"], ["390.2", "is going to be very clear as to which value of a and b it's"], ["393.28", "using  or any other variable that it's using "], ["396.05", "secondly  the bindings for variables in"], ["398.01", "each frame are distinct "], ["399.94", "and you saw that "], ["400.48", "i had a different frame for each one of them "], ["402.65", "and those bindings are not changed when we're doing the"], ["405.91", "recursive call "], ["406.89", "they are set up as we make the call "], ["408.9", "that is  i'm going to compute a new value of b  making it in"], ["411.59", "this case b minus 1  in order to bind it in the frame "], ["414.72", "but i'm not changing bindings in other frames when i'm"], ["417.59", "within one frame "], ["418.74", "i don't have access to them "], ["420.58", "and finally we can see that the flow of control can"], ["422.95", "naturally pass back to an earlier frame once the"], ["425.52", "function call returns its value "], ["428.25", "so  finally  you can also see that inherently this recursive"], ["433.7", "call to a function  if done right  has the equivalent of"], ["437.12", "reducing a state variable "], ["438.64", "we saw how each instance  each frame  had a different value"], ["442.27", "of b  that got smaller and smaller until we got down to"], ["445.07", "the base case "], ["446.29", "so we know that this is  in fact  going to ground out "], ["448.79", "it's going to complete its computation "], ["450.72", "that's great "], ["452.29", "so hopefully this gives you a better sense of how  in fact "], ["455.53", "the rules of evaluation allow a recursive thinking of a"], ["458.47", "problem to create a very nice version of the code "]], "jGQZlWWXBQQ": [["3.6", "the introduction to computer science and programming "], ["6.9", "it's odd to have both of those terms in the title  but both"], ["9.94", "of them are important "], ["11.22", "this course is going to be not just about teaching you how to"], ["14.23", "program a computer  how to tell the computer instructions"], ["16.93", "that it can understand "], ["18.48", "it's also going to be really important to create within you"], ["21.44", "a capability to think computationally "], ["24.24", "so our goal is to let you become skillful at not only"], ["27.1", "getting the computer to do something  but to do that"], ["29.79", "thing that you want it to  to get it to solve a problem "], ["33.06", "by the end of this course  we hope that your first instinct"], ["35.69", "when faced with any interesting challenge is to"], ["38.13", "first think about how could i capture that challenge  that"], ["41.07", "problem in an algorithmic or mechanical description of"], ["44.35", "steps such that i could get the computer to do"], ["47.05", "the work for me "], ["47.97", "if you can do that  it's going to give you a great deal of"], ["50.94", "advantage as you face any kind of problem "], ["53.18", "and those are the skills that you're going to see throughout"], ["55.12", "this course "], ["56.19", "now if our goal is to have you learn how to get a computer to"], ["60.69", "do something for you  how to talk to the computer  how to"], ["63.09", "think algorithmically "], ["64.519", "1 of the questions we can ask is  so what's the computer"], ["67.14", "going to do for us "], ["68.22", "what's it actually good at "], ["70", "that seems like probably an odd question "], ["71.85", "after all  we know computers could do a ton of things "], ["74.87", "but it's still important to go back to a very fundamental and"], ["77.47", "basic point "], ["78.75", "what does a computer do "], ["80.68", "in fact it does 2 things and 2 things only "], ["83.64", "it performs some calculations  and it remembers results so"], ["87.77", "that it can reuse them "], ["89.31", "now you'd say  ok  so it performs calculations "], ["92.39", "that seems fine "], ["93.47", "but what kinds of calculations "], ["95.99", "well  it turns out that every computer comes with a simple"], ["99.23", "set of primitive calculations  things that we call built in "], ["102.22", "they're provided by the manufacturer as the basic"], ["104.62", "elements that a computer could use "], ["106.2", "we'll see some examples of that shortly "], ["108.35", "if that's all we have  that's pretty limiting "], ["111.49", "so a key thing  as we go through the material in this"], ["114.12", "course  is to learn how we can create our own methods for"], ["117.68", "computing something  how we can capture the computational"], ["120.95", "way of thinking about something in a manner that"], ["123.06", "could be used by the computer  and to do it in a way whereby"], ["126.16", "the computer can abstract that "], ["128.28", "by that we mean that the computer can figure out how to"], ["131.05", "take what you tell it and turn it into something that it can"], ["133.95", "now treat as if it were a primitive  something that was"], ["136.16", "provided by the manufacturer  and reuse that throughout its"], ["139.4", "computations "], ["140.48", "so our computers are going to do calculations for us  using"], ["143.52", "a set of built-in primitives  plus things that we add "], ["146.07", "now you might ask  gee  is that enough "], ["149.21", "if it turns out that a computer can just perform"], ["151.65", "primitives calculations  it's not sufficient "], ["154.86", "well  as i'm sure you already realize  modern computers can"], ["157.95", "perform most calculations incredibly quickly "], ["160.845", "and so one question is if we can do them fast enough is"], ["164.14", "that sufficient to do interesting things "], ["166.64", "let's look at both parts of that "], ["168.49", "first of all  how quickly does a modern"], ["170.52", "computer actually run "], ["172.65", "well  let me give you a simple little thought example "], ["174.99", "if i were to take a little gooseneck lamp and put it"], ["177.1", "right here  a foot above my desk  and i were to time"], ["180.86", "things perfectly so that as i hit the switch on the lamp i"], ["184.5", "hit a key on my computer and started them both up at"], ["186.88", "exactly the same time  in the length of time it takes the"], ["190.23", "light to go from the lamp to the desk your computer will"], ["193.79", "execute two operations "], ["196.576", "that's amazing "], ["197.846", "it does two operations  two of those primitive operations in"], ["201.15", "the amount of time it takes light to go basically a foot "], ["204.71", "unbelievable "], ["206.29", "here's another way of thinking about it "], ["207.495", "imagine i take a simple child's rubber ball and i"], ["211.09", "suspend it about a meter off the ground and i drop it "], ["214.96", "if i let it drop  by the time it hits the ground  assuming"], ["219.21", "gravity behaves normally  your computer will have executed"], ["223.07", "1 000 000 000 operations "], ["225.61", "unbelievable "], ["226.82", "1 000 000 000 operations by the time that"], ["228.38", "ball hits the ground "], ["230.29", "now  that suggests that in fact these computers are"], ["233.46", "incredibly fast "], ["234.36", "and even though they're computing very simple things "], ["236.37", "they're doing incredibly quickly "], ["238.24", "they are "], ["240.19", "we say computers do simple operations "], ["241.73", "we also said that they have some storage "], ["244.31", "so how big is the storage inside of a computer "], ["247.07", "well  every element of storage is called a byte "], ["250.28", "and if we were to assume that a byte weighed 1 ounce  "], ["254.23", "i know bytes don't really weigh ounces  but assume they"], ["256.57", "weigh 1 ounce "], ["257.619", "a typical computer has hundreds of"], ["260.14", "gigabytes of storage "], ["262.41", "and that says if each one of those bytes weighs 1 ounce a"], ["266.39", "computer would be able to store the equivalent of"], ["268.77", "300 000 000 tons of storage "], ["274.11", "ok "], ["274.32", "they don't really store it that way "], ["275.63", "but you get the idea "], ["277.15", "incredible amount of storage  can remember a lot of things "], ["279.56", "and incredibly quick in terms of doing the computation "], ["282.9", "so  that sounds really good "], ["285.88", "the question is if they're only primitive operations is"], ["288.95", "that enough "], ["289.92", "are these simple calculations sufficient "], ["291.77", "well  they're going to do a lot as we see "], ["293.18", "but we're also going to see that they're not quite enough"], ["295.62", "to do everything we'd like "], ["297.19", "let me give you 2 examples "], ["299.22", "i'm sure all of you have gone to the world wide web to look"], ["301.265", "up a piece of information "], ["302.22", "you've searched the web to try and find things that you'd"], ["304.8", "like to know about "], ["306.58", "the question is if a computer is just doing this the"], ["308.87", "straightforward way how quickly would"], ["311.04", "it search the web "], ["312.19", "well  it turns out there are about 45 000 000 000"], ["315.26", "searchable pages on the web at the moment "], ["318.03", "if we assume that it takes about 1 000 words  or there"], ["321.82", "are about 1 000 words per page "], ["323.55", "some  of course  are much more than that  some of less  but"], ["325.38", "about a thousand words per page "], ["327.07", "and just for sake of argument  we're going to assume it takes"], ["329.18", "about 100 operations per word to find the word on the page"], ["333.4", "and to decide it's the right thing "], ["335", "100 is actually high "], ["335.96", "let's make it a little less "], ["336.49", "let's just assume it's only 10 operations per word "], ["339.2", "how long does it take to actually execute that search "], ["342.11", "well  we can do the math "], ["343.34", "you can grind it through "], ["344.4", "you have 45 000 000 000 pages "], ["347.73", "you have that many operations "], ["348.59", "you know how quickly we're doing these actual operations "], ["351.27", "if you put it all together  what you find is it's going to"], ["354.05", "take you about 5 2 days to find something on the web "], ["361.03", "that's a slow browser "], ["362.45", "that's not going to work very well "], ["364.58", "and that basically is giving us a hint that even with"], ["367.02", "really fast computers we have to be smarter "], ["368.85", "let me give you a second example "], ["371.19", "playing chess  something that's seen as a very"], ["373.24", "difficult task "], ["374.355", "it's impressive that about 10 or 15 years ago a computer"], ["377.07", "program actually beat the world"], ["378.31", "champion in a chess match "], ["379.9", "and 1 of the questions is  well  ok  is it just because"], ["382.82", "the computers are really fast "], ["384.5", "well  we can look at this two ways "], ["385.68", "in a typical chess game  there are about 35"], ["388.25", "moves at any one time "], ["390.26", "and so the question you could ask is to say  ok  if i want"], ["393.41", "to have my computer program look ahead 6 moves  3 moves by"], ["397.04", "me  3 moves by my opponent  how many different options are"], ["400.9", "there if there are about 35 moves each "], ["403.08", "and the answer is about 1 8 billion different sets of the"], ["408.04", "chess board that i'd have to look at "], ["409.91", "if i can check each move out in about 100 operations per"], ["413.77", "move  then that says it's going to take me about a half"], ["416.79", "hour to actually look at each move "], ["419.42", "that's pretty slow "], ["420.68", "and this is pointing to a problem that"], ["421.94", "we want to get at "], ["423.02", "and the problem is that  yes  computers are really fast  but"], ["426.65", "we need good algorithmic design as well "], ["429.18", "to deal with interesting problems  we need algorithms"], ["432.43", "that are clever  are intelligent  are smart about"], ["435.38", "how they actually do the work "], ["436.94", "and that's a lot of what we're going to talk about this"], ["439.12", "during this term "], ["440.34", "by the way  we also said space was a big issue "], ["442.83", "and we got a lot of space in the computer "], ["444.615", "if you go back to the chess example  you can ask the"], ["447.52", "following question  how many different games"], ["449.73", "are there in chess "], ["451.236", "experts will tell you there about 10^123 different chess"], ["455.88", "games that are possible "], ["457.61", "is that too big for storing in your computer "], ["459.75", "well there are only 10^80 atoms in"], ["463.93", "the observable universe "], ["465.7", "so we can't just store away all the games"], ["467.75", "and look them up "], ["469.05", "and both of these are pointing to why we're going to use this"], ["471.08", "course to actually learn about thinking algorithmically "], ["474.28", "now this suggests it's just a matter of putting together"], ["478.02", "enough speed and enough smartness "], ["479.9", "but one can be a little bit more distinct and say  are"], ["481.91", "there actual limitations to what we"], ["483.67", "can do with the computer "], ["485.44", "and in fact despite its speed and its size and the"], ["488.01", "cleverness of the algorithm  our computer still has some"], ["490.34", "limitations "], ["491.01", "here are a couple of examples "], ["492.88", "first of all  there are some problems that"], ["493.98", "are just too complex "], ["495.78", "we don't have enough speed  enough storage "], ["497.7", "and they may get tackle as things improve "], ["499.94", "but examples here would be things like predicting weather"], ["502.17", "at a very local scale "], ["503.45", "i'd love to know what's exactly going to happen"], ["505.54", "outside my window for the next half hour or next"], ["507.64", "hour or next 3 hours "], ["509.28", "the size of the problem simply too big for a computer to be"], ["511.89", "able to model well enough and solve in a"], ["513.97", "reasonable amount of time "], ["515.512", "it turns out some of these complex problems"], ["517.26", "actually help us "], ["518.6", "modern cryptography  the way in which information is"], ["521.73", "securely transmitted across the net  relies on having some"], ["525.93", "problems that are simply too difficult to compute and "], ["528.55", "therefore  too difficult to break the code "], ["530.64", "so we actually get some benefits about the problems"], ["532.51", "that are too complex "], ["534.146", "but as we're also going to see later on the course  there are"], ["536.74", "some problems that are just fundamentally impossible to"], ["539.98", "compute no matter how big the computer is "], ["542.85", "and some of those are really heavy "], ["544.495", "here is one example  being able to predict whether a"], ["547.7", "piece of code will always stop with an answer for any input "], ["552.48", "by that i don't mean just you run it and see if it stops "], ["554.74", "being able to write a piece of code and then have some other"], ["557.75", "piece of code inspect it to say  this will always work "], ["560.64", "it will always stop  and it will always give us an answer "], ["562.98", "this turns out to not be possible to solve "], ["565.78", "and this is known as turing's halting problem "], ["569.64", "and we'll talk briefly about that later on in the term "], ["573.08", "but it says that there are some problems that are simply"], ["575.47", "too hard to solve period "], ["578.26", "nonetheless  in this course  we're going to start talking"], ["580.47", "about how do we think algorithmically and get the"], ["582.69", "computer to do interesting things for us "]], "Q-rY8DIwYgg": [["0.33", "the social standards on the discussion forum are going to"], ["2.92", "vary from class to class "], ["4.83", "but there are a few common trends "], ["7.2", "first of all  before you start a new discussion  make sure"], ["11.32", "that there is not already a thread talking about the issue"], ["14.4", "that you wanted to address "], ["16.07", "if you are trying to be polite in conventional conversation "], ["19.16", "you wouldn't walk into a crowded room and expect"], ["22.2", "everyone to repeat and summarize the conversations"], ["24.8", "that had already taken place for your benefit "], ["28.44", "instead  you would listen to people talk  get an"], ["32.04", "understanding of what has already been said  and then"], ["35.5", "participate in context "], ["37.85", "similarly when you come into the discussion forum  you"], ["41.33", "should search for what people are already saying and make"], ["44.41", "sure that what you are saying fits in context "], ["47.85", "also  please bear in mind that the discussion forum contains"], ["51.42", "people of many different educational backgrounds "], ["54.48", "nationalities  races  genders  and sexual orientations "], ["60.15", "we would love for you to get to know each other  but please"], ["63.01", "keep your tone respectful "], ["65.129", "we don't restrict access to the forum very often  but we"], ["68.22", "do reserve that right for extreme cases of people who"], ["71.375", "are causing the forums to become unuseful "]], "twvmnuMYTQk": [["0.904", "eric grimson  now  we've seen recursive functions "], ["3.76", "we've seen this idea of inductions  a way of showing that"], ["6.56", "these functions work "], ["7.4", "and we've seen this notion of recursion as breaking a problem down"], ["10.96", "into a simpler version of the problem plus some other work "], ["14.52", "we're going to use that tool a lot "], ["15.8", "it's a powerful tool for taking complex problems and capturing them in"], ["19.5", "a way that is easy to think about "], ["21.3", "so let's look at some examples "], ["23.25", "in the classic example to start with is to compute factorial "], ["26.77", "factorial in math is written as n followed by an exclamation point  said"], ["31.22", "verbally as n bang "], ["33.04", "and factorial is basically the product of the integers from 1 times 2 times 3"], ["36.76", "all the way up to n "], ["38.59", "how would we think about solving this recursively "], ["41.82", "well that's pretty straightforward  right "], ["44.24", "i need a base case "], ["45.16", "a simple case is if n is equal to 1 "], ["47.89", "1 multiplied by itself  or just 1 is 1 "], ["50.43", "that's simple "], ["51.8", "to get the recursive case  let's use that same thinking "], ["56.47", "to get the recursive case  what do i have "], ["59.01", "i want a simpler version of the same problem "], ["60.98", "in effect  right there that is n minus 1 factorial "], ["67.47", "so recursively i would say if i can get n minus 1 factorial  then to get n"], ["72.58", "factorial i'd simply take that value and multiply it by n "], ["76.41", "and that gives me that reduction exactly like i saw before "], ["80.23", "fantastic "], ["81.44", "there's a recursive definition factorial "], ["84.47", "let's capture it in some code "], ["87.17", "and  in fact  to do it let's do both an iterative version"], ["90.06", "and a recursive version "], ["91.74", "so the iterative version of factorial has the form we'd expect "], ["95.36", "i need some state variables "], ["96.62", "one of them is going to be just the parameter n that i'm passing in "], ["99.53", "and the other one i'm going to call result "], ["101.05", "i need to keep track of the computation as i go along "], ["104.11", "i'm going to set a result initially to 1 because i'm going to do successive"], ["107.47", "multiplications "], ["108.87", "and then the iterative version basically says if you start off with n"], ["113.6", "that's bigger than my base case  or the stopping point  rather  what do i"], ["117.02", "want to do "], ["117.53", "i'm going to take my current value result  which is 1  multiply it by n "], ["121.71", "and store it away "], ["123.23", "and then i'm going to reduce n by 1 "], ["125.22", "there are those update equations that are updating the state variables "], ["128.52", "i go around again  n is now one smaller "], ["131.31", "and again  i take the current value result  which at this point was n "], ["134.68", "i multiply it by the new value of n  which is n minus 1 "], ["137.61", "and i update it "], ["138.64", "i reduce n by 1 "], ["140.47", "and i keep doing this "], ["141.4", "and you can see that i want to start by taking n  n times n minus 1  n"], ["145.43", "times n minus 2  and i'll keep doing that until i get down to a place where"], ["149.62", "n is zero  in which case i stop and i return the result "], ["154.75", "great "], ["156.18", "what about the factorial version recursively "], ["158.86", "well  factr is nice and crisp "], ["161.56", "here it is "], ["162.9", "it just says  if n is equal to 1  if you're in the base case  just return"], ["168.59", "that value "], ["169.74", "here i said return n  i could have said return 1  because i know it's"], ["172.04", "going to be the same thing "], ["173.69", "otherwise  get the solution to a slightly smaller problem by just"], ["179.14", "recursively calling factr  multiply it by n  and just return that result "], ["185.1", "beautiful code "], ["185.96", "nice and clean and crisp "], ["187.47", "and you can see that it gives you a very clear sense"], ["189.63", "of exactly the stages "], ["191.48", "my base case  my recursive case "], ["193.71", "my recursive case is a recursive call plus one other operation  which is to"], ["197.31", "do multiplication "], ["198.9", "let's see if it does the right thing "], ["201.02", "so in idle  i've got a version of both pieces of code  then let's try first"], ["207", "theater diversion of factorial "], ["208.07", "and just to be careful  let's make sure it does the right thing on the"], ["210.8", "base case  or n is equal to 1 "], ["212.73", "if it does then let's give it the bigger one "], ["215.85", "i happen to know that 3 times 2 times 1 ought to be 6 "], ["218.74", "so there we go "], ["220.31", "and if i give something a little bit bigger  wow  it actually computes"], ["225.24", "factorial of 25 "], ["226.62", "pretty quickly "], ["228.42", "what about recursive version "], ["229.83", "well let's test the same ones "], ["231.9", "on 1 it does the right thing "], ["234.38", "on 3 it does the right thing "], ["238.77", "on 25 it does the right thing "], ["244.02", "and you may notice this funny little form on the screen there where it's"], ["246.38", "got an l at the end "], ["247.27", "this is just telling us that python's got such a big number  it's"], ["249.78", "representing it in what's called a large format "], ["252.25", "don't worry about it "], ["252.97", "it just says  i got a really big number "], ["254.41", "i gave it back to you "], ["255.81", "so we didn't look at stepping through it "], ["258.37", "you can go do that "], ["259.23", "but you can see that the recursive version stops  computes the right"], ["262.63", "answer  and the code itself is nice and crisp "], ["267", "ok  let's look at another example "]], "WqKqfr_tX0Y": [["0.59", "eric grimson  so we've convinced ourselves that linear"], ["2.46", "search really is linear "], ["4.66", "it says using indirection  if i've got a list of elements  even if they're"], ["7.7", "arbitrarily complex  because of indirection i can get to any element"], ["10.96", "in constant time "], ["12.36", "and therefore the search is linear because at worst  i've got to look at"], ["16.079", "every element once "], ["18.33", "still kind of annoying if list is long "], ["20.13", "so can i do better than o len l)) or linear search for search "], ["27.19", "well  the answer is if i don't know anything about the values of the"], ["30.01", "elements  no "], ["31.81", "if they're arbitrary elements and i have no structure to the list  i'm"], ["35.27", "going to have to look at every element at least once in the worst case  in"], ["38.68", "order to determine that something's there "], ["40.33", "so i'm stuck with this "], ["42.4", "but in some cases i can do better "], ["46.67", "and in particular  what if the list were ordered "], ["49.53", "suppose that the elements were sorted in ascending order "], ["53.35", "or a simple way to think about it is they're numbers  but they could be"], ["56.72", "more complex things "], ["57.34", "i've got some way of deciding how to order them in sequence "], ["60.77", "in that case  i could improve things "], ["62.83", "and here's a simple search algorithm "], ["64.23", "it says given a list l and an element e  i'm going to walk through the list "], ["69.2", "so for i going from 0 all the way up to the end of the list  and i'll check"], ["72.97", "to see is the i-th element equal to e "], ["75.315", "if it is  i can stop and return true "], ["79.03", "if it isn't i'll keep going "], ["81.38", "but i can be clever "], ["82.82", "in particular  if the i-th element is greater than e  remember i said"], ["87.67", "they're sorted in ascending order "], ["89.37", "so if i get to a point in the list where that thing is bigger than the"], ["92.42", "thing i'm looking for  i know it can't be in the rest of the list  because"], ["95.59", "they're all bigger than that point "], ["97.14", "so i can stop right there and return false "], ["101.1", "if i get all the way through the list and i haven't found it  again i'll"], ["103.92", "return false because it wasn't there "], ["106.79", "nice little trick "], ["108.17", "what does it do to the complexity "], ["110.18", "well  it improves the average complexity  but it doesn't improve the"], ["113.98", "worst case "], ["114.64", "because in the worst case  i still will go all the way through the loop"], ["117.74", "until i get to this clause down here  and i return false "], ["121.39", "but even though i haven't improved the complexity right here  i can use that"], ["125.53", "idea in a slightly better way "], ["128.32", "notice what i did here is i used the idea that i knew the ordering of the"], ["131.67", "list to be able to cut off some computation right there "], ["135.02", "once i got to a point where the element was bigger than the thing i'm"], ["138.28", "looking for  i knew it wasn't in the last half of the list "], ["141.81", "let's use the same idea  but more effectively "], ["145.908", "and in fact  we've already seen this idea when we did bisection search "], ["150.93", "so we can use this idea of binary search much more effectively "], ["155.45", "in particular  we would say the following "], ["157.52", "let's pick a point "], ["158.87", "an index into the list that divides the list in half "], ["161.735", "and let's ask right there  is that the thing i'm looking for "], ["165.97", "if i am right  i'm done "], ["168.75", "but if not  then i can ask the same question i just did before  which is "], ["172.46", "is that element of the list either larger or smaller than e "], ["176.66", "but depending on that answer  i can reduce the search "], ["180.16", "so what this says is if i've got a big  long list here  i'm going to look"], ["183.63", "at the middle element "], ["185.295", "if it's the one i'm looking for  great  i'm done "], ["187.96", "but let's assume that in fact  that middle element is bigger than the"], ["191.708", "thing i'm looking for "], ["193.22", "then i can throw away this entire list  and focus on now just searching"], ["197.51", "in this remaining list "], ["198.59", "and i can do the same thing "], ["199.79", "let's look at the middle one of those and say  is that the"], ["202.05", "thing i'm looking for "], ["203.556", "if it's right  and if it is  great  i'm done "], ["205.67", "if not  for example in this case  let's assume that that element is"], ["209.08", "smaller than the thing i'm looking for "], ["211.12", "then i can throw away all of this portion of the list and refocus here "], ["216.14", "we've seen this trick before "], ["217.83", "we're going to narrow down the range of things we're looking for  cutting"], ["221.58", "in half at each stage what we have to look at "], ["224.1", "then we're taking advantage of the ordering of the list here "], ["227.11", "so this now is a new version of a divide and conquer algorithm "], ["230.44", "i'm going to break up into smaller versions of the problem  a smaller"], ["233.315", "list plus some simple operations  and the nice thing i know is that the"], ["238.42", "answer to the smaller version is the answer to the original problem "], ["241.35", "that is if i find the list or the element in a smaller list  that means"], ["246", "i found it  and it was in the bigger list "], ["247.69", "if i don't find it in the smaller list  it means it wasn't in the bigger"], ["250.76", "list  and i'm done as well "], ["253.43", "ok  let's build some code to do this "], ["256.91", "here is a very nice little algorithm for searching a list"], ["260.86", "using binary search "], ["262.58", "i've got an internal piece of code here that i'm going to use  and let's"], ["265.3", "look at what that does "], ["267.28", "it says basically  given a list  an element  and a low and a high point in"], ["273.74", "that list  a low index and a high index  what am i going to do "], ["277.97", "if high is equal to low  it says i've got a list of length 1 "], ["281.08", "so i just return the boolean value of whether that element is the thing i'm"], ["285.16", "looking for or not "], ["286.36", "that's all i've got to do "], ["288.21", "if  however  i don't have just 1 element in the list  i've got more"], ["292.44", "than that  i'm going to find a midpoint "], ["295.14", "and in particular  i'm going to calculate the midpoint by taking the"], ["298.55", "value of the low end of the list  or low end of the range in the list  and"], ["303.67", "the difference between high and low divided by 2 "], ["305.71", "so i'm taking the range that's left  cutting it in half  and adding it to"], ["309.19", "the index of the starting point "], ["310.38", "that gives me a new midpoint right there "], ["313.58", "and then what do i do "], ["315.35", "i check that point "], ["316.715", "if it's what i'm looking for  i'm done "], ["319.66", "otherwise  i check to see is the value of the list bigger than the thing i'm"], ["324", "looking for "], ["324.97", "and if it is  i'm going to call recursively search again with the same"], ["329.22", "low point  but a reduced high point "], ["333.42", "and that was what i just diagrammed earlier "], ["335.16", "it says if in fact the thing i'm looking for is less than the thing i"], ["339.84", "just checked  i can throw away the entire right half of that list "], ["344.92", "on the other hand  if it's less than  then i throw away the lower half of"], ["348.595", "the list  and i compute a new low point "], ["352.61", "and i just keep calling recursively until i either run out of things  or i"], ["357.2", "find the thing i'm looking for "], ["359.74", "to start this up  i'm going to check to make sure that in fact i have a non"], ["363.525", "empty list "], ["364.39", "if the list is empty  nothing's there  the element can't be in"], ["367.01", "it  i return false "], ["368.27", "otherwise i'll call binary search "], ["372.06", "notice one little subtlety here "], ["373.34", "i'm reducing midpoint by 1 there  and increasing midpoint by 1 there to make"], ["378.35", "sure that i don't look at the same element every time "], ["381.47", "it's a minor nuance  but it's going to improve things "], ["384.36", "here's my binary search "], ["385.6", "it's cutting down the list in half at each stage by either taking the upper"], ["389.65", "half or the lower half based on this test right here "], ["395.74", "ok  i want to answer two questions "], ["398.915", "the first one is does this actually work "], ["401.11", "does the recursion halt "], ["403.43", "we've talked about this before when we talked about recursive functions  and"], ["406.2", "i want to remind you a nice way to deal with this is to create what's"], ["409.48", "called a decrementing function "], ["411.71", "so what does that mean "], ["412.96", "this is a function that maps the values of the formal parameters to a"], ["417.61", "non-negative integer "], ["419.44", "in some sense  this is giving us the size of the problem "], ["424.51", "and if i can find a decrementing function  something that says  given"], ["428.22", "the values of the parameters  i will take those values and map it into an"], ["431.68", "integer  that decrementing function has to have two other properties "], ["435.8", "first is  when the value of that function is less than or equal to 0 "], ["439.68", "the recursion's going to terminate "], ["441.96", "and the second one is  for each recursive call  the value of that"], ["445.76", "function is strictly less than the value on entry to the"], ["449.62", "instance of the function "], ["450.82", "in other words  the decrementing function will have some value when i"], ["452.89", "start the recursive call  and when i return from the"], ["455.94", "recursive call  it's smaller "], ["458.78", "said very simply  this decrementing function should capture the size of"], ["462.68", "the problem  and i want it to be the case that that function is smaller on"], ["467.13", "the recursive call  and smaller on the next recursive call  and when it gets"], ["470.65", "down to or below 0  the recursion terminates "], ["474.08", "again  a lot of words "], ["475.43", "for this particular case  the function's very simple "], ["477.47", "it's just high - low  right there "], ["480.4", "high - low is telling us the range of the list still to be searched "], ["484.72", "and let's check it out "], ["486.82", "it's at least 0 the first time it's called "], ["490.656", "ok  that's good "], ["493.37", "so it's going to be something that's a non-negative integer "], ["497.83", "when it gets down to being exactly 0  when high is equal to low  oh  that"], ["501.92", "said i have no recursive call  and i just return a value "], ["505.2", "ok  so that's done "], ["506.965", "and otherwise  what's happening "], ["509.3", "well  it's going to either halt or recursively call with the value halved"], ["512.309", "each time because at each case  either high is decreased by half or low is"], ["517.84", "increased by half  and so it's going to reduce the value in each time "], ["522.65", "so by finding that decrementing function  i've just proved that my"], ["526.07", "recursive procedure actually terminates "], ["529.29", "great "], ["529.95", "so i've got something that does the search properly "], ["532.34", "again  another way of thinking about this is this is just the range left "], ["536.94", "that's why i'm reducing it each time "], ["538.39", "so i've got something that actually works "], ["540.28", "what's the complexity "], ["543.34", "well  how many recursive calls are there "], ["546.52", "why do i ask that "], ["547.71", "well  we know that the work within each call is constant  which is doing"], ["551.04", "an access to a list and comparing it  and we're doing some computations of"], ["554.23", "some simple arithmetic values "], ["556.53", "so  how many recursive calls do i have "], ["559", "well  that can be answered by saying how many times can i divide high - low"], ["563.225", "in half before it reaches 0 "], ["566.04", "and why is that important "], ["567.62", "high - low is the range of the problem left "], ["570.37", "on each recursive call  i'm splitting it in half  and i'm splitting it in"], ["573.86", "half  and i'm splitting it in half "], ["575.28", "how many times can i keep splitting something in half until i get down to"], ["579.22", "something that's basically of size 1 "], ["582.02", "and that  we already have seen before "], ["584.14", "that's log "], ["584.92", "log base 2 "], ["586.83", "basically  at each step  i'm dividing by 2 "], ["588.74", "so after log base 2 calls  i'm done "], ["593.3", "so the complexity here is o log len l)))  and that's nice "], ["600", "we know that's a very efficient algorithm "], ["601.53", "so this is much better than linear is going as the log of linear "]], "11z8XCDvC3Q": [["0.71", "eric grimson  ok  so we want to think about computational"], ["3.52", "problem solving "], ["4.62", "we want to understand  what does it mean to think"], ["6.41", "computationally "], ["7.862", "that leads to the philosophical question  so"], ["10.22", "what's computation "], ["11.52", "and like a good philosophical question  that leads to"], ["13.89", "another  deeper philosophical question "], ["16.265", "to answer that question of what's computation  let's"], ["18.94", "start by asking the question  what is knowledge "], ["22.27", "and  as we're going to see  we can divide"], ["23.81", "knowledge up into 2 parts "], ["25.49", "there's declarative knowledge  which we can think of the"], ["27.89", "statements of fact "], ["29.41", "and there's imperative"], ["30.32", "knowledge  or how to's methods "], ["33.13", "statements of facts give us true  but  as we'll see  they"], ["36.74", "don't necessarily help us think about how to find new"], ["39.01", "information "], ["40.25", "imperative knowledge  how to methods or recipes  give us"], ["43.45", "ways of finding new information  and that's going"], ["45.85", "to be really valuable to us "], ["47.96", "now  to look at this  let's look at an example "], ["51.65", "so  what do we mean by declarative knowledge "], ["53.51", "well  here's a piece of declarative knowledge "], ["56.232", "that first statement says  the square root of a number x is a"], ["60.54", "number y such that y * y = x  "], ["63.75", "you know that's true from high school algebra "], ["66.78", "it's a statement of truth "], ["68.82", "it tells us something about how to decide whether a"], ["73.13", "particular number is a square root or not  but can we use"], ["76.4", "this to actually find a square root "], ["78.77", "and the answer is no "], ["80.14", "if we have a number x equal to 25 and we're trying to find"], ["84.13", "the square root of that  and somebody gives us a guess y ="], ["87.18", "5  we can use this statement to test to see if 5 * 5 = 25  "], ["92.27", "which it does "], ["93.35", "but it doesn't tell us how to find the guess "], ["95.68", "so declarative knowledge  which is what much of"], ["97.92", "knowledge is based on  isn't what we need "], ["100.48", "we want a different kind of knowledge  and for that "], ["104.32", "fortunately  we have imperative knowledge "], ["107.59", "as we said  imperative knowledge is how to kinds of"], ["110.15", "knowledge  or methods or recipes for finding something "], ["114.17", "and here's a recipe for deducing square root "], ["117.185", "it's actually attributed to heron of alexandria  although"], ["119.75", "there's some debate as to whether he was the original"], ["122.45", "creator of this algorithm  but it dates from the first"], ["124.95", "century ad "], ["126.53", "and you can see the description here "], ["128.56", "description says if i want to find the square root of some"], ["130.889", "number x  i'm going to start with a guess "], ["132.85", "i'll call it g "], ["134.24", "i'm going to take g and multiply it by itself and look"], ["136.89", "if that result is close enough to x "], ["139.37", "if it is  i'm going to stop  and say that g is the answer "], ["143.19", "otherwise  i'm going to make a new guess by averaging g and"], ["146.96", "x/g   and using this new guess  which i will call g"], ["150.9", "again  i'm going to repeat the process until we get something"], ["153.79", "that's close enough "], ["155.87", "notice  this is a mechanical set of steps and it has some"], ["159.17", "basic forms "], ["160.48", "right here there's a test "], ["162.88", "it's going to let us know when we're done "], ["165.48", "when we're close enough "], ["167.192", "if that test isn't satisfied  then there's some simple"], ["170.47", "calculations  like here  that tells us what to do "], ["175.383", "and then  finally  there's a flow of control  or a loop "], ["180.26", "that tells us how to keep executing the same sequence of"], ["184.44", "operations until we get  in fact  to a"], ["186.69", "place where we're done "], ["188.28", "this is something that tells us how to find a square root "], ["192.17", "this is imperative knowledge and this is what we want "], ["195.5", "ok  let's try it out "], ["196.65", "here's a little description of that "], ["198.08", "let's see what happens if we were actually to do it "], ["200.64", "so i'm going to do a simple little simulation "], ["202.89", "i want to find the square root of 25 "], ["204.34", "and  yeah  i know the answer is 5  but let's think about"], ["207.28", "what might happen here "], ["207.94", "i'm going to start with a guess and i'm just going to"], ["209.69", "initially guess 3 "], ["212.3", "heron of alexandria's algorithm says"], ["214.04", "multiply 3 by itself "], ["216.08", "that  of course  gives me 9 "], ["217.884", "is 9 close enough to 25 "], ["220.59", "i don't think so  so let's get x/g   which is about 8 33 "], ["227.62", "and now  let's take the average of x/g and g "], ["231.48", "so we add g and x/g   take the average of"], ["234.56", "that  and we get 5 67 "], ["238.41", "and then our little recipe says take"], ["240.67", "that and do it again "], ["242.09", "so this now becomes my new guess  5 67 "], ["247.92", "i multiply those together "], ["249.35", "i happen to know that comes out to be about 32 5 "], ["252.363", "i've gotten closer to 25  but it ain't there yet  so that's"], ["255.71", "not close enough "], ["256.85", "again  let's take x divided by this g which turns out to be"], ["260.829", "about 4 41  and then i take g and x/g and i average them "], ["267.67", "and i get 5 04 "], ["270.98", "and my algorithm says  my recipe says  take"], ["274.46", "this and do it again "], ["277.62", "5 04 multiplied by itself is about 25 4  and i'm going to"], ["282.66", "say  you know what  that's close enough  so my little"], ["285.11", "recipe says there's the answer "], ["287.92", "not perfect  but close enough "], ["290.72", "so  heron had it right "], ["292.49", "this looks like a pretty good algorithm "], ["293.98", "this is a way of describing a method for doing something "], ["297.12", "and that idea  that notion of a recipe  is something we're"], ["300.41", "going to use a lot "], ["301.81", "so we can think of algorithms as being recipes  sequences of"], ["305.1", "mechanical steps for doing something "], ["307.95", "we put that analogy to a little bit more use  we can"], ["310", "see that recipes have much of the same form  real recipes "], ["313.19", "imagine i want to make some custard "], ["315.3", "here's my recipe "], ["316.11", "i'm going to take all the ingredients of the custard "], ["317.7", "that mixture  put it into a pot over some heat  and i'm"], ["320.72", "going to stir it "], ["322.48", "as i stir it  every once in a while  i'll dip a spoon into"], ["324.84", "the custard  pull it out  and run my finger across the back"], ["327.75", "of the spoon "], ["329.04", "if the spoon is clear  then i'm done and i'm going to"], ["331.62", "remove the custard from the heat and let it cool "], ["334.48", "if not  i'm going to repeat "], ["336.3", "and notice what we have here "], ["337.68", "again  we've got a test  right there "], ["342.05", "and we've got a way of  in fact "], ["344.02", "changing the flow of control "], ["345.39", "so  normally  the flow runs this way  but based on that"], ["350.37", "test  we have a way of going back up and"], ["353.45", "continuing the path "], ["354.88", "and this pattern is something we're going to repeat a lot "], ["357.7", "so  you want to capture recipes and we need to figure"], ["361.38", "out how to get the computer to do that for us  which is what"], ["363.82", "we're going to talk about next "]], "1jnF2wBDvHg": [["0.485", "professor  we've now built an abstraction for a graph "], ["3.89", "set of nodes  set of edges  particular representation for capturing them "], ["8.06", "especially that idea for every node  the edges basically tell us what are"], ["12.51", "all the children of that node "], ["14.03", "nodes that we can reach in one step "], ["16.329", "and we built a simple little graph with nodes labeled zero through five "], ["20.55", "our real goal is to understand how do we find paths through the graph "], ["23.77", "how do we find solutions "], ["25.71", "suppose in my simple little graph  i'd like to find the shortest path from"], ["28.58", "node zero to node five "], ["31.49", "first of all  i'd have to say what  shortest  means "], ["33.13", "it could just mean the fewest number of steps  the fewest number of edges i"], ["37.03", "have to walk through to get from zero to five "], ["39.88", "if i've got weights on the edges though  i might want to"], ["42.09", "actually use those "], ["43.02", "they might be the minimizing the sum of the weights  the cost if you"], ["46.08", "like  to get from zero to five "], ["48.08", "the question is how do i find that graph  or rather how do i find that"], ["51.95", "path through that graph "], ["54.52", "well there are a lot of techniques for this "], ["56.74", "and a very common one is something known as depth-first search "], ["61.51", "we're going to talk about the words on this slide in a second "], ["63.33", "but let me give you the intuition  the visualization for you "], ["66.2", "i'm going to start off at some root node "], ["68.08", "i could be node zero "], ["69.29", "i want to get to a goal node "], ["71.18", "node five down here somewhere "], ["73.72", "from that root node  i know the children "], ["77.56", "that is i know in one step what other nodes i can get to  what are the edges"], ["81.76", "that lead from there "], ["82.74", "so it might go from zero to one  zero to two  maybe to some others "], ["86.29", "i think yours just goes from zero to one and zero to two "], ["89.05", "so the idea is i'm going to start at the root node  and i'm going to look"], ["92.22", "at what are the paths that lead out of there "], ["93.93", "i've got two of them  going to one and two "], ["96.31", "i'm going to take the first of those  the path that goes from zero to one "], ["100.01", "and i'm going to say what are the children of one "], ["102.96", "it might be zero and two "], ["105.04", "and i'm going to say ok  let me take that first path and extend it by"], ["109.19", "adding from this node all these steps that i can go in one place to get to a"], ["114.32", "new set of paths "], ["115.32", "so now i've got a set of paths "], ["118.17", "i'm going to keep doing that "], ["119.11", "take the first one  take that end node  say what are the children i can"], ["124.02", "reach in one step  and keep extending the set of possible paths "], ["128.86", "hopefully  eventually  i'm going to get to the goal node "], ["131.05", "when i do  i'm done "], ["131.86", "and i know exactly the path that got me there "], ["134.93", "if i get to a node and there aren't any additional children  well i just"], ["138.83", "throw that away and i backtrack to the previous place i was and look at the"], ["143.2", "next set of options "], ["145.74", "ok  we can capture that in words "], ["147.67", "the idea is we're going to start at the root node "], ["151.13", "this set up paths  initially  are basically just where i am  just"], ["155.14", "starting at the root node "], ["156.23", "i haven't taken any steps "], ["157.86", "from that node  i then do the following "], ["160.72", "i take the path that got me there "], ["162.76", "in the case of root node is nothing "], ["164.73", "and i extend that path by one step  going to each of the possible children"], ["169.46", "of the current node "], ["171.41", "so i take the current path "], ["172.94", "then i replace it in my set with this set of new paths  that each go one"], ["176.77", "step further "], ["177.79", "so i add these paths to the set of paths at the front of the set "], ["182.12", "i then take that first path at front of the set and i do the same thing "], ["187.312", "and recursively repeat that "], ["189.37", "and i'm going to keep doing that until hopefully  i get to the goal node "], ["193.2", "if i get to the node in a path which has no children  then i just go on to"], ["198.08", "the next path "], ["199.7", "and i'll keep doing that until i either reach the goal  or"], ["202.55", "i run out of paths "], ["204.46", "so there's a description "], ["205.67", "we're going to build code in a second "], ["207.37", "but let me give you a visualization of this "], ["209.22", "i'm going to do that visualization using that simple graph i built in the"], ["213.07", "last lecture segment "], ["214.42", "i'm going to go from a root node of zero "], ["217.42", "and i'm going to build a different kind of graph called a tree that's"], ["220.82", "going to let me explore the paths through the graph "], ["223.76", "so from node zero  i've got two possibilities "], ["226.84", "i can either go to node one or to node two "], ["228.78", "so i'm going to add two new paths to my set "], ["231.55", "that path and this path "], ["233.95", "and i'm going to take the first one  which goes from zero to one "], ["237.22", "i'm not at my goal of five "], ["239.14", "so i'm going to say what are the children of one "], ["241.58", "turns out it's got zero and two as children "], ["243.98", "so i'm going to replace this path with two paths "], ["247.18", "that one and that one "], ["249.14", "i can go from zero to one to zero  or zero to one to two "], ["252.08", "and now i've got three possible paths to explore "], ["254.745", "i'll take the first of those "], ["256.18", "it goes from zero to one to zero "], ["257.769", "and i could say what are the children of zero "], ["259.839", "it's one and two "], ["260.89", "so i'm going to replace this path with two paths "], ["265.235", "going zero-one-zero-one or zero-one-zero-two "], ["269.75", "now i could keep taking the first path "], ["271.78", "i'm doing this depth first  the exploration of"], ["274.39", "this space as solutions "], ["275.68", "i could keep doing that "], ["277.12", "but if i do  i'm in trouble "], ["279.29", "because what is this path saying "], ["281.03", "it says go from node zero  to node one  to node zero  to node zero  to"], ["284.38", "node one  to  oh my goodness i'm just caught in an infinite loop "], ["288.84", "so i need to be just a little bit more careful about this "], ["293.4", "in a particular  i can see that by looking at the following set of steps "], ["297.36", "let's walk through it "], ["298.82", "i started off with node zero "], ["300.84", "that's my initial path "], ["302.115", "i said i can replace that path with a path that goes to each of the children"], ["306.68", "of node zero "], ["307.76", "that's one and two "], ["309.71", "now i can look at this path and say let me replace that with the path that"], ["313.63", "goes from one to its children  which are either zero or two "], ["317.75", "i now have three paths i can explore "], ["320.47", "i'm going to replace this first path "], ["322.24", "because i'm doing the first one as my option always "], ["324.13", "i say i'm not at the goal  so zero has two children "], ["326.51", "zero  one  two "], ["327.78", "so i'm going to replace that with that set of paths "], ["330.69", "but you can see that i'm now caught in this problem "], ["333.57", "and i really want to get out of that problem "], ["336.14", "how do i deal with it "], ["337.77", "well  i simply want to avoid visiting a node more than once in"], ["342.17", "a particular path "], ["343.07", "and i want to add that in a particular path "], ["349.07", "if i'm walking down a path and i'm about to go to a node that i've"], ["351.74", "already seen  that says i'm about to create a loop in my path "], ["356.4", "and that doesn't make any sense "], ["357.62", "i don't want to backtrack or retrace my steps in this particular path "], ["361.09", "so as long as i avoid visiting a node more than once in a"], ["363.85", "particular path  i'm set "], ["365.88", "and i added that phrase because of course  different paths may go through"], ["368.89", "the same node "], ["369.9", "that's fine "], ["370.83", "i just don't want to create a loop or a cycle in terms of what"], ["373.55", "i'm going to do "]], "kH_icrqrRzs": [["1.07", "john guttag  hello "], ["2.02", "my name is john guttag  and i will be delivering the next series"], ["5.12", "of lectures in 6 00x "], ["7.33", "i have some good news "], ["8.8", "we're pretty much done with introducing new aspects of python "], ["12.55", "you now know everything you need to know to write beautiful python"], ["15.88", "programs that do cool things "], ["18.52", "that  of course  raises the question  what are we going to do for the rest"], ["22.01", "of the course "], ["23.45", "mostly  we are going to look at how you can use your programming skills to"], ["27.61", "write programs that shed some light on complex situations "], ["31.62", "the first series of lecture segments are about the visual"], ["34.12", "presentation of data "], ["35.99", "we will introduce you to a python library  pylab  that provides features"], ["40.75", "that make it relatively easy to analyze data and present"], ["44.11", "the results as plots "], ["45.92", "we will cover only a small subset of what pylab has to offer "], ["50.2", "other features will be introduced later in the course "]], "O1Is56hu4EU": [["1.45", "eric grimson  we've just shown that if we have a sorted list  we can search"], ["4.89", "it much more efficiently than just linear searching  and that's great "], ["9.25", "but wait a minute "], ["10.9", "how do i get a sorted list "], ["12.13", "what if my list is not sorted "], ["13.1", "what's the cost of sorting "], ["14.84", "have i just kind of played a slick game on you here "], ["18.5", "so the question we want to ask is gee  is it better to actually sort a list "], ["23.2", "and then use the binary search to find things  or should i"], ["26.46", "stick with linear search "], ["28.37", "so let's assume that the complexity of sorting a list is just something we'll"], ["32.68", "call order of sort l  we don't know what it is here in a second  but we'll"], ["36.42", "come back to it "], ["37.86", "so then what we're really asking is  if we sort and search  we want to know"], ["42.76", "is the cost of both sorting and binary search  which is great  is that less"], ["48.86", "than just doing straightforward linear search "], ["52.26", "in other words  is it better to sort and search  or should we just stick"], ["55.065", "with the linear search "], ["57.17", "well  if we don't know anything more  unfortunately the answer"], ["59.91", "is it can't be better "], ["61.51", "because we can't possibly sort in less than linear time "], ["65.97", "why do we know that "], ["67.31", "well  we've got to look at least each element of the list in"], ["69.32", "order to sort them "], ["70.18", "that says we've got to look at at least the length of the list "], ["72.64", "so sort has to be at least linear "], ["76.08", "and if that's the case  then sounds like it isn't better to do sorting"], ["81.45", "before we do the search "], ["83.45", "but that seems disappointing "], ["85.36", "and in fact  it is because we're not completely taking into account"], ["88.66", "everything that we want to do "], ["90.73", "suppose we want to actually search a list more than once "], ["94.16", "we want to search it say  let's just say k times for some value k "], ["98.51", "then the question we want to ask is is the cost of sorting plus k searches"], ["104.46", "less than the cost of just k linear searches "], ["107.936", "and you can already see it's going to depend on k and it's going to depend"], ["112.06", "on sort  but one expects that if the sort can be done efficiently  then it"], ["117.07", "is going to be better to sort first  and then search "], ["120.15", "this is what we refer to as amortizing  or spreading out the cost "], ["123.95", "we're spreading out the cost of sorting over multiple searches "], ["127.01", "and doing something may well make this worthwhile "], ["131.84", "so now the question is how efficiently can we sort "], ["135.012", "because if we can do it well  we really may be better off"], ["138.03", "using binary search "], ["139.41", "and that takes us back to where we started  which is to say then we can"], ["142.14", "reduce a lot of search problems just to a known solution "], ["145.29", "which is binary search "], ["147.78", "ok  so let's look at sorting "], ["149.47", "and we're going to look at two examples "], ["152.78", "the first example is shown with a piece of code "], ["154.955", "it's called selection sort "], ["157.14", "and the idea behind it is pretty simple "], ["159.55", "given a list  we're going to find the smallest element in the list and swap"], ["164.61", "it with the first element "], ["166.05", "and then we're going to take the remainder of the list  find the"], ["168.32", "smallest element of that  and swap it with the second element "], ["171.9", "and just keep doing that until we've done the overall search "], ["174.44", "so you can see that here "], ["175.84", "i'm running a loop over the range of the list "], ["178.68", "i start off saying that the location of the smallest thing is at i "], ["183.85", "the minimum index is i  and the minimum value is the"], ["186.01", "value of that point "], ["187.54", "i'm going to start j at 1 more than i  and then i'm going to run a loop where"], ["191.39", "i walk through the right hand side of the list  and i find basically the"], ["195.3", "smallest element "], ["196.73", "if the value at right here  at j is smaller than the smallest thing i've"], ["204.59", "seen so far  which includes the thing i'm about to swap with initially  then"], ["209.21", "i just change those things "], ["210.27", "so this basically says find the smallest value in the right of i  or"], ["217.35", "to the right of i  i should really say "], ["221.42", "and when i've done that  i'll go ahead and run through that entire loop  then"], ["225.54", "down here i just do a switch "], ["229.32", "i'll have to be careful "], ["230.36", "i'm going to temporarily hold onto the value at the ith location of the list"], ["233.875", "using temp right there  so that i can take the thing at the minimum"], ["238.55", "location  put it into i  and then take a temporary thing and put it there "], ["242.24", "so this is a standard way of doing a switch "], ["244.26", "i temporarily hold onto something  so i move into that location  and then"], ["247.69", "the temporary thing and put it into that spot "], ["250.92", "so you can see this is doing what's called selection search "], ["253.995", "i find the smallest thing  i move it to the front  i find the next smallest"], ["257.134", "thing  i move it to the next location  and i keep doing it "], ["260.519", "ok  let's look at this "], ["263.56", "first of all  let's analyze this selection sort "], ["266.67", "and one of the things again  i'd like to know is to be able to determine"], ["269.73", "does it really do the right thing "], ["271.81", "and i can do that by identifying what we'll call a looping variant "], ["275.68", "something we've seen before "], ["277.47", "and the looping variant basically says here's a property that holds true at"], ["282.44", "each stage through the loop "], ["284.16", "and if i can do that  then i can reason about does it satisfy the base"], ["287.21", "case  and does it satisfy that induction step of if it's true for a"], ["290.87", "smaller version of the problem  is it true for the next"], ["292.81", "version of the problem "], ["293.96", "and if i do that  then i can show that i'm done "], ["296.96", "the loop invariant here is pretty straightforward "], ["299.635", "it says given a prefix of the list  the first half of the list  and a"], ["303.79", "suffix of the list  everything after the ith location  then the looping"], ["308.66", "variant is going to be that every time i go through this loop  i'm going to"], ["311.34", "claim that the prefix is sorted  and that there's no element in the prefix"], ["316.76", "that's larger than the smallest element in the suffix "], ["319.04", "that everything in the prefix is smaller than everything in the suffix "], ["323.38", "ok  that's my looping variant "], ["324.19", "let's see if that holds true "], ["326.33", "well  in the base case  the prefix is just empty "], ["329.18", "so it's trivially sorted "], ["331.29", "the suffix is the whole list  and it's trivially the case that everything in"], ["335.28", "the prefix is smaller than the smallest thing in the suffix "], ["339.11", "ok  now what about the induction step "], ["342.07", "this basically says when i enter the recursive call  i'm assuming  or i"], ["345.7", "know that the prefix is sorted "], ["348.32", "so what does this say "], ["349.37", "the induction step says we're going to find the smallest element of the"], ["352.73", "suffix and move it to the end of the prefix "], ["356.32", "if the prefix was sorted beforehand  putting something that's larger than"], ["360.55", "everything in it at the end  says the prefix is still sorted  and since i"], ["364.06", "moved the smallest element  it says that there's nothing in the suffix"], ["368.62", "that is smaller than anything in the prefix "], ["371.22", "so the invariant was true before the move  the prefix was sorted after the"], ["375.95", "move  and i've guaranteed that in fact  i've done the right move-in "], ["380.34", "and when i exit  when i've gone all the way through all of"], ["383.35", "this  what do i have "], ["384.48", "the prefix is the entire list  suffix is empty  so i'm guaranteed that the"], ["389.17", "list is sorted "], ["390.74", "nice little induction proof that shows that i'm actually"], ["392.83", "doing the right thing "], ["394.79", "great "], ["395.57", "now  what's the complexity "], ["398.02", "well  what have i got "], ["400.33", "i've got two loops "], ["401.65", "this inner loop down here  we already know from earlier versions how to"], ["405.74", "estimate them "], ["406.53", "the complexity of that is on the order of the length of the list "], ["410.2", "yes  the list gets smaller each time through  but basically it's the order"], ["413.04", "of the length of the list  ok "], ["415.44", "so that's the inner loop "], ["416.92", "what's the outer loop "], ["417.9", "well  i go through the outer loop "], ["420.05", "basically order of the length of the list times "], ["423.45", "so i'm doing something of order length of l  and i'm doing that order length"], ["427.35", "of l times "], ["427.92", "so the overall complexity here is quadratic "], ["432.62", "it's length of the list squared  because i've got to through the list"], ["436.65", "at least once  and i've got to do that the length of the list times "], ["440.66", "and unfortunately  we know this is expensive "], ["442.53", "it's not what we would like "], ["444.47", "but it gives us a simple kind of sorting algorithm "], ["448.32", "now the question is  all right  if i just use selection sort  would i"], ["452.31", "really want to use this compared to linear search "], ["454.44", "and the answer's probably not "], ["455.47", "if it's quadratic to do the sort  and then i'm going to order log to do the"], ["459.38", "search  the search is nice  but in general it's going to be way too"], ["462.83", "expensive to do a quadratic thing as compared to a linear thing "], ["466.21", "i need to know  can i do better "]], "hX1aUXnDwgA": [["0.04", "professor  we've been looking at the idea of exhaustive search "], ["3.06", "and we just saw  when we want to do this on things that don't have a"], ["5.66", "finite number of choices  real value to floating point numbers  for"], ["8.9", "example  we've got a problem "], ["11.41", "we need to make the step size small in terms of how many"], ["14.12", "different things we sample "], ["15.19", "but as we keep making it smaller  it's going to make the search take longer"], ["18.15", "and longer "], ["18.945", "because if we're going to do it  we're going to put a lot of effort into"], ["20.72", "trying to find the right answer "], ["21.88", "so we'd really like to have a way of having things still be very efficient "], ["27.2", "yet  find the answer we want "], ["29.09", "and it turns out  for a lot of problems  we can do that using a"], ["31.47", "wonderful idea called bisection search "], ["34.63", "so what do we know "], ["35.31", "let's go back to the idea of trying to find the square root "], ["37.33", "we know that the square root of x lies somewhere between 0 and x "], ["40.87", "we're assuming x is positive just to make life a little easier for us "], ["44.82", "that's a mathematical fact "], ["46.85", "now  what we did was we said let's start with 0 "], ["49.94", "then  0 plus a little bit "], ["51.04", "then  0 plus 2 times a little bit  and then 0 times 3 times a little bit "], ["55.04", "trying all of those examples  until we got to something that was close enough"], ["58.46", "to the answer we wanted "], ["60.42", "that's exhaustive "], ["61.84", "rather than doing that  suppose instead we say  look  we know that the"], ["65.47", "square root of x is somewhere between 0 and x "], ["67.66", "so let's just pick a guess right here in the middle "], ["71.22", "let's call that g "], ["72.46", "let's just pick the midpoint between 0 and x and try it "], ["76.415", "now  if we're lucky  the answer is close enough and then we're done "], ["80.82", "that's unlikely "], ["82.21", "but even if that is not the case  we have a good situation "], ["85.96", "even if we're not close enough  we can now ask was that guess g"], ["89.91", "too big or too small "], ["92.51", "well  if g^2 is bigger than x  then we know that it's too big "], ["98.62", "we know that the square root has to lie somewhere between 0 and g "], ["104.11", "and that says we can now instantly just focus on this portion "], ["110.44", "doing that  we can  again  take the midpoint of that "], ["112.945", "let's call it another version of g "], ["114.48", "a new g "], ["115.38", "and again  we can say  is that close enough "], ["118.23", "if not  is it too big or too small "], ["121.15", "for example  in this case let's assume that g^2 is less than x "], ["125.09", "that says g is too small  and what does that say "], ["128.22", "it says  we know that the actual value has to lie somewhere between my new g"], ["134.655", "and the previous g that i guessed "], ["136.61", "and again  we can pick the midpoint and guess again "], ["140.87", "if this works  and it does  this is really cool "], ["144.2", "because it says  at each stage of this bisection search i'm cutting in half"], ["150.99", "the size of the range of values i have to look at "], ["153.48", "we're bisecting them  which is why it's called that "], ["155.58", "at each stage we reduce the range of values that we have to search by half "], ["159.66", "and that is going to be really powerful "], ["161.25", "rather than just at each stage throwing away a little bit  we're"], ["164.02", "cutting down the problem  a big portion  each time through "], ["168.26", "so can we capture that idea "], ["170.835", "the answer is  sure  and it's not that hard to do "], ["174.81", "again  there's some code "], ["176.31", "it looks a little bit daunting  but it's really not as bad as you think "], ["180.01", "what does it say "], ["181.41", "it says  i'm going to have some value of x i'm going to start with "], ["183.95", "ok  i'm going to pick an epsilon which is going to tell me how close i am "], ["186.69", "and i'm going to keep track of how many guesses i did as well "], ["189.92", "i'm going to set up  initially  a low and high value  which are to start"], ["194.18", "with 0 and the value of x "], ["196.02", "that's my range where which i want to be trying to do the computation "], ["201", "my answer is initially going to be the midpoint halfway between low and high "], ["207.09", "and then  what do i do "], ["208.07", "i run through one of these little loops where  again  i basically say "], ["212.67", "am i close enough "], ["215.72", "if this is true  then i'm too far apart "], ["221.44", "i'm not close enough "], ["223.33", "and in that case  well  i'll print out some information that tells me where i"], ["226.64", "currently am "], ["227.3", "i'll change the number of guesses and i'm about to make a new guess "], ["230.1", "and if i'm not close enough  what does it say to do "], ["232.11", "it says  if my current answer squared is less than x  i'm too small  and i'm"], ["237.63", "going to change the lower end to be that guess "], ["241.33", "i'm moving up the lower end "], ["243.53", "on the other hand  if answered squared is bigger than x  then i'm too high"], ["247.92", "and i'm going to reduce the high down to the answer "], ["255.2", "and i'm just going to keep doing that "], ["256.64", "if i keep doing that i'm going to keep chunking this thing in half  and"], ["260.67", "having done either of those two pieces i then change my"], ["263.88", "answer to gain the midpoint "], ["266.33", "and i do this one more time "], ["268.39", "so i'll just keep cycling through this  cutting in half each time  the"], ["272.07", "size of the problem until i get to something that's close enough "], ["275.42", "we hope "], ["276.93", "ok  let's see what happens if we do it "], ["279.79", "here's some code in my idle system that has it "], ["284.04", "it has exactly that "], ["285.49", "let's do this  basically  let's start with something simple which we said"], ["290.26", "was going to be 25 "], ["292.33", "and let's see what happens if we evaluate that "], ["296.87", "oh  look what happens "], ["298.14", "i start off  and let's look at that  i start off with a range"], ["301.13", "between 0 and 25 "], ["302.87", "and the answers is the midpoint "], ["305.16", "i then  cut down the high end "], ["307.76", "i then  cut down the high end again "], ["310.07", "i then  cut down the low end "], ["312.05", "i then  cut down the low end "], ["313.4", "and you can see at each stage it's reducing the range "], ["316.2", "and after only 13 guesses i get a pretty good guess for what the square"], ["320.78", "root of 25 is "], ["322.12", "it's not exact "], ["322.725", "i happen to know it's 5  but in only 13 guesses i got it "], ["325.81", "remember  last time we did 50 000 guesses to get to something that"], ["328.63", "wasn't  in fact  much better "], ["330.11", "in fact  it wasn't even as good as this guess "], ["332.83", "so notice how it's cutting down the problem at each stage "], ["336.33", "all right  let's go try this other version of this  right "], ["339.67", "12345 "], ["341.44", "let's see what happens if we find  using by section first  the square"], ["345.885", "root of that "], ["348.02", "we see it cranking along "], ["349.54", "wow  in 26 steps  it got to something that took a million steps the last"], ["356.07", "time around "], ["356.715", "in 26 steps it gets to a pretty good approximation "], ["359.956", "let's try something even bigger "], ["363.11", "let's see what happens if we do that one "], ["366.42", "all right "], ["369.6", "again  you can see if you look at these numbers how quickly"], ["371.88", "it's zeroing in "], ["372.93", "in only 36 steps  it got to the square root of a pretty big number "], ["378.02", "so in fact  this does it really well "], ["380.6", "what can we observe out of this "], ["383.19", "well  here are some things that we see "], ["384.56", "first of all  bisection search radically reduces"], ["387.25", "the computation time "], ["388.69", "and this is part of that original message that it's not just having a"], ["391.69", "fast computer "], ["392.45", "it's being smart about how we think about solving the problem "], ["395.68", "and in this case  being smart about how we generate the guess is going to"], ["398.47", "be really important "], ["400.25", "so when does this idea of bisection search work "], ["402.82", "well  it should work well on problems where there's a"], ["405.07", "sort of ordering property "], ["406.87", "meaning  that the value of the function being solved varies"], ["410.14", "monotonically with the input value "], ["412.51", "another way of saying it is here the value i'm looking for is g**2 "], ["415.89", "then  it grows as g grows "], ["417.83", "and that says that there's this nice ordering of the solutions or the"], ["421.55", "potential solutions  and so picking a midpoint gives me a good way of"], ["425.19", "cutting the problem in half at each stage "], ["428.03", "we're going to come back to this idea of bisection search"], ["430.26", "throughout the term "], ["431.16", "it's a really powerful tool  but you can already see how dramatically it"], ["434.95", "reduces the computational cost "]], "oGvdcAgHYxA": [["0.44", "john guttag  at the end of the previous segment  i promised that in"], ["3.96", "this segment we would address the question of how much is enough "], ["8.26", "now  i know that's a deep philosophical question  and i hope"], ["11.88", "you're not going to be disappointed when i tell you that's really not what"], ["16.09", "i want to talk about "], ["17.82", "instead  i want to talk about a much simpler question "], ["21.45", "how many samples do we need to look at in order to have a justified"], ["25.09", "confidence that something that is true about the samples is also true about"], ["30.86", "the population from which the samples were drawn "], ["35.39", "this is always an important question when we look at any statistical"], ["39.14", "measure because  as we've seen before  the samples might or might not be"], ["44.35", "representative of the entire population "], ["47.27", "the number of samples we need will depend upon the underlying variance in"], ["52.15", "the distribution from which we are drawing the samples "], ["55.62", "now  of course  unfortunately  we don't get to see the underlying"], ["59.14", "distribution "], ["60.18", "we only get to see the samples "], ["62.59", "so we have to turn this into a question about the samples "], ["66.45", "so let's look at the variance that we can measure by looking at the samples "], ["71.78", "essentially  what we do is we run multiple trials"], ["75.42", "getting different outcomes "], ["77.68", "and then we look at the variance in the outcomes of those trials "], ["82.32", "that's the reason that when we started looking at these simulations we always"], ["87.46", "ran multiple trials  rather than say  in the case of coin flipping  just"], ["92.39", "flip more coins "], ["93.99", "actually  we did just flip more coins  but that really wasn't the right thing"], ["98.14", "to do when we did it "], ["99.81", "all right "], ["100.18", "now  let's look at how we can formalize this notion of variance in"], ["105.02", "the outcomes "], ["106.34", "we do that using a notion you've all seen before "], ["109.4", "anyone who's taken an exam has been told  here is the average  here is the"], ["112.99", "standard deviation "], ["114.685", "and effectively  what the standard deviation is telling us is how many"], ["118.77", "values are close to the mean "], ["120.73", "if many values are close to the mean  then the standard deviation is small "], ["125.54", "if the values are far from the mean  the standard deviation will be large "], ["130.009", "looking at this a bit more carefully  we can define the standard deviation "], ["134.12", "typically written as sigma  of some set of results  written in this case"], ["139.55", "as big x  as the square root of 1 over the cardinality of x  that's the"], ["146.78", "number of samples we've drawn or the number of trials "], ["151.17", "multiplied by the summation over all the little x's in the big x of  x -"], ["159.12", "mu)^2   where mu is equal to the mean "], ["164.93", "so if you think of it  this make sense "], ["167.3", "we take the differences between the samples in the mean  square them "], ["172.26", "and that means that we don't have to care whether the differences are"], ["175.12", "negative or positive "], ["176.69", "and then divide them by the number of trials  and then take the square root"], ["181.2", "of the result "], ["182.82", "for those of you who prefer code to formulas  here's a simple"], ["187.19", "implementation of standard deviation "], ["189.48", "we take the mean by summing x  divide it by the float of the length of x "], ["195.01", "and then we simply iterate through x summing up the squares  the"], ["200.41", "differences  and then dividing it by the length and taking the square root "], ["205.78", "exactly what the formula said "], ["208.14", "we can use the notion of standard deviation to think about the"], ["211.76", "relationship between the number of samples we've looked at and how much"], ["215.9", "confidence we should have in the answer we've computed "], ["219.35", "let's now look at some code that does that "], ["222.89", "and we'll look at it only very briefly because it's so similar to code we've"], ["227.81", "looked at before "], ["229.22", "once again  i have something called flip-flop "], ["232.05", "whoop!"], ["232.88", "i always say flip-flop "], ["234.75", "i should say  once again we have something called flipplot  "], ["238.85", "as before  it will take a minimum and a maximum exponent "], ["243.33", "but this time  since we want to look at the standard deviation over"], ["246.81", "multiple trials  we also pass in a number of trials "], ["251.14", "and just to emphasize the fact that we're doing multiple trials  i've"], ["254.43", "factored a single trial out into a separate function of"], ["258.41", "the number of flips "], ["260.11", "other than that  there's really nothing very interesting to"], ["263.49", "look at in this code "], ["265.17", "it looks almost exactly the same as the code we've looked at before "], ["270.32", "so let's run it and see what we get "], ["273.05", "once again  we'll vary the exponents from 4 to 20 "], ["277.14", "and then we'll also do 20 trials "], ["281.97", "ok  let's go over to the powerpoint here now and look at the results "], ["287.56", "first of all  we're plotting the mean of the number of heads over the tails "], ["293.06", "the head/tails ratio  for the 20 trials "], ["297.1", "as before  we can see we have some variations with a small number of"], ["301.59", "flips  and then it stabilizes right around 1 "], ["306.83", "now we're going to see something that we didn't look at before  the standard"], ["309.97", "deviations "], ["311.24", "notice here as we increase the number of flips  the standard deviations"], ["315.73", "drops dramatically "], ["317.38", "in fact  it's dropping linearly "], ["319.74", "notice that both the x and the y-axis are logarithmic "], ["323.86", "so the fact that this is almost a straight line suggests that in fact"], ["328.42", "they're dropping linearly "], ["330.16", "and by the time we get to 10 to the 6th flips  the standard deviation of"], ["334.58", "the 20 trials is about 10 ^ -3 "], ["338.77", "since we know that the ratio is around 1  we see that standard deviation is"], ["343.66", "considerably smaller than the mean "], ["346.33", "that gives us every reason to believe that the result we have is a good one "], ["351.4", "now let's look at the main differences we've looked at before "], ["355.05", "but again  we're looking at the mean of the 20 trials "], ["359.01", "as expected  the absolute difference between the numbers of heads and tails"], ["362.81", "grows with the number of flips "], ["364.78", "however  since we're averaging the results over 20 trials  this is"], ["369.47", "considerably smoother than the plot we looked at before when we"], ["373.42", "only did one trial "], ["375.31", "now let's look at the standard deviation of the absolute difference "], ["379.95", "well  this might seem a little puzzling  because it looks like  as we"], ["384.1", "increase the number of flips  the standard deviation of the absolute"], ["389", "difference is increasing "], ["390.33", "well  it not only looks like it is  but it is "], ["393.58", "does this mean that as the number flips increases  we should have less"], ["397.23", "rather than more confidence in the estimate of the expected value of the"], ["401.38", "difference between heads and tails "], ["403.7", "no  it doesn't "], ["405.29", "what's going on is the standard deviation should always be viewed in"], ["409.22", "the context of the mean "], ["411.04", "after all  if the mean were a billion and the standard deviation 100  we"], ["416.16", "would view the dispersion of the data as small "], ["418.78", "on the other hand  if the mean were 100 and the standard deviation were"], ["422.02", "100  we would view the dispersion as enormous "], ["425.16", "so you'll recall that as we increase the number of flips  the number of"], ["430.52", "absolute difference got much larger "], ["433.04", "again  it's a logarithmic axis here "], ["435.62", "and so it's not at all surprising that the standard"], ["439", "deviation should get larger "], ["441.31", "the lesson here is that we really should not be using standard deviation"], ["446.74", "to compare different tests where the means are very different "], ["451.06", "there's another statistical measure we use for that  and we'll cover that"], ["454.69", "measure in the next segment "]], "YdT6gL3Cpss": [["0.335", "professor  one of our motivations for developing a mathematical model of the"], ["4.09", "phenomenon we're studying is so we can make predictions "], ["7.2", "often they're experiments that are either very difficult"], ["9.69", "to do or even dangerous "], ["12.48", "suppose you wanted to know what will happen if a nuclear reactor lost all"], ["16.28", "of its coolant "], ["17.065", "well that's not an experiment we really want to run  so instead we want"], ["20.99", "to develop models that will let us make predictions of what will happen"], ["24.41", "so that we can do the appropriate engineering "], ["28.49", "suppose someone came to you  as an expert  now  in the trajectory of"], ["32.32", "arrows  and said  how thick a shield would i need in order to protect"], ["37.63", "myself from an archery attack "], ["40.19", "let's see if we can use the measurements that we took in the"], ["43.9", "previous segment and help answer that question "], ["47.93", "so how would we use the model in order to make a prediction of the thickness"], ["52.52", "of the shield "], ["53.35", "and it's nice to use the model because there are times when experiments are"], ["58.15", "sort of impractical or inadvisable "], ["60.67", "so standing up with a thin shield and having somebody shoot arrows at you"], ["64.26", "might be a very bad idea because the shield might not do what it should "], ["69.02", "and somebody says  aha  it needs to be thicker  but it might be too late for"], ["72.65", "the participants in the experiment "], ["75.28", "so what we want to do is to figure out how to use our model  now  that we"], ["79.84", "have for the trajectory of an arrow  and see if we can deduce the"], ["84.31", "information we need "], ["86.4", "so we want to know the speed of the arrow as it reaches the target because"], ["89.55", "a combination of the speed of the arrow and the mass should tell us a"], ["92.33", "little bit about how thick the shield really needs to be "], ["96.44", "well  sadly  we didn't measure "], ["98.95", "did we measure it "], ["99.64", "so no  unfortunately we didn't measure the speed "], ["102.42", "but can we deduce it from the model "], ["105.56", "so what we want to do is  using the data that we got from curve fitting "], ["110.24", "can we deduce the speed is the arrow as it reaches the target "], ["114.28", "so i modified the code a little bit to print out the values for a  b  and c"], ["122.17", "for the parabolic fit "], ["124.98", "and these are the values that polyfit gave us back that describe the"], ["128.88", "parabola that match the "], ["131.25", "was able to predict the trajectory so well "], ["133.44", "and so i've written that out as an equation here that gives us the height"], ["136.77", "above the launch point as a function of the distance "], ["139.99", "so this is the distance  x  and this is the height  y  here "], ["143.79", "ok  so can we deduce the speed of the arrow "], ["146.22", "so that's our task here "], ["148.11", "so the first thing i'm going to do is to determine the highest point in the"], ["152.5", "trajectory "], ["153.08", "so i want to determine the peak value of y "], ["156.42", "and what i notice is that the peak value of y sort of happens midway"], ["161.29", "through the trajectory from the bow down to the target "], ["166.78", "and so this guy is at 1080 inches "], ["172.04", "and so that means that the midpoint here  ypeak  so this is going to be"], ["175.94", "ypeak here "], ["177.95", "the midpoint occurs at distance equal to 504 inches  which is exactly"], ["184.48", "halfway between the bow and the target "], ["187.98", "so i can actually plug that in here "], ["190.39", "so if i can go use my mathematical model now to compute ypeak  and"], ["196.09", "plugging in x equals 504  and doing the arithmetic i'm going to end up"], ["202.07", "with ypeak being 21 inches  which is 0 53 meters "], ["208.49", "ok "], ["209.43", "so my next step is to figure out the time it takes the arrow to fall from"], ["214.59", "its peak all the way down to the target "], ["217.47", "so as the arrow is falling here  as the arrow is falling from its peak"], ["222.61", "down to the target  the thing i'll observe is that's completely "], ["227.06", "that the acceleration in that direction is happening completely"], ["230.45", "because of the force of gravity on the arrow "], ["233.35", "and so time for arrow to fall from ypeak down to 0 "], ["239.54", "and so we know from sort of our newtonian physics that distance equals"], ["244.68", "one half at squared "], ["247.68", "and using that  i can sort of solve for t "], ["251.01", "and that's going to be the square root of twice the distance "], ["254.79", "so twice ypeak "], ["256.55", "and the acceleration due to gravity is g "], ["259.42", "and so if i go off and do that computation i discovered it t equals"], ["265.36", "0 326 seconds "], ["269.03", "so that's the amount of time it takes the arrow to travel from here to here"], ["273.38", "in terms of time "], ["274.76", "so this time is equal to 0 326 seconds "], ["279.5", "and the distance i'm traveling is from here to here  which is 504 inches from"], ["285.18", "the midpoint to the target "], ["287.84", "so  let's see "], ["288.62", "so the speed now  so now we can just quickly do the speed "], ["292.34", "ok "], ["292.675", "and so that's 540 inches is the distance in 0 326 seconds "], ["299.65", "and so if i do a little arithmetic that's 138 2 feet per second "], ["307.01", "well  i'm a little nervous about the "], ["310.11", "i can compute with lots of precision "], ["312.96", "i can do the arithmetic to lots and lots of decimal places  not clear how"], ["316.18", "accurate that is given the errors in the measurements and stuff "], ["319.15", "so maybe it would be safer to say it's somewhere around 135 feet per second "], ["324.08", "and we'll leave it at that "], ["325.91", "so what we've done here is to show with a bunch of "], ["330.61", "once we have a curve fitted model  we can actually derive implications of"], ["335.75", "that model and help us with some measure "], ["338.3", "determine some measurements  predict some measurements that we didn't"], ["341.52", "actually need to go take "], ["344.51", "this brings us to the end of our brief glimpse about how to use computation"], ["348.32", "to process and understand our data "], ["350.94", "if data crunching is in your future  you might want to learn much more"], ["354.08", "about statistics "], ["355.14", "it's the study of how to correctly process data and learn what"], ["359.13", "it has to tell us "], ["360.98", "i encourage you to learn more about the statistical tools that are"], ["364.43", "available in pylab "]], "wq8v7M3Szr0": [["1.11", "we've now seen a lot of things dealing with functions "], ["3.68", "they're going to be a really powerful tool for us "], ["6.16", "and let's deal with one last topic "], ["8", "we'll come back to it in more detail later on  but it's"], ["10.01", "useful to highlight now "], ["12.53", "and that builds on the idea that if functions help capture"], ["15.78", "modularity  they help capture computations that are useful"], ["18.35", "in multiple places  this also suggests that it can be useful"], ["22.28", "to group functions together that share a common theme "], ["25.56", "to capture them in something that sort of builds them into"], ["29.34", "an element that has a lot of coherence to it "], ["32.77", "and one way we can do that is to put functions dealing with"], ["36.05", "a common theme into a single python file  a  py file "], ["40.05", "and if we do that  then we can import those functions  that"], ["43.41", "file  into computations using the import command "], ["47.03", "and let me show you an example of that "], ["49.39", "here's some code that i could write that deals with some"], ["51.59", "simple geometry "], ["52.49", "so i've got a value for pi "], ["54.32", "i've got a way of computing the area of a circle "], ["56.85", "circumference of a circle "], ["58.55", "i could do the same thing with surfaces of spheres and"], ["60.7", "volumes of spheres "], ["61.49", "these computations that kind of mash"], ["63.34", "together with one another "], ["64.8", "and imagine i saved this away into a"], ["66.27", "file that i call circle py "], ["68.58", "and i've in fact got it loaded up ready to go "], ["71.13", "what i'd like to do is to say  so how would i use this "], ["74.4", "and the way i use it is that i simply  whether in a python"], ["77.86", "shell or in another file  say  let me import things in "], ["81.99", "so in particular  i'm going to go over here"], ["84.74", "and start up my python "], ["86.5", "and i am going to type in import circle "], ["93.35", "and that has now brought in the functions that i've"], ["95.6", "defined there "], ["96.77", "so i can define pi to have a really simple value  which i"], ["100.07", "know is not true "], ["101.24", "and if i say what's the value of pi  it prints out that "], ["105.2", "but if i say  so what is the value of pi that is stored in"], ["110.6", "the circle file "], ["112.41", "aha!"], ["113.62", "and so this notation right here  this dot notation  helps"], ["117.84", "me specify that "], ["118.87", "the dot basically says from the context circle  import the"], ["125.13", "variable pi "], ["126.88", "or similarly  from the context circle  import that variable"], ["131.3", "area  which is a function  and use it "], ["134.21", "so i can  for example  say  give me circle area of  i"], ["139.295", "don't know  three "], ["141.53", "and it brings in from the circle context the definition"], ["146.08", "of area that i created when i actually stored it away inside"], ["149.29", "of that file "], ["151.26", "so we'll come back to the dot notation  but it in essence"], ["153.83", "lets us create modules with commonality to them and import"], ["158.02", "things from them in a way that lets us use them very nicely "], ["161.58", "one way to do it is to simply say import from circle "], ["164.58", "and every time i want to use something from that file  i"], ["167.01", "need to specify it using that kind of a definition "], ["171.19", "there's another way i can do it  which is to say from"], ["174.15", "circle  from that context  just import everything "], ["178.52", "let's see what happens if i do that "], ["180", "so i'm going to go back over here and i'm going to say from"], ["182.47", "circle  import everything "], ["186.28", "i'm going to define pi again to be something"], ["189", "simple  like 3 0 "], ["191", "actually  i'll make it even dumber "], ["191.84", "let's say it's 0 0 "], ["193.98", "and if i say  what's the value of pi "], ["196.96", "ah  now i've gotten it in terms of that version "], ["200.62", "but if i say give me the area  it will get the area that was"], ["206.37", "created from circle "], ["208.94", "if i say i want the value of pi from circle "], ["212.36", "i can specify it "], ["213.95", "so this version of import basically says bring into my"], ["217.5", "environment all the things from circle "], ["219.85", "if there is no binding in my environment  i will look it up"], ["223.78", "from circle  but i don't have to specify it  which is why i"], ["226.3", "could just say area "], ["227.97", "but i can also make changes in this environment  overriding"], ["230.98", "what i saw in circle  such as this one  where i defined pi"], ["233.96", "to have the particular value that i said i wanted to have "], ["238.17", "that tool basically gives us a way to bring modules captured"], ["244.31", "together into our computation "], ["246.2", "and we're going to come back to that later on in the term "]], "NnWd5_X3n5s": [["0.375", "eric grimson  we just showed you a recursive algorithm "], ["2.785", "you may be a little worried about it "], ["4.4", "you may be going  ok  but how does it know which values of"], ["7.85", "the variables to use "], ["9.11", "because i'm not seeing any explicit"], ["10.56", "changes to those values "], ["12.15", "how does it make sure it really stops "], ["13.84", "why doesn't it just keep unwinding "], ["15.86", "didn't your high school geometry teacher never to use"], ["19.28", "definitions where you defined a term in terms of itself "], ["23.19", "good news is not to worry "], ["25.17", "and we've got a tool to help us understand that "], ["27.44", "let's go back and simply look at a simple call to recurmul "], ["31.27", "recursive multiplication  using that set of environments"], ["35.11", "to see how computation flows "], ["38.84", "so here's my code  i've just got a copy of it here "], ["42.56", "and in particular  if i evaluate this  or load this if"], ["46.53", "you like  into a python environment  a shell  we know"], ["50.27", "what's going to happen "], ["51.09", "which is we're going to create a frame over here  in which"], ["53.75", "that name  recurmul  is bound to a procedure object "], ["57.95", "and it's got inside of it both the parameter list and the"], ["61.88", "body  the set of things it's supposed to do "], ["64.92", "ok  let's see what would happen if we"], ["67.31", "actually called it "], ["68.82", "so let's call it "], ["71.6", "calling it says  i am going to evaluate this"], ["73.85", "expression down here "], ["75.67", "and i'm going to first get the value of recurmul "], ["77.97", "i know what that is "], ["78.8", "it's given by that pointer there "], ["80.4", "it's a procedure object "], ["82.01", "and so i know that calling it says i'm going to create a new"], ["85.53", "environment "], ["86.86", "it's going to inherit  or have as a parent  the same"], ["90.26", "environment that the procedure has  the environment that was"], ["94.73", "in place when we defined the procedure "], ["96.44", "so it was going to point to that frame "], ["98.62", "and inside of there  first i'm going to get the values of"], ["101.35", "these two expressions  and i'm going to then bind the"], ["105.88", "parameters of the procedure to those values "], ["108.88", "all right "], ["109.26", "i'm saying it in a long winded way  but"], ["110.85", "you've seen this before "], ["111.72", "we've now created a new environment in which a is"], ["113.93", "bound to 2 and b is bound to 3 "], ["116.21", "and relative to that environment we're going to"], ["118.2", "evaluate the body of this procedure "], ["121.21", "ok "], ["122.38", "let's start evaluating the body "], ["123.66", "the body says is b equal to 1 "], ["127.5", "no it isn't "], ["128.03", "it's 3 "], ["128.509", "so it's going to go to the else clause "], ["131.42", "and the else clause says  i'm going to return a value "], ["134.9", "great "], ["135.95", "i'm going to get a value back "], ["136.73", "and it says the value is going to be the value of a "], ["139.2", "remember i'm doing it relative to this frame here so i know"], ["141.83", "the value of a "], ["142.4", "it's 2 "], ["143.51", "and i'm going to add to a the value of the recursive call "], ["148.58", "another call to recurmul  with different arguments "], ["152.01", "now think of this very straightforwardly "], ["154.66", "this is python "], ["155.45", "this is an interpreter "], ["156.8", "that's an expression "], ["157.71", "it says to get the value of that expression  what do i"], ["160.17", "need to do "], ["160.84", "you need to get the value of recurmul  oh"], ["164.63", "that's it up here "], ["166.27", "ok "], ["167.156", "now  i need to get the value of a "], ["170.19", "and remember i'm doing it all with respect to this  and in"], ["172.96", "fact i should have done that better "], ["173.96", "to get the value of recurmul with respect to this"], ["176.15", "environment  i'm going to go up and find it there since"], ["178.54", "it's not bound down here "], ["180.56", "i need to get the value of a "], ["182.69", "there it is "], ["183.47", "and i need to get the value of b minus 1 "], ["185.5", "well that's easy "], ["186.17", "there's b  and subtract 1 from it "], ["188.79", "and since recurmul is a procedure  what"], ["191.4", "am i going to do "], ["192.82", "i'm going to create a new frame "], ["196.03", "cool "], ["196.65", "that's exactly what i want "], ["198.64", "because now i've got a computation that's taking"], ["200.85", "place with respect to this frame "], ["202.93", "and how did i set that up "], ["204.07", "well i got the value of a "], ["205.32", "i got the value of b minus 1 from here "], ["207.44", "i've bound those in this procedure because that's what"], ["210.64", "it tells me to do "], ["211.84", "and i'm now saying  evaluate this procedure in this frame "], ["215.85", "remember  when i get the value of this i'm going to give it"], ["218.19", "back to this frame to complete that addition "], ["220.26", "but i've now reduced this to simpler computation "], ["224.05", "notice something else really nice "], ["226", "you may have been saying  well  how do i keep track of"], ["228.15", "my iteration variable "], ["230.25", "it's not really iteration  it's recursion "], ["231.99", "but notice i've reduced b "], ["235.1", "and that's exactly what's going to happen "], ["236.75", "i'm going to keep unwinding this computation until i"], ["239.16", "ground that out "], ["240.81", "ok "], ["242.11", "we're now in pretty good shape "], ["243.23", "because what do we want to do "], ["245", "it says i need to get the value of this procedure  this"], ["248.19", "body  this body here  with respect to this environment "], ["252.65", "what do i do "], ["253.19", "well  let's say is b in this environment equal to 1 "], ["255.28", "no it is not "], ["256.7", "so i'm going to return the value of a from this"], ["259.67", "environment  which is right there  to"], ["263.7", "another procedure call "], ["264.99", "i'm doing another procedure call on recurmul "], ["268.17", "what do i do "], ["269.17", "from here  i get the value of recurmul "], ["271.655", "and i trace up that chain to say  there it"], ["273.81", "is  it's that procedure "], ["276.1", "i need to get the value of a in this environment "], ["278.83", "that's easy "], ["279.5", "and i need to get b minus 1 in this environment "], ["283.22", "well  that's easy  as well "], ["284.59", "b here is 2  i subtract 1  and that leads naturally to yet"], ["289.51", "another recursive call "], ["292.35", "now  you're going to be glad i only did this with 2 and 3 "], ["294.62", "and not 2 and 57 "], ["296.21", "but you get the idea "], ["297.96", "i am now evaluating the body of this procedure with respect"], ["301.76", "to this environment "], ["303.44", "what do i do "], ["304.53", "i say  ok  is b equal to 1 "], ["308.12", "thank god  it is "], ["309.34", "but if b is equal to 1  what do i do "], ["311.97", "i return the value of a from this environment "], ["316.7", "so that computation gives me back a 2 "], ["320.86", "that's really nice "], ["321.92", "because what does that say "], ["323.57", "it says  gee  here's where i am "], ["327.55", "i'm now returning the value of a because i was in that"], ["329.51", "recursive call "], ["330.3", "it says the value of this recursive call is 2 "], ["333.39", "i'm going to give it back to the place that was waiting for"], ["336.08", "it  which was up here "], ["337.45", "and what was i doing "], ["338.45", "i was waiting to get the recursive value "], ["340.6", "i want to add that to a "], ["343.25", "so the 2 is returned "], ["344.95", "it gets passed back up here "], ["346.18", "it gets added to that a "], ["348.32", "those two pieces come to there "], ["351.165", "and what was that doing "], ["352.35", "that was saying  give me a return of those two values to"], ["355.45", "the computation that was waiting here "], ["358.73", "so  in fact  the 4 and the 2 get added"], ["362.01", "together to give me 6 "], ["363.49", "and what was that doing "], ["364.37", "it says  i'm now done because that procedure said return"], ["367.39", "that value as the overall value "], ["369.55", "and that's going to get passed back up as the final value "], ["373.53", "cool "], ["374.89", "a little slow in our computation but really cool "], ["378.2", "and  in particular  let's see what we can deduce from this "], ["381.37", "each recursive call of a function creates its own"], ["384.3", "environment  with a local scoping of variables "], ["387.25", "so evaluating the body of the function in that environment"], ["390.2", "is going to be very clear as to which value of a and b it's"], ["393.28", "using  or any other variable that it's using "], ["396.05", "secondly  the bindings for variables in"], ["398.01", "each frame are distinct "], ["399.94", "and you saw that "], ["400.48", "i had a different frame for each one of them "], ["402.65", "and those bindings are not changed when we're doing the"], ["405.91", "recursive call "], ["406.89", "they are set up as we make the call "], ["408.9", "that is  i'm going to compute a new value of b  making it in"], ["411.59", "this case b minus 1  in order to bind it in the frame "], ["414.72", "but i'm not changing bindings in other frames when i'm"], ["417.59", "within one frame "], ["418.74", "i don't have access to them "], ["420.58", "and finally we can see that the flow of control can"], ["422.95", "naturally pass back to an earlier frame once the"], ["425.52", "function call returns its value "], ["428.25", "so  finally  you can also see that inherently this recursive"], ["433.7", "call to a function  if done right  has the equivalent of"], ["437.12", "reducing a state variable "], ["438.64", "we saw how each instance  each frame  had a different value"], ["442.27", "of b  that got smaller and smaller until we got down to"], ["445.07", "the base case "], ["446.29", "so we know that this is  in fact  going to ground out "], ["448.79", "it's going to complete its computation "], ["450.72", "that's great "], ["452.29", "so hopefully this gives you a better sense of how  in fact "], ["455.53", "the rules of evaluation allow a recursive thinking of a"], ["458.47", "problem to create a very nice version of the code "]], "oMr9PpDodl8": [["2.63", "does different types of mortgage calculations "], ["5.51", "our goal isn't so much to teach you about mortgages  but to show you how"], ["9.31", "to structure the code  and in particular  to try to take advantage"], ["13.28", "of earlier code that we write "], ["15.37", "so for example  after we've written the code that supports the"], ["18.16", "calculations for a fixed-rate mortgage  the code that does the"], ["22.42", "calculation for a fixed-rate mortgage with upfront points is very similar "], ["26.44", "and we want to build on the code that we wrote "], ["29.06", "classes are a convenient way to tackle many programming problems "], ["32.31", "for example  let's do a mortgage calculation "], ["34.5", "suppose i want to borrow $200 000 from the bank and pay it"], ["38.72", "back over 30 years "], ["40.45", "the bank has given me three options "], ["42.37", "a 30-year fixed rate mortgage of 7% per year  or they will let me pay some"], ["47.69", "amount of upfront money  called points  in this case $7 000 "], ["51.48", "in which case  they'll give me a 30-year fixed rate mortgage of 5% "], ["55.88", "or for four years  they'll let me pay a low interest rate  but then their"], ["60.82", "rate will almost double for the remaining 26 years of the mortgage "], ["66.42", "what i'd like to do is figure out  what's the best deal for me "], ["70.27", "let's write a program to tackle that idea "], ["73.15", "here's our program "], ["74.18", "we went out to the web to find the formula we can use to compute the"], ["78.18", "monthly payment for a mortgage of size loan at a monthly"], ["81.23", "rate of r for n months "], ["82.89", "so we embedded that in a little formula that we'll use below "], ["87.75", "we created a base class that we're going to use for all the mortgages "], ["91.56", "what the base class does is support the basic operation of a mortgage  and"], ["96.34", "then the details of the exact interest rates and payments and things like"], ["99.87", "that will describe it for each mortgage separately "], ["103.56", "so the mortgage base class remembers the principal amount of the loan  and"], ["109.47", "it computes the monthly percentage rate from the annual interest rate"], ["115.73", "that was passed in "], ["117.1", "it remembers the total number of months for the loan "], ["120.22", "it keeps a list of all the payments that have been made "], ["122.78", "and initially  nothing has been made "], ["125.38", "the amount that's owed is computed each month "], ["128.61", "so we start off owing the entire amount of the loan "], ["132.09", "we precompute the monthly payment using the formula from above "], ["137.12", "and we define a legend which we'll be using down here when the mortgage is"], ["141.483", "asked to print itself off "], ["143.11", "and we'll define that instance variable now in each of the particular"], ["147.06", "subclasses that we'll define "], ["150.32", "the mortgage supports the basic operation of making a monthly payment "], ["155.02", "so what we do is we take the precomputed monthly payment and we add"], ["158.645", "it to the end of the list of payments that we've made "], ["161.69", "we then have to compute the amount of the payment  which is going towards"], ["165.92", "reducing the principal amount of the loan "], ["168.41", "so we take the principal amount that's currently outstanding and multiply it"], ["172.58", "by the current monthly interest rate "], ["175.94", "that tells us how much of our payment is owed in interest "], ["182.16", "the remainder of that payment  then  is used to reduce"], ["185.25", "the outstanding principal "], ["186.66", "so at the end of each month  after we've made our payment  we can compute"], ["190.03", "the new amount owed by taking the old amount owed and subtracting from it"], ["195.035", "the reduction in principle from our payment "], ["197.39", "finally  we support the notion of figuring out what the mortgage has"], ["200.82", "cost us through all the currently made monthly payments by summing up all the"], ["208.12", "payments that we've made to date "], ["211.29", "ok "], ["211.86", "so here are the three types of mortgages we want to do "], ["216.27", "one is a fixed mortgage  which is really exactly what the mortgage base"], ["222.03", "class implements "], ["222.87", "so we simply make a subclass of the mortgage base class and go off and"], ["229.93", "initialize it with the parameters of the fixed rate loan  and provide a"], ["233.43", "legend that describes the loan "], ["235.53", "a fixed with points "], ["237.63", "so that's where we did an upfront payment "], ["239.61", "really is just like fixed "], ["240.99", "so in fact we've made it a subclass of the fixed rate mortgage "], ["244.76", "and the only distinction is that we have an initial payment up front that"], ["250.88", "is some percentage of the loan "], ["252.89", "in this case  we pass in the number of points "], ["256.48", "in this case  3 5 which we used to calculate the initial payment "], ["261.709", "and then after that  the mortgage works just as before  except hopefully"], ["266.35", "the interest rate here will be lower "], ["269.12", "and we have a different legend here which starts off with whatever value"], ["274.02", "was defined for the legend by the fixed rate superclass "], ["278.59", "and then we add to that an annotation indicating the"], ["280.96", "number of upfront points "], ["282.76", "and finally we have a two-rate mortgage  where the mortgage changes"], ["287.04", "rates from the teaser rate after a certain number of months "], ["290.91", "it will actually then increase to a larger rate "], ["295.96", "so what we do is remember all the different parameters "], ["298.86", "we have two mortgage rates in the initial term of the cheaper rate "], ["303.45", "we have a more complicated legend explaining the mortgage name "], ["310.5", "and then finally we look at the makepayment thing "], ["312.43", "and so what we've done is we override the makepayment method of the mortgage"], ["317.26", "base class  because we have a more complicated thing we need to do "], ["321.01", "so initially  we're going to go off and set up the mortgage to be being"], ["326.7", "paid off at the teaser rate  as if we had gotten a 5% loan "], ["336.72", "so we'll have a low monthly payment because the teaser rate is lower than"], ["341.56", "the final long-term rate "], ["343.6", "so once we've paid that number of monthly payments  the number of"], ["347.11", "teaser months  in this case 48 "], ["349.09", "what we're going to do is to say  aha  now we're going to up the rate to this"], ["353.97", "new higher percentage rate  and we'll recalculate the payment based on the"], ["357.78", "amount of the outstanding principal that's still left "], ["361.11", "and at that point  once we've made that adjustment  which we do at the"], ["366.1", "49th month  we go off and now just use the standard payment algorithm "], ["372.59", "it's just that the payment algorithm works with different parameters from"], ["376.46", "the 49th month and beyond "], ["381.24", "so now we're in a position to actually do some comparisons "], ["384.86", "and again  we've gone off and embedded our little mortgage reporting thing"], ["390.17", "inside a function  so that we can actually try many different"], ["392.7", "experiments with the different options "], ["395.51", "so what we do is we create some alternative mortgages "], ["400.58", "we create a fixed rate mortgage  the fixed rate with points  and the"], ["404.24", "two-rate mortgage based on the parameters that get passed in "], ["408.07", "and finally we run the experiment  where we're going to make 30 years"], ["411.75", "worth of payments on a monthly basis "], ["414.51", "and for each of the mortgages in our little list of sample mortgages  so"], ["419.04", "the fixed rate  the fixed rate with points  and the two-rate mortgage "], ["422.95", "we're going to make a monthly payment "], ["424.6", "in this case  a total of 30 years of payments on each of the mortgages "], ["428.58", "and finally  when we're done  we're going to report back the results "], ["432.08", "so the advantage  instead of filling a couple napkins full of calculations "], ["437.37", "by putting it into a program  we'll get to run many experiments in a row "], ["441.35", "all right "], ["441.66", "so this is the experiment that we want to run "], ["444.99", "we actually have the description of the problem we were facing "], ["448.84", "so i'm going to come over here and paste that in  and then ask python to"], ["452.66", "print out the answers "], ["453.85", "and we can see that if we have a fixed rate mortgage  we pay a"], ["456.7", "total of about $479 000 "], ["458.94", "a fixed rate with the upfront points was about a little over $390 000 "], ["464.3", "and then the two-rate mortgage  or the adjustable rate mortgage  you can see"], ["467.55", "here the total is $551 000 "], ["471.17", "so the best deal by almost $100 000 is the fixed-rate with points "], ["479.96", "well  we're not so much trying to teach you about mortgages "], ["482.18", "our real goal in going through this example was to sort of point out that"], ["486.5", "we can do a lot of code reuse here in describing the operation of the"], ["491.38", "different mortgages  by starting with a mortgage base class which describes"], ["495.49", "the operation of a fixed rate mortgage  and then elaborating on that"], ["500.59", "either with an upfront payment  and hopefully a lower interest rate  or a"], ["505.99", "fixed rate mortgage where the rate changes some number of"], ["508.92", "months into the thing "], ["509.92", "and so we've basically encapsulated the distinctions of our different"], ["513.46", "mortgages from a regular base fixed rate mortgage in each of"], ["518.299", "our different classes "]], "0bdP3Muy_kU": [["3.07", "it's a technique for finding solutions to graph optimization problems "], ["6.54", "finding shortest paths through a graph or anything that we can"], ["9.91", "represent as a graph "], ["11.57", "and it's one way of  in fact  exploring the space "], ["14.68", "there's an alternative also very common called breadth first search "], ["18.535", "and the difference is very simple "], ["20.64", "in depth first search  if you think of the tree of possibilities we're always"], ["24.41", "exploring things as deeply as we can  taking any path and trying to extend"], ["28.95", "it before we go back and look at other paths "], ["32.2", "instead of always going down the first branch of the tree  we could  instead "], ["35.92", "explore all the children of a node first before moving on "], ["39.97", "so  for example  we can look at all of the paths of length 1 and then all of"], ["45.08", "the paths of length 2 "], ["47.85", "and that idea is very simple "], ["49.17", "it says  given a node  we're going to look at each of its children and look"], ["52.37", "at all of those paths "], ["53.73", "so  going here then there then there then there "], ["56.29", "if none of those work  then we'll go over here and look at all of the"], ["59.6", "extensions "], ["60.54", "so  we're going to explore this tree if you like breadth first rather than"], ["65.78", "depth first "], ["67.34", "in the simple case of having no weight where we're simply looking for the"], ["70.41", "shortest path in terms of number of steps  we can stop as soon as we find"], ["74.18", "a solution since it's guaranteed to be a shortest path "], ["78.02", "great "], ["78.95", "how might this look "], ["80.71", "well  the overall description is much the same "], ["84.17", "we start at the root node as before "], ["86.4", "in this case  a set of possible paths is just that node "], ["89.37", "if we're not already at the solution  we're going to take the current path "], ["92.69", "and we're going to look at extending it by adding each child of that note"], ["96.39", "to the path  unless the child is already in the path "], ["98.75", "we'll avoid the loops "], ["100.57", "the only difference is that we're going to add these new paths  but"], ["104.07", "we're going to put them at the end of the set of options rather than at the"], ["107.66", "beginning  very simple difference "], ["110.13", "in fact  we're using a different data structure  a data"], ["112.21", "structure called the queue "], ["113.74", "but with that simple difference  the rest of this works exactly as before "], ["118.68", "so  the difference is we take the next option  we look at all the plausible"], ["122.18", "paths that extend it to its children  avoiding loops "], ["124.99", "but rather than putting those onto the front of what was a stack  we're going"], ["128.99", "to put them at the end of what we now call a queue "], ["133.26", "so  quickly  about a queue then "], ["134.78", "again  it's a different kind of data structure "], ["136.92", "it has what we call the first in  first out behavior "], ["140.54", "the first thing we put in is the first thing we take out or another way of"], ["143.27", "saying is we're always going to put things in at the end of the queue and"], ["146.31", "take them off the front "], ["147.36", "which means that things get looked at in the order in which they were placed"], ["150.63", "into that data structure "], ["152.51", "we refer to things as being pushed to the end of the queue and popping off"], ["155.92", "the front of the queue "], ["157.19", "very simple change "], ["158.84", "let's just sort of conceptionally look at the difference now in what happens"], ["162.47", "with my search if i'm now doing breadth first search "], ["165.58", "here  i start off at node 0 from node 0  i know there are two possible"], ["169.86", "extensions "], ["170.34", "so  let's just look at the nodes we visit "], ["173.02", "we're going to go first to node 01 and then to node 02 "], ["178.74", "since neither of those has found the solution  we've now explored all the"], ["181.72", "paths of length 1  we're going to go back to this node and look at"], ["186.3", "extensions there avoiding loops so we cut that off but now"], ["189.66", "looking at the path 012 "], ["191.76", "since there are no more paths of length 2 off of node 1  we'll carry on"], ["196.27", "and look at 023 and then 024 "], ["200.42", "and  again  having now explored all the paths of length 2  we'll go back"], ["205.01", "to the beginning and look at extensions of length 3  letting us"], ["209.6", "look at 0123 and 124 "], ["214.16", "then moving on to 0234 and  nice  to 0235  we've now found the solution "], ["221.04", "and we know we can stop because any other solution is either at this"], ["224.51", "level  meaning of the same length  or deeper down in the tree "], ["228.67", "meaning it's longer "], ["229.77", "so  we can stop "], ["231.43", "great "], ["232.77", "let's just look then at  going back to our search  how that data structure of"], ["236.88", "the queue deals with it "], ["238.08", "we start off with the queue just being of the element 0 "], ["242.41", "we pop it off and insert into it the two extensions which were 01 and 02 "], ["246.41", "they get put at the back of the queue  but in this case  the queue was empty "], ["249.86", "and then we pop this off "], ["253.15", "and we take its extension which is 012  and notice  we put it at the back"], ["258.63", "of the queue "], ["259.459", "that's different from what we had before "], ["261.459", "we then examine this "], ["263.18", "we pop that off "], ["264.2", "it's got two extensions and  notice  those get put at"], ["266.64", "the back of the queue "], ["267.7", "so that this now moves up to the front of queue "], ["270.62", "and we keep going "], ["272.04", "and that extension  or that variation  rather  of putting things at the end"], ["275.75", "of the data structure rather than at the beginning gives us a different"], ["279.09", "exploration of the space "], ["281.01", "what does the code look like "], ["283", "a little bit different  but still fairly easy to follow "], ["285.97", "again  we're going to give it a graph  a start node  an end node "], ["289.62", "and we're going to give it a data structure  we're just going to  out of"], ["292.2", "a bad pun kind of sense  call it a queue "], ["296.14", "our first path just is the path from the node's start "], ["300.81", "and we're going to put that onto the queue "], ["303.71", "and since we're representing the queue in this case as a list  we're just"], ["306.15", "going to append it  put it at the end "], ["308.29", "great "], ["309.59", "now what we do "], ["310.77", "we say well  if there's still something in the queue to look at  i"], ["314.2", "can keep going "], ["314.77", "if there isn't  then i'm done  and i'm stuck  i'm going to return no answer "], ["318.81", "if there is still something in the queue  i'm going to get the first"], ["322.62", "thing off of the queue "], ["324.48", "there's a pop operation  and it just takes it from element 0"], ["328.04", "and moves it out "], ["328.77", "and i'm going to call that 10 path "], ["330.74", "that's the path at the beginning of the queue "], ["333.08", "i'm going to get the last node in that path by just indexing into it to get"], ["336.9", "the last element of the path "], ["338.82", "i'm going to print out some information here "], ["340.43", "which is no big deal "], ["341.26", "and then what do i do "], ["342.14", "i say look  if that node is the thing i'm looking for  i'm done "], ["347.41", "just return the path "], ["349.7", "wonderful "], ["351.04", "if it's not  if i've still got something to go  so  i've got a node"], ["353.94", "up here  and i'm down to this node  and it's still not to the goal node"], ["358.28", "that i want  what do i do "], ["360.53", "i'm going to take the node i'm currently at  this one "], ["364.43", "i'm going to get all of its children  and for each one of those  i'm first"], ["368.54", "going to make sure that it's in fact something i can keep exploring "], ["371.56", "it's not already in the path "], ["373.54", "and if it's not in the path  i'm going to create a new path that says go from"], ["378.15", "there to each of the children in turn "], ["382.03", "and  oh  just put those at the end of the queue "], ["386.11", "wonderful "], ["387.02", "with that change that has added those new paths into the queue and having"], ["390.38", "done that  i'm going to be able to cycle back around because notice that"], ["393.63", "i'm not yet done "], ["394.65", "and i'm going to pick up the next element of the queue and keep going "], ["399.15", "straightforward algorithm  you could run it yourself to try "], ["401.99", "but it leads to a different exploration of the space "], ["405.05", "and that's a really valuable thing "]], "--7OF8BOElA": [["1.28", "eric grimson  before we leave the topic of complexity  i"], ["4.01", "want to do one last thing "], ["5.41", "i want to give you a visual way of getting a sense of how"], ["7.77", "different these different complexity classes are "], ["10.42", "because you might say  does it really matter if our code is"], ["13.58", "quadratic verses linear  or log-linear versus linear  or"], ["16.58", "linear versus log "], ["17.89", "and of course it depends on the size of the problem  of"], ["20.11", "the particular instance of the problem "], ["21.7", "but for large-scale problems  the complexity of the worst"], ["24.6", "case can make a really big difference  and i want to give"], ["27.12", "you a sense of that "], ["28.53", "so just to do that  let's take a look "], ["31.25", "what's the difference between a constant logarithm and a"], ["33.53", "logarithmic one "], ["34.91", "so what i've graphed here is the amount of time it takes"], ["37.95", "for an algorithm and this is constant that has 20 steps "], ["41.16", "versus a logarithmic algorithm that has only 1"], ["44.23", "step within its loop "], ["46.45", "and notice  it takes an argument of size almost"], ["49.69", "1 000 000 before the logarithmic algorithm actually"], ["53.23", "catches up to the constant one "], ["55.14", "of course  if the log algorithm had 20 steps  it"], ["58.11", "would scale up beyond this "], ["59.51", "but this is really a way of saying  log algorithms grow"], ["62.82", "incredibly slowly in complexity  and therefore they"], ["66.06", "are really powerful "], ["66.78", "and in many cases  they're almost as good as a constant"], ["69.73", "time algorithm "], ["71.32", "log grows slowly "], ["73.26", "log algorithms are great things if you can find them "], ["76.15", "they're not easy to find  but when they are "], ["78.04", "they are really great "], ["80.19", "ok "], ["80.42", "now let's move up that chain "], ["81.85", "what about the difference between a logarithmic"], ["83.91", "algorithm and a linear one "], ["85.86", "well  this difference is big "], ["87.975", "that blue line at the bottom is a logarithmic algorithm  or"], ["92.035", "a logarithmic function  if you like  and the green line  of"], ["94.72", "course  is the linear one "], ["96.27", "and you can see that the linear one starts to very"], ["99.05", "rapidly outstrip the logarithmic one "], ["102.41", "and again  the obvious observation here is that"], ["105.25", "logarithmic clearly is better for large-scale problems than"], ["107.9", "linear ones "], ["108.78", "doesn't imply linear is bad "], ["110.17", "it just says that log grows so much more slowly "], ["113.43", "if we can find a log algorithm  we"], ["115.13", "would really like one "], ["116.32", "let's move up the chain "], ["117.61", "linear verses log-linear  "], ["119.31", "and of course  we know that they're going to get worse "], ["121.32", "but here you can see that it doesn't grow as badly as you"], ["124.01", "might have expected "], ["125.5", "there's the linear algorithm in blue  down here  this one "], ["128.52", "here's log linear one "], ["129.81", "and it's growing  but the growth isn't horrible "], ["134.11", "and as a consequence  what this says is that while log n"], ["138.44", "may grow slowly  when it's multiplied by linear factors "], ["141", "the growth is much more than just the pure linear  but"], ["144.22", "they're still quite valuable  because the growth isn't"], ["146.61", "getting badly out of hand "], ["148.32", "all right "], ["149.05", "so we're seeing each one of these things has a little bit"], ["151.91", "more of a growth "], ["154.51", "let's look at another one here "], ["156.29", "log-linear versus quadratic "], ["159.93", "here you can see that the growth is actually going up"], ["162.08", "much more rapidly "], ["163.83", "quadratic is really starting to skyrocket "], ["166.62", "and again  the log-linear one looks like it's almost flat"], ["169.32", "compared to it "], ["170.94", "and again  the observation here is that quadratic is"], ["173.17", "often a problem "], ["175.23", "some problems are inherently quadratic  but if it's"], ["177.59", "possible  we always want to look for a"], ["179.28", "more efficient solution "], ["180.85", "and we're going to see that we're going to regularly see"], ["182.88", "quadratic problems  so this is an issue "], ["184.77", "if we can find a log-linear one  we'd like that solution "], ["187.97", "and then the final comparison kind of is mind-blowing "], ["193.46", "exponential algorithms are incredibly expensive "], ["196.75", "in fact  here's a plot over here of an exponential versus"], ["201.84", "a quadratic one  and you can't even see the graph because the"], ["204.61", "exponential one is tucked right along this graph here "], ["207.08", "blown up really fast "], ["208.46", "so if i replot this on a log scale which makes the"], ["212.83", "exponential one now linear  you can see how much better"], ["216.73", "the quadratic one is "], ["218.6", "and this is why that's a big difference "], ["220.5", "as i said earlier  there's a big difference"], ["222.25", "between n^2 and 2^n "], ["225.48", "2^n grows really fast compared to n^2  "], ["228.35", "and this is just a visual way of reminding you of that "], ["231.22", "if you can  you want to avoid an"], ["232.87", "exponential class algorithm "], ["234.46", "even a quadratic one is going to be better by a long shot"], ["237.38", "for any reasonable-size problem "], ["239.63", "so these little graphs just give you a way of visualizing"], ["242.46", "the differences between the different classes of"], ["244.8", "algorithms "], ["245.72", "and throughout the rest of the subject  we're going to come"], ["247.7", "back to talk about different classes of algorithms and what"], ["250.31", "their costs are "]]}